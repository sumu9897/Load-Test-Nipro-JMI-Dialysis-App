/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 117.0, "minX": 0.0, "maxY": 5418.0, "series": [{"data": [[0.0, 117.0], [0.1, 117.0], [0.2, 117.0], [0.3, 117.0], [0.4, 117.0], [0.5, 161.0], [0.6, 161.0], [0.7, 161.0], [0.8, 161.0], [0.9, 161.0], [1.0, 172.0], [1.1, 172.0], [1.2, 172.0], [1.3, 172.0], [1.4, 172.0], [1.5, 187.0], [1.6, 187.0], [1.7, 187.0], [1.8, 187.0], [1.9, 187.0], [2.0, 202.0], [2.1, 202.0], [2.2, 202.0], [2.3, 202.0], [2.4, 202.0], [2.5, 214.0], [2.6, 214.0], [2.7, 214.0], [2.8, 214.0], [2.9, 214.0], [3.0, 233.0], [3.1, 233.0], [3.2, 233.0], [3.3, 233.0], [3.4, 233.0], [3.5, 237.0], [3.6, 237.0], [3.7, 237.0], [3.8, 237.0], [3.9, 237.0], [4.0, 243.0], [4.1, 243.0], [4.2, 243.0], [4.3, 243.0], [4.4, 243.0], [4.5, 251.0], [4.6, 251.0], [4.7, 251.0], [4.8, 251.0], [4.9, 251.0], [5.0, 430.0], [5.1, 430.0], [5.2, 430.0], [5.3, 430.0], [5.4, 430.0], [5.5, 500.0], [5.6, 500.0], [5.7, 500.0], [5.8, 500.0], [5.9, 500.0], [6.0, 510.0], [6.1, 510.0], [6.2, 510.0], [6.3, 510.0], [6.4, 510.0], [6.5, 515.0], [6.6, 515.0], [6.7, 515.0], [6.8, 515.0], [6.9, 515.0], [7.0, 520.0], [7.1, 520.0], [7.2, 520.0], [7.3, 520.0], [7.4, 520.0], [7.5, 522.0], [7.6, 522.0], [7.7, 522.0], [7.8, 522.0], [7.9, 522.0], [8.0, 531.0], [8.1, 531.0], [8.2, 531.0], [8.3, 531.0], [8.4, 531.0], [8.5, 540.0], [8.6, 540.0], [8.7, 540.0], [8.8, 540.0], [8.9, 540.0], [9.0, 541.0], [9.1, 541.0], [9.2, 541.0], [9.3, 541.0], [9.4, 541.0], [9.5, 570.0], [9.6, 570.0], [9.7, 570.0], [9.8, 570.0], [9.9, 570.0], [10.0, 625.0], [10.1, 625.0], [10.2, 625.0], [10.3, 625.0], [10.4, 625.0], [10.5, 634.0], [10.6, 634.0], [10.7, 634.0], [10.8, 634.0], [10.9, 634.0], [11.0, 886.0], [11.1, 886.0], [11.2, 886.0], [11.3, 886.0], [11.4, 886.0], [11.5, 980.0], [11.6, 980.0], [11.7, 980.0], [11.8, 980.0], [11.9, 980.0], [12.0, 998.0], [12.1, 998.0], [12.2, 998.0], [12.3, 998.0], [12.4, 998.0], [12.5, 1008.0], [12.6, 1008.0], [12.7, 1008.0], [12.8, 1008.0], [12.9, 1008.0], [13.0, 1039.0], [13.1, 1039.0], [13.2, 1039.0], [13.3, 1039.0], [13.4, 1039.0], [13.5, 1042.0], [13.6, 1042.0], [13.7, 1042.0], [13.8, 1042.0], [13.9, 1042.0], [14.0, 1057.0], [14.1, 1057.0], [14.2, 1057.0], [14.3, 1057.0], [14.4, 1057.0], [14.5, 1074.0], [14.6, 1074.0], [14.7, 1074.0], [14.8, 1074.0], [14.9, 1074.0], [15.0, 1117.0], [15.1, 1117.0], [15.2, 1117.0], [15.3, 1117.0], [15.4, 1117.0], [15.5, 1132.0], [15.6, 1132.0], [15.7, 1132.0], [15.8, 1132.0], [15.9, 1132.0], [16.0, 1139.0], [16.1, 1139.0], [16.2, 1139.0], [16.3, 1139.0], [16.4, 1139.0], [16.5, 1257.0], [16.6, 1257.0], [16.7, 1257.0], [16.8, 1257.0], [16.9, 1257.0], [17.0, 1332.0], [17.1, 1332.0], [17.2, 1332.0], [17.3, 1332.0], [17.4, 1332.0], [17.5, 1364.0], [17.6, 1364.0], [17.7, 1364.0], [17.8, 1364.0], [17.9, 1364.0], [18.0, 1394.0], [18.1, 1394.0], [18.2, 1394.0], [18.3, 1394.0], [18.4, 1394.0], [18.5, 1424.0], [18.6, 1424.0], [18.7, 1424.0], [18.8, 1424.0], [18.9, 1424.0], [19.0, 1497.0], [19.1, 1497.0], [19.2, 1497.0], [19.3, 1497.0], [19.4, 1497.0], [19.5, 1500.0], [19.6, 1500.0], [19.7, 1500.0], [19.8, 1500.0], [19.9, 1500.0], [20.0, 1501.0], [20.1, 1501.0], [20.2, 1501.0], [20.3, 1501.0], [20.4, 1501.0], [20.5, 1518.0], [20.6, 1518.0], [20.7, 1518.0], [20.8, 1518.0], [20.9, 1518.0], [21.0, 1527.0], [21.1, 1527.0], [21.2, 1527.0], [21.3, 1527.0], [21.4, 1527.0], [21.5, 1532.0], [21.6, 1532.0], [21.7, 1532.0], [21.8, 1532.0], [21.9, 1532.0], [22.0, 1536.0], [22.1, 1536.0], [22.2, 1536.0], [22.3, 1536.0], [22.4, 1536.0], [22.5, 1561.0], [22.6, 1561.0], [22.7, 1561.0], [22.8, 1561.0], [22.9, 1561.0], [23.0, 1675.0], [23.1, 1675.0], [23.2, 1675.0], [23.3, 1675.0], [23.4, 1675.0], [23.5, 1745.0], [23.6, 1745.0], [23.7, 1745.0], [23.8, 1745.0], [23.9, 1745.0], [24.0, 1753.0], [24.1, 1753.0], [24.2, 1753.0], [24.3, 1753.0], [24.4, 1753.0], [24.5, 1755.0], [24.6, 1755.0], [24.7, 1755.0], [24.8, 1755.0], [24.9, 1755.0], [25.0, 1759.0], [25.1, 1759.0], [25.2, 1759.0], [25.3, 1759.0], [25.4, 1759.0], [25.5, 1759.0], [25.6, 1759.0], [25.7, 1759.0], [25.8, 1759.0], [25.9, 1759.0], [26.0, 1761.0], [26.1, 1761.0], [26.2, 1761.0], [26.3, 1761.0], [26.4, 1761.0], [26.5, 1761.0], [26.6, 1761.0], [26.7, 1761.0], [26.8, 1761.0], [26.9, 1761.0], [27.0, 1764.0], [27.1, 1764.0], [27.2, 1764.0], [27.3, 1764.0], [27.4, 1764.0], [27.5, 1817.0], [27.6, 1817.0], [27.7, 1817.0], [27.8, 1817.0], [27.9, 1817.0], [28.0, 1839.0], [28.1, 1839.0], [28.2, 1839.0], [28.3, 1839.0], [28.4, 1839.0], [28.5, 1843.0], [28.6, 1843.0], [28.7, 1843.0], [28.8, 1843.0], [28.9, 1843.0], [29.0, 1854.0], [29.1, 1854.0], [29.2, 1854.0], [29.3, 1854.0], [29.4, 1854.0], [29.5, 1873.0], [29.6, 1873.0], [29.7, 1873.0], [29.8, 1873.0], [29.9, 1873.0], [30.0, 2091.0], [30.1, 2091.0], [30.2, 2091.0], [30.3, 2091.0], [30.4, 2091.0], [30.5, 2095.0], [30.6, 2095.0], [30.7, 2095.0], [30.8, 2095.0], [30.9, 2095.0], [31.0, 2096.0], [31.1, 2096.0], [31.2, 2096.0], [31.3, 2096.0], [31.4, 2096.0], [31.5, 2109.0], [31.6, 2109.0], [31.7, 2109.0], [31.8, 2109.0], [31.9, 2109.0], [32.0, 2112.0], [32.1, 2112.0], [32.2, 2112.0], [32.3, 2112.0], [32.4, 2112.0], [32.5, 2119.0], [32.6, 2119.0], [32.7, 2119.0], [32.8, 2119.0], [32.9, 2119.0], [33.0, 2122.0], [33.1, 2122.0], [33.2, 2122.0], [33.3, 2122.0], [33.4, 2122.0], [33.5, 2122.0], [33.6, 2122.0], [33.7, 2122.0], [33.8, 2122.0], [33.9, 2122.0], [34.0, 2125.0], [34.1, 2125.0], [34.2, 2125.0], [34.3, 2125.0], [34.4, 2125.0], [34.5, 2146.0], [34.6, 2146.0], [34.7, 2146.0], [34.8, 2146.0], [34.9, 2146.0], [35.0, 2151.0], [35.1, 2151.0], [35.2, 2151.0], [35.3, 2151.0], [35.4, 2151.0], [35.5, 2253.0], [35.6, 2253.0], [35.7, 2253.0], [35.8, 2253.0], [35.9, 2253.0], [36.0, 2270.0], [36.1, 2270.0], [36.2, 2270.0], [36.3, 2270.0], [36.4, 2270.0], [36.5, 2405.0], [36.6, 2405.0], [36.7, 2405.0], [36.8, 2405.0], [36.9, 2405.0], [37.0, 2410.0], [37.1, 2410.0], [37.2, 2410.0], [37.3, 2410.0], [37.4, 2410.0], [37.5, 2415.0], [37.6, 2415.0], [37.7, 2415.0], [37.8, 2415.0], [37.9, 2415.0], [38.0, 2417.0], [38.1, 2417.0], [38.2, 2417.0], [38.3, 2417.0], [38.4, 2417.0], [38.5, 2438.0], [38.6, 2438.0], [38.7, 2438.0], [38.8, 2438.0], [38.9, 2438.0], [39.0, 2444.0], [39.1, 2444.0], [39.2, 2444.0], [39.3, 2444.0], [39.4, 2444.0], [39.5, 2449.0], [39.6, 2449.0], [39.7, 2449.0], [39.8, 2449.0], [39.9, 2449.0], [40.0, 2455.0], [40.1, 2455.0], [40.2, 2455.0], [40.3, 2455.0], [40.4, 2455.0], [40.5, 2456.0], [40.6, 2456.0], [40.7, 2456.0], [40.8, 2456.0], [40.9, 2456.0], [41.0, 2491.0], [41.1, 2491.0], [41.2, 2491.0], [41.3, 2491.0], [41.4, 2491.0], [41.5, 2500.0], [41.6, 2500.0], [41.7, 2500.0], [41.8, 2500.0], [41.9, 2500.0], [42.0, 2501.0], [42.1, 2501.0], [42.2, 2501.0], [42.3, 2501.0], [42.4, 2501.0], [42.5, 2511.0], [42.6, 2511.0], [42.7, 2511.0], [42.8, 2511.0], [42.9, 2511.0], [43.0, 2535.0], [43.1, 2535.0], [43.2, 2535.0], [43.3, 2535.0], [43.4, 2535.0], [43.5, 2540.0], [43.6, 2540.0], [43.7, 2540.0], [43.8, 2540.0], [43.9, 2540.0], [44.0, 2676.0], [44.1, 2676.0], [44.2, 2676.0], [44.3, 2676.0], [44.4, 2676.0], [44.5, 2677.0], [44.6, 2677.0], [44.7, 2677.0], [44.8, 2677.0], [44.9, 2677.0], [45.0, 2729.0], [45.1, 2729.0], [45.2, 2729.0], [45.3, 2729.0], [45.4, 2729.0], [45.5, 2795.0], [45.6, 2795.0], [45.7, 2795.0], [45.8, 2795.0], [45.9, 2795.0], [46.0, 2796.0], [46.1, 2796.0], [46.2, 2796.0], [46.3, 2796.0], [46.4, 2796.0], [46.5, 2797.0], [46.6, 2797.0], [46.7, 2797.0], [46.8, 2797.0], [46.9, 2797.0], [47.0, 2803.0], [47.1, 2803.0], [47.2, 2803.0], [47.3, 2803.0], [47.4, 2803.0], [47.5, 2817.0], [47.6, 2817.0], [47.7, 2817.0], [47.8, 2817.0], [47.9, 2817.0], [48.0, 2836.0], [48.1, 2836.0], [48.2, 2836.0], [48.3, 2836.0], [48.4, 2836.0], [48.5, 2845.0], [48.6, 2845.0], [48.7, 2845.0], [48.8, 2845.0], [48.9, 2845.0], [49.0, 2852.0], [49.1, 2852.0], [49.2, 2852.0], [49.3, 2852.0], [49.4, 2852.0], [49.5, 2866.0], [49.6, 2866.0], [49.7, 2866.0], [49.8, 2866.0], [49.9, 2866.0], [50.0, 2872.0], [50.1, 2872.0], [50.2, 2872.0], [50.3, 2872.0], [50.4, 2872.0], [50.5, 2878.0], [50.6, 2878.0], [50.7, 2878.0], [50.8, 2878.0], [50.9, 2878.0], [51.0, 2883.0], [51.1, 2883.0], [51.2, 2883.0], [51.3, 2883.0], [51.4, 2883.0], [51.5, 2898.0], [51.6, 2898.0], [51.7, 2898.0], [51.8, 2898.0], [51.9, 2898.0], [52.0, 2933.0], [52.1, 2933.0], [52.2, 2933.0], [52.3, 2933.0], [52.4, 2933.0], [52.5, 2938.0], [52.6, 2938.0], [52.7, 2938.0], [52.8, 2938.0], [52.9, 2938.0], [53.0, 3053.0], [53.1, 3053.0], [53.2, 3053.0], [53.3, 3053.0], [53.4, 3053.0], [53.5, 3060.0], [53.6, 3060.0], [53.7, 3060.0], [53.8, 3060.0], [53.9, 3060.0], [54.0, 3066.0], [54.1, 3066.0], [54.2, 3066.0], [54.3, 3066.0], [54.4, 3066.0], [54.5, 3093.0], [54.6, 3093.0], [54.7, 3093.0], [54.8, 3093.0], [54.9, 3093.0], [55.0, 3147.0], [55.1, 3147.0], [55.2, 3147.0], [55.3, 3147.0], [55.4, 3147.0], [55.5, 3152.0], [55.6, 3152.0], [55.7, 3152.0], [55.8, 3152.0], [55.9, 3152.0], [56.0, 3175.0], [56.1, 3175.0], [56.2, 3175.0], [56.3, 3175.0], [56.4, 3175.0], [56.5, 3236.0], [56.6, 3236.0], [56.7, 3236.0], [56.8, 3236.0], [56.9, 3236.0], [57.0, 3241.0], [57.1, 3241.0], [57.2, 3241.0], [57.3, 3241.0], [57.4, 3241.0], [57.5, 3252.0], [57.6, 3252.0], [57.7, 3252.0], [57.8, 3252.0], [57.9, 3252.0], [58.0, 3258.0], [58.1, 3258.0], [58.2, 3258.0], [58.3, 3258.0], [58.4, 3258.0], [58.5, 3261.0], [58.6, 3261.0], [58.7, 3261.0], [58.8, 3261.0], [58.9, 3261.0], [59.0, 3262.0], [59.1, 3262.0], [59.2, 3262.0], [59.3, 3262.0], [59.4, 3262.0], [59.5, 3267.0], [59.6, 3267.0], [59.7, 3267.0], [59.8, 3267.0], [59.9, 3267.0], [60.0, 3279.0], [60.1, 3279.0], [60.2, 3279.0], [60.3, 3279.0], [60.4, 3279.0], [60.5, 3279.0], [60.6, 3279.0], [60.7, 3279.0], [60.8, 3279.0], [60.9, 3279.0], [61.0, 3294.0], [61.1, 3294.0], [61.2, 3294.0], [61.3, 3294.0], [61.4, 3294.0], [61.5, 3296.0], [61.6, 3296.0], [61.7, 3296.0], [61.8, 3296.0], [61.9, 3296.0], [62.0, 3299.0], [62.1, 3299.0], [62.2, 3299.0], [62.3, 3299.0], [62.4, 3299.0], [62.5, 3299.0], [62.6, 3299.0], [62.7, 3299.0], [62.8, 3299.0], [62.9, 3299.0], [63.0, 3299.0], [63.1, 3299.0], [63.2, 3299.0], [63.3, 3299.0], [63.4, 3299.0], [63.5, 3305.0], [63.6, 3305.0], [63.7, 3305.0], [63.8, 3305.0], [63.9, 3305.0], [64.0, 3306.0], [64.1, 3306.0], [64.2, 3306.0], [64.3, 3306.0], [64.4, 3306.0], [64.5, 3309.0], [64.6, 3309.0], [64.7, 3309.0], [64.8, 3309.0], [64.9, 3309.0], [65.0, 3314.0], [65.1, 3314.0], [65.2, 3314.0], [65.3, 3314.0], [65.4, 3314.0], [65.5, 3315.0], [65.6, 3315.0], [65.7, 3315.0], [65.8, 3315.0], [65.9, 3315.0], [66.0, 3395.0], [66.1, 3395.0], [66.2, 3395.0], [66.3, 3395.0], [66.4, 3395.0], [66.5, 3410.0], [66.6, 3410.0], [66.7, 3410.0], [66.8, 3410.0], [66.9, 3410.0], [67.0, 3413.0], [67.1, 3413.0], [67.2, 3413.0], [67.3, 3413.0], [67.4, 3413.0], [67.5, 3467.0], [67.6, 3467.0], [67.7, 3467.0], [67.8, 3467.0], [67.9, 3467.0], [68.0, 3558.0], [68.1, 3558.0], [68.2, 3558.0], [68.3, 3558.0], [68.4, 3558.0], [68.5, 3593.0], [68.6, 3593.0], [68.7, 3593.0], [68.8, 3593.0], [68.9, 3593.0], [69.0, 3624.0], [69.1, 3624.0], [69.2, 3624.0], [69.3, 3624.0], [69.4, 3624.0], [69.5, 3650.0], [69.6, 3650.0], [69.7, 3650.0], [69.8, 3650.0], [69.9, 3650.0], [70.0, 3668.0], [70.1, 3668.0], [70.2, 3668.0], [70.3, 3668.0], [70.4, 3668.0], [70.5, 3690.0], [70.6, 3690.0], [70.7, 3690.0], [70.8, 3690.0], [70.9, 3690.0], [71.0, 3698.0], [71.1, 3698.0], [71.2, 3698.0], [71.3, 3698.0], [71.4, 3698.0], [71.5, 3713.0], [71.6, 3713.0], [71.7, 3713.0], [71.8, 3713.0], [71.9, 3713.0], [72.0, 3729.0], [72.1, 3729.0], [72.2, 3729.0], [72.3, 3729.0], [72.4, 3729.0], [72.5, 3731.0], [72.6, 3731.0], [72.7, 3731.0], [72.8, 3731.0], [72.9, 3731.0], [73.0, 3735.0], [73.1, 3735.0], [73.2, 3735.0], [73.3, 3735.0], [73.4, 3735.0], [73.5, 3736.0], [73.6, 3736.0], [73.7, 3736.0], [73.8, 3736.0], [73.9, 3736.0], [74.0, 3744.0], [74.1, 3744.0], [74.2, 3744.0], [74.3, 3744.0], [74.4, 3744.0], [74.5, 3744.0], [74.6, 3744.0], [74.7, 3744.0], [74.8, 3744.0], [74.9, 3744.0], [75.0, 3760.0], [75.1, 3760.0], [75.2, 3760.0], [75.3, 3760.0], [75.4, 3760.0], [75.5, 3790.0], [75.6, 3790.0], [75.7, 3790.0], [75.8, 3790.0], [75.9, 3790.0], [76.0, 3791.0], [76.1, 3791.0], [76.2, 3791.0], [76.3, 3791.0], [76.4, 3791.0], [76.5, 3793.0], [76.6, 3793.0], [76.7, 3793.0], [76.8, 3793.0], [76.9, 3793.0], [77.0, 3798.0], [77.1, 3798.0], [77.2, 3798.0], [77.3, 3798.0], [77.4, 3798.0], [77.5, 3800.0], [77.6, 3800.0], [77.7, 3800.0], [77.8, 3800.0], [77.9, 3800.0], [78.0, 3820.0], [78.1, 3820.0], [78.2, 3820.0], [78.3, 3820.0], [78.4, 3820.0], [78.5, 3861.0], [78.6, 3861.0], [78.7, 3861.0], [78.8, 3861.0], [78.9, 3861.0], [79.0, 3887.0], [79.1, 3887.0], [79.2, 3887.0], [79.3, 3887.0], [79.4, 3887.0], [79.5, 3924.0], [79.6, 3924.0], [79.7, 3924.0], [79.8, 3924.0], [79.9, 3924.0], [80.0, 3961.0], [80.1, 3961.0], [80.2, 3961.0], [80.3, 3961.0], [80.4, 3961.0], [80.5, 4016.0], [80.6, 4016.0], [80.7, 4016.0], [80.8, 4016.0], [80.9, 4016.0], [81.0, 4026.0], [81.1, 4026.0], [81.2, 4026.0], [81.3, 4026.0], [81.4, 4026.0], [81.5, 4027.0], [81.6, 4027.0], [81.7, 4027.0], [81.8, 4027.0], [81.9, 4027.0], [82.0, 4037.0], [82.1, 4037.0], [82.2, 4037.0], [82.3, 4037.0], [82.4, 4037.0], [82.5, 4101.0], [82.6, 4101.0], [82.7, 4101.0], [82.8, 4101.0], [82.9, 4101.0], [83.0, 4146.0], [83.1, 4146.0], [83.2, 4146.0], [83.3, 4146.0], [83.4, 4146.0], [83.5, 4221.0], [83.6, 4221.0], [83.7, 4221.0], [83.8, 4221.0], [83.9, 4221.0], [84.0, 4222.0], [84.1, 4222.0], [84.2, 4222.0], [84.3, 4222.0], [84.4, 4222.0], [84.5, 4227.0], [84.6, 4227.0], [84.7, 4227.0], [84.8, 4227.0], [84.9, 4227.0], [85.0, 4233.0], [85.1, 4233.0], [85.2, 4233.0], [85.3, 4233.0], [85.4, 4233.0], [85.5, 4236.0], [85.6, 4236.0], [85.7, 4236.0], [85.8, 4236.0], [85.9, 4236.0], [86.0, 4244.0], [86.1, 4244.0], [86.2, 4244.0], [86.3, 4244.0], [86.4, 4244.0], [86.5, 4246.0], [86.6, 4246.0], [86.7, 4246.0], [86.8, 4246.0], [86.9, 4246.0], [87.0, 4266.0], [87.1, 4266.0], [87.2, 4266.0], [87.3, 4266.0], [87.4, 4266.0], [87.5, 4269.0], [87.6, 4269.0], [87.7, 4269.0], [87.8, 4269.0], [87.9, 4269.0], [88.0, 4273.0], [88.1, 4273.0], [88.2, 4273.0], [88.3, 4273.0], [88.4, 4273.0], [88.5, 4290.0], [88.6, 4290.0], [88.7, 4290.0], [88.8, 4290.0], [88.9, 4290.0], [89.0, 4295.0], [89.1, 4295.0], [89.2, 4295.0], [89.3, 4295.0], [89.4, 4295.0], [89.5, 4307.0], [89.6, 4307.0], [89.7, 4307.0], [89.8, 4307.0], [89.9, 4307.0], [90.0, 4309.0], [90.1, 4309.0], [90.2, 4309.0], [90.3, 4309.0], [90.4, 4309.0], [90.5, 4309.0], [90.6, 4309.0], [90.7, 4309.0], [90.8, 4309.0], [90.9, 4309.0], [91.0, 4313.0], [91.1, 4313.0], [91.2, 4313.0], [91.3, 4313.0], [91.4, 4313.0], [91.5, 4317.0], [91.6, 4317.0], [91.7, 4317.0], [91.8, 4317.0], [91.9, 4317.0], [92.0, 4317.0], [92.1, 4317.0], [92.2, 4317.0], [92.3, 4317.0], [92.4, 4317.0], [92.5, 4319.0], [92.6, 4319.0], [92.7, 4319.0], [92.8, 4319.0], [92.9, 4319.0], [93.0, 4319.0], [93.1, 4319.0], [93.2, 4319.0], [93.3, 4319.0], [93.4, 4319.0], [93.5, 4319.0], [93.6, 4319.0], [93.7, 4319.0], [93.8, 4319.0], [93.9, 4319.0], [94.0, 4320.0], [94.1, 4320.0], [94.2, 4320.0], [94.3, 4320.0], [94.4, 4320.0], [94.5, 4322.0], [94.6, 4322.0], [94.7, 4322.0], [94.8, 4322.0], [94.9, 4322.0], [95.0, 4323.0], [95.1, 4323.0], [95.2, 4323.0], [95.3, 4323.0], [95.4, 4323.0], [95.5, 4330.0], [95.6, 4330.0], [95.7, 4330.0], [95.8, 4330.0], [95.9, 4330.0], [96.0, 4331.0], [96.1, 4331.0], [96.2, 4331.0], [96.3, 4331.0], [96.4, 4331.0], [96.5, 4332.0], [96.6, 4332.0], [96.7, 4332.0], [96.8, 4332.0], [96.9, 4332.0], [97.0, 4334.0], [97.1, 4334.0], [97.2, 4334.0], [97.3, 4334.0], [97.4, 4334.0], [97.5, 4335.0], [97.6, 4335.0], [97.7, 4335.0], [97.8, 4335.0], [97.9, 4335.0], [98.0, 4336.0], [98.1, 4336.0], [98.2, 4336.0], [98.3, 4336.0], [98.4, 4336.0], [98.5, 4343.0], [98.6, 4343.0], [98.7, 4343.0], [98.8, 4343.0], [98.9, 4343.0], [99.0, 4348.0], [99.1, 4348.0], [99.2, 4348.0], [99.3, 4348.0], [99.4, 4348.0], [99.5, 4368.0], [99.6, 4368.0], [99.7, 4368.0], [99.8, 4368.0], [99.9, 4368.0]], "isOverall": false, "label": "Appointment List-0", "isController": false}, {"data": [[0.0, 161.0], [0.1, 161.0], [0.2, 161.0], [0.3, 161.0], [0.4, 161.0], [0.5, 167.0], [0.6, 167.0], [0.7, 167.0], [0.8, 167.0], [0.9, 167.0], [1.0, 167.0], [1.1, 167.0], [1.2, 167.0], [1.3, 167.0], [1.4, 167.0], [1.5, 168.0], [1.6, 168.0], [1.7, 168.0], [1.8, 168.0], [1.9, 168.0], [2.0, 169.0], [2.1, 169.0], [2.2, 169.0], [2.3, 169.0], [2.4, 169.0], [2.5, 170.0], [2.6, 170.0], [2.7, 170.0], [2.8, 170.0], [2.9, 170.0], [3.0, 170.0], [3.1, 170.0], [3.2, 170.0], [3.3, 170.0], [3.4, 170.0], [3.5, 172.0], [3.6, 172.0], [3.7, 172.0], [3.8, 172.0], [3.9, 172.0], [4.0, 172.0], [4.1, 172.0], [4.2, 172.0], [4.3, 172.0], [4.4, 172.0], [4.5, 173.0], [4.6, 173.0], [4.7, 173.0], [4.8, 173.0], [4.9, 173.0], [5.0, 178.0], [5.1, 178.0], [5.2, 178.0], [5.3, 178.0], [5.4, 178.0], [5.5, 178.0], [5.6, 178.0], [5.7, 178.0], [5.8, 178.0], [5.9, 178.0], [6.0, 179.0], [6.1, 179.0], [6.2, 179.0], [6.3, 179.0], [6.4, 179.0], [6.5, 179.0], [6.6, 179.0], [6.7, 179.0], [6.8, 179.0], [6.9, 179.0], [7.0, 180.0], [7.1, 180.0], [7.2, 180.0], [7.3, 180.0], [7.4, 180.0], [7.5, 180.0], [7.6, 180.0], [7.7, 180.0], [7.8, 180.0], [7.9, 180.0], [8.0, 181.0], [8.1, 181.0], [8.2, 181.0], [8.3, 181.0], [8.4, 181.0], [8.5, 182.0], [8.6, 182.0], [8.7, 182.0], [8.8, 182.0], [8.9, 182.0], [9.0, 182.0], [9.1, 182.0], [9.2, 182.0], [9.3, 182.0], [9.4, 182.0], [9.5, 183.0], [9.6, 183.0], [9.7, 183.0], [9.8, 183.0], [9.9, 183.0], [10.0, 184.0], [10.1, 184.0], [10.2, 184.0], [10.3, 184.0], [10.4, 184.0], [10.5, 184.0], [10.6, 184.0], [10.7, 184.0], [10.8, 184.0], [10.9, 184.0], [11.0, 185.0], [11.1, 185.0], [11.2, 185.0], [11.3, 185.0], [11.4, 185.0], [11.5, 186.0], [11.6, 186.0], [11.7, 186.0], [11.8, 186.0], [11.9, 186.0], [12.0, 187.0], [12.1, 187.0], [12.2, 187.0], [12.3, 187.0], [12.4, 187.0], [12.5, 194.0], [12.6, 194.0], [12.7, 194.0], [12.8, 194.0], [12.9, 194.0], [13.0, 194.0], [13.1, 194.0], [13.2, 194.0], [13.3, 194.0], [13.4, 194.0], [13.5, 197.0], [13.6, 197.0], [13.7, 197.0], [13.8, 197.0], [13.9, 197.0], [14.0, 197.0], [14.1, 197.0], [14.2, 197.0], [14.3, 197.0], [14.4, 197.0], [14.5, 197.0], [14.6, 197.0], [14.7, 197.0], [14.8, 197.0], [14.9, 197.0], [15.0, 199.0], [15.1, 199.0], [15.2, 199.0], [15.3, 199.0], [15.4, 199.0], [15.5, 199.0], [15.6, 199.0], [15.7, 199.0], [15.8, 199.0], [15.9, 199.0], [16.0, 201.0], [16.1, 201.0], [16.2, 201.0], [16.3, 201.0], [16.4, 201.0], [16.5, 201.0], [16.6, 201.0], [16.7, 201.0], [16.8, 201.0], [16.9, 201.0], [17.0, 202.0], [17.1, 202.0], [17.2, 202.0], [17.3, 202.0], [17.4, 202.0], [17.5, 203.0], [17.6, 203.0], [17.7, 203.0], [17.8, 203.0], [17.9, 203.0], [18.0, 203.0], [18.1, 203.0], [18.2, 203.0], [18.3, 203.0], [18.4, 203.0], [18.5, 204.0], [18.6, 204.0], [18.7, 204.0], [18.8, 204.0], [18.9, 204.0], [19.0, 205.0], [19.1, 205.0], [19.2, 205.0], [19.3, 205.0], [19.4, 205.0], [19.5, 205.0], [19.6, 205.0], [19.7, 205.0], [19.8, 205.0], [19.9, 205.0], [20.0, 206.0], [20.1, 206.0], [20.2, 206.0], [20.3, 206.0], [20.4, 206.0], [20.5, 207.0], [20.6, 207.0], [20.7, 207.0], [20.8, 207.0], [20.9, 207.0], [21.0, 208.0], [21.1, 208.0], [21.2, 208.0], [21.3, 208.0], [21.4, 208.0], [21.5, 208.0], [21.6, 208.0], [21.7, 208.0], [21.8, 208.0], [21.9, 208.0], [22.0, 208.0], [22.1, 208.0], [22.2, 208.0], [22.3, 208.0], [22.4, 208.0], [22.5, 208.0], [22.6, 208.0], [22.7, 208.0], [22.8, 208.0], [22.9, 208.0], [23.0, 209.0], [23.1, 209.0], [23.2, 209.0], [23.3, 209.0], [23.4, 209.0], [23.5, 210.0], [23.6, 210.0], [23.7, 210.0], [23.8, 210.0], [23.9, 210.0], [24.0, 210.0], [24.1, 210.0], [24.2, 210.0], [24.3, 210.0], [24.4, 210.0], [24.5, 210.0], [24.6, 210.0], [24.7, 210.0], [24.8, 210.0], [24.9, 210.0], [25.0, 211.0], [25.1, 211.0], [25.2, 211.0], [25.3, 211.0], [25.4, 211.0], [25.5, 212.0], [25.6, 212.0], [25.7, 212.0], [25.8, 212.0], [25.9, 212.0], [26.0, 212.0], [26.1, 212.0], [26.2, 212.0], [26.3, 212.0], [26.4, 212.0], [26.5, 213.0], [26.6, 213.0], [26.7, 213.0], [26.8, 213.0], [26.9, 213.0], [27.0, 213.0], [27.1, 213.0], [27.2, 213.0], [27.3, 213.0], [27.4, 213.0], [27.5, 213.0], [27.6, 213.0], [27.7, 213.0], [27.8, 213.0], [27.9, 213.0], [28.0, 213.0], [28.1, 213.0], [28.2, 213.0], [28.3, 213.0], [28.4, 213.0], [28.5, 213.0], [28.6, 213.0], [28.7, 213.0], [28.8, 213.0], [28.9, 213.0], [29.0, 215.0], [29.1, 215.0], [29.2, 215.0], [29.3, 215.0], [29.4, 215.0], [29.5, 215.0], [29.6, 215.0], [29.7, 215.0], [29.8, 215.0], [29.9, 215.0], [30.0, 215.0], [30.1, 215.0], [30.2, 215.0], [30.3, 215.0], [30.4, 215.0], [30.5, 215.0], [30.6, 215.0], [30.7, 215.0], [30.8, 215.0], [30.9, 215.0], [31.0, 216.0], [31.1, 216.0], [31.2, 216.0], [31.3, 216.0], [31.4, 216.0], [31.5, 216.0], [31.6, 216.0], [31.7, 216.0], [31.8, 216.0], [31.9, 216.0], [32.0, 217.0], [32.1, 217.0], [32.2, 217.0], [32.3, 217.0], [32.4, 217.0], [32.5, 218.0], [32.6, 218.0], [32.7, 218.0], [32.8, 218.0], [32.9, 218.0], [33.0, 218.0], [33.1, 218.0], [33.2, 218.0], [33.3, 218.0], [33.4, 218.0], [33.5, 219.0], [33.6, 219.0], [33.7, 219.0], [33.8, 219.0], [33.9, 219.0], [34.0, 220.0], [34.1, 220.0], [34.2, 220.0], [34.3, 220.0], [34.4, 220.0], [34.5, 220.0], [34.6, 220.0], [34.7, 220.0], [34.8, 220.0], [34.9, 220.0], [35.0, 221.0], [35.1, 221.0], [35.2, 221.0], [35.3, 221.0], [35.4, 221.0], [35.5, 221.0], [35.6, 221.0], [35.7, 221.0], [35.8, 221.0], [35.9, 221.0], [36.0, 221.0], [36.1, 221.0], [36.2, 221.0], [36.3, 221.0], [36.4, 221.0], [36.5, 222.0], [36.6, 222.0], [36.7, 222.0], [36.8, 222.0], [36.9, 222.0], [37.0, 222.0], [37.1, 222.0], [37.2, 222.0], [37.3, 222.0], [37.4, 222.0], [37.5, 222.0], [37.6, 222.0], [37.7, 222.0], [37.8, 222.0], [37.9, 222.0], [38.0, 222.0], [38.1, 222.0], [38.2, 222.0], [38.3, 222.0], [38.4, 222.0], [38.5, 222.0], [38.6, 222.0], [38.7, 222.0], [38.8, 222.0], [38.9, 222.0], [39.0, 225.0], [39.1, 225.0], [39.2, 225.0], [39.3, 225.0], [39.4, 225.0], [39.5, 226.0], [39.6, 226.0], [39.7, 226.0], [39.8, 226.0], [39.9, 226.0], [40.0, 226.0], [40.1, 226.0], [40.2, 226.0], [40.3, 226.0], [40.4, 226.0], [40.5, 227.0], [40.6, 227.0], [40.7, 227.0], [40.8, 227.0], [40.9, 227.0], [41.0, 228.0], [41.1, 228.0], [41.2, 228.0], [41.3, 228.0], [41.4, 228.0], [41.5, 228.0], [41.6, 228.0], [41.7, 228.0], [41.8, 228.0], [41.9, 228.0], [42.0, 229.0], [42.1, 229.0], [42.2, 229.0], [42.3, 229.0], [42.4, 229.0], [42.5, 229.0], [42.6, 229.0], [42.7, 229.0], [42.8, 229.0], [42.9, 229.0], [43.0, 231.0], [43.1, 231.0], [43.2, 231.0], [43.3, 231.0], [43.4, 231.0], [43.5, 232.0], [43.6, 232.0], [43.7, 232.0], [43.8, 232.0], [43.9, 232.0], [44.0, 232.0], [44.1, 232.0], [44.2, 232.0], [44.3, 232.0], [44.4, 232.0], [44.5, 232.0], [44.6, 232.0], [44.7, 232.0], [44.8, 232.0], [44.9, 232.0], [45.0, 233.0], [45.1, 233.0], [45.2, 233.0], [45.3, 233.0], [45.4, 233.0], [45.5, 233.0], [45.6, 233.0], [45.7, 233.0], [45.8, 233.0], [45.9, 233.0], [46.0, 234.0], [46.1, 234.0], [46.2, 234.0], [46.3, 234.0], [46.4, 234.0], [46.5, 235.0], [46.6, 235.0], [46.7, 235.0], [46.8, 235.0], [46.9, 235.0], [47.0, 236.0], [47.1, 236.0], [47.2, 236.0], [47.3, 236.0], [47.4, 236.0], [47.5, 236.0], [47.6, 236.0], [47.7, 236.0], [47.8, 236.0], [47.9, 236.0], [48.0, 237.0], [48.1, 237.0], [48.2, 237.0], [48.3, 237.0], [48.4, 237.0], [48.5, 237.0], [48.6, 237.0], [48.7, 237.0], [48.8, 237.0], [48.9, 237.0], [49.0, 237.0], [49.1, 237.0], [49.2, 237.0], [49.3, 237.0], [49.4, 237.0], [49.5, 237.0], [49.6, 237.0], [49.7, 237.0], [49.8, 237.0], [49.9, 237.0], [50.0, 237.0], [50.1, 237.0], [50.2, 237.0], [50.3, 237.0], [50.4, 237.0], [50.5, 239.0], [50.6, 239.0], [50.7, 239.0], [50.8, 239.0], [50.9, 239.0], [51.0, 239.0], [51.1, 239.0], [51.2, 239.0], [51.3, 239.0], [51.4, 239.0], [51.5, 241.0], [51.6, 241.0], [51.7, 241.0], [51.8, 241.0], [51.9, 241.0], [52.0, 242.0], [52.1, 242.0], [52.2, 242.0], [52.3, 242.0], [52.4, 242.0], [52.5, 244.0], [52.6, 244.0], [52.7, 244.0], [52.8, 244.0], [52.9, 244.0], [53.0, 244.0], [53.1, 244.0], [53.2, 244.0], [53.3, 244.0], [53.4, 244.0], [53.5, 245.0], [53.6, 245.0], [53.7, 245.0], [53.8, 245.0], [53.9, 245.0], [54.0, 248.0], [54.1, 248.0], [54.2, 248.0], [54.3, 248.0], [54.4, 248.0], [54.5, 250.0], [54.6, 250.0], [54.7, 250.0], [54.8, 250.0], [54.9, 250.0], [55.0, 250.0], [55.1, 250.0], [55.2, 250.0], [55.3, 250.0], [55.4, 250.0], [55.5, 254.0], [55.6, 254.0], [55.7, 254.0], [55.8, 254.0], [55.9, 254.0], [56.0, 255.0], [56.1, 255.0], [56.2, 255.0], [56.3, 255.0], [56.4, 255.0], [56.5, 255.0], [56.6, 255.0], [56.7, 255.0], [56.8, 255.0], [56.9, 255.0], [57.0, 255.0], [57.1, 255.0], [57.2, 255.0], [57.3, 255.0], [57.4, 255.0], [57.5, 256.0], [57.6, 256.0], [57.7, 256.0], [57.8, 256.0], [57.9, 256.0], [58.0, 257.0], [58.1, 257.0], [58.2, 257.0], [58.3, 257.0], [58.4, 257.0], [58.5, 257.0], [58.6, 257.0], [58.7, 257.0], [58.8, 257.0], [58.9, 257.0], [59.0, 258.0], [59.1, 258.0], [59.2, 258.0], [59.3, 258.0], [59.4, 258.0], [59.5, 259.0], [59.6, 259.0], [59.7, 259.0], [59.8, 259.0], [59.9, 259.0], [60.0, 262.0], [60.1, 262.0], [60.2, 262.0], [60.3, 262.0], [60.4, 262.0], [60.5, 265.0], [60.6, 265.0], [60.7, 265.0], [60.8, 265.0], [60.9, 265.0], [61.0, 266.0], [61.1, 266.0], [61.2, 266.0], [61.3, 266.0], [61.4, 266.0], [61.5, 267.0], [61.6, 267.0], [61.7, 267.0], [61.8, 267.0], [61.9, 267.0], [62.0, 271.0], [62.1, 271.0], [62.2, 271.0], [62.3, 271.0], [62.4, 271.0], [62.5, 272.0], [62.6, 272.0], [62.7, 272.0], [62.8, 272.0], [62.9, 272.0], [63.0, 273.0], [63.1, 273.0], [63.2, 273.0], [63.3, 273.0], [63.4, 273.0], [63.5, 275.0], [63.6, 275.0], [63.7, 275.0], [63.8, 275.0], [63.9, 275.0], [64.0, 275.0], [64.1, 275.0], [64.2, 275.0], [64.3, 275.0], [64.4, 275.0], [64.5, 279.0], [64.6, 279.0], [64.7, 279.0], [64.8, 279.0], [64.9, 279.0], [65.0, 279.0], [65.1, 279.0], [65.2, 279.0], [65.3, 279.0], [65.4, 279.0], [65.5, 279.0], [65.6, 279.0], [65.7, 279.0], [65.8, 279.0], [65.9, 279.0], [66.0, 279.0], [66.1, 279.0], [66.2, 279.0], [66.3, 279.0], [66.4, 279.0], [66.5, 283.0], [66.6, 283.0], [66.7, 283.0], [66.8, 283.0], [66.9, 283.0], [67.0, 286.0], [67.1, 286.0], [67.2, 286.0], [67.3, 286.0], [67.4, 286.0], [67.5, 286.0], [67.6, 286.0], [67.7, 286.0], [67.8, 286.0], [67.9, 286.0], [68.0, 288.0], [68.1, 288.0], [68.2, 288.0], [68.3, 288.0], [68.4, 288.0], [68.5, 290.0], [68.6, 290.0], [68.7, 290.0], [68.8, 290.0], [68.9, 290.0], [69.0, 293.0], [69.1, 293.0], [69.2, 293.0], [69.3, 293.0], [69.4, 293.0], [69.5, 301.0], [69.6, 301.0], [69.7, 301.0], [69.8, 301.0], [69.9, 301.0], [70.0, 301.0], [70.1, 301.0], [70.2, 301.0], [70.3, 301.0], [70.4, 301.0], [70.5, 301.0], [70.6, 301.0], [70.7, 301.0], [70.8, 301.0], [70.9, 301.0], [71.0, 304.0], [71.1, 304.0], [71.2, 304.0], [71.3, 304.0], [71.4, 304.0], [71.5, 306.0], [71.6, 306.0], [71.7, 306.0], [71.8, 306.0], [71.9, 306.0], [72.0, 307.0], [72.1, 307.0], [72.2, 307.0], [72.3, 307.0], [72.4, 307.0], [72.5, 313.0], [72.6, 313.0], [72.7, 313.0], [72.8, 313.0], [72.9, 313.0], [73.0, 317.0], [73.1, 317.0], [73.2, 317.0], [73.3, 317.0], [73.4, 317.0], [73.5, 317.0], [73.6, 317.0], [73.7, 317.0], [73.8, 317.0], [73.9, 317.0], [74.0, 319.0], [74.1, 319.0], [74.2, 319.0], [74.3, 319.0], [74.4, 319.0], [74.5, 319.0], [74.6, 319.0], [74.7, 319.0], [74.8, 319.0], [74.9, 319.0], [75.0, 320.0], [75.1, 320.0], [75.2, 320.0], [75.3, 320.0], [75.4, 320.0], [75.5, 321.0], [75.6, 321.0], [75.7, 321.0], [75.8, 321.0], [75.9, 321.0], [76.0, 325.0], [76.1, 325.0], [76.2, 325.0], [76.3, 325.0], [76.4, 325.0], [76.5, 329.0], [76.6, 329.0], [76.7, 329.0], [76.8, 329.0], [76.9, 329.0], [77.0, 330.0], [77.1, 330.0], [77.2, 330.0], [77.3, 330.0], [77.4, 330.0], [77.5, 331.0], [77.6, 331.0], [77.7, 331.0], [77.8, 331.0], [77.9, 331.0], [78.0, 333.0], [78.1, 333.0], [78.2, 333.0], [78.3, 333.0], [78.4, 333.0], [78.5, 333.0], [78.6, 333.0], [78.7, 333.0], [78.8, 333.0], [78.9, 333.0], [79.0, 334.0], [79.1, 334.0], [79.2, 334.0], [79.3, 334.0], [79.4, 334.0], [79.5, 336.0], [79.6, 336.0], [79.7, 336.0], [79.8, 336.0], [79.9, 336.0], [80.0, 336.0], [80.1, 336.0], [80.2, 336.0], [80.3, 336.0], [80.4, 336.0], [80.5, 342.0], [80.6, 342.0], [80.7, 342.0], [80.8, 342.0], [80.9, 342.0], [81.0, 348.0], [81.1, 348.0], [81.2, 348.0], [81.3, 348.0], [81.4, 348.0], [81.5, 359.0], [81.6, 359.0], [81.7, 359.0], [81.8, 359.0], [81.9, 359.0], [82.0, 365.0], [82.1, 365.0], [82.2, 365.0], [82.3, 365.0], [82.4, 365.0], [82.5, 392.0], [82.6, 392.0], [82.7, 392.0], [82.8, 392.0], [82.9, 392.0], [83.0, 406.0], [83.1, 406.0], [83.2, 406.0], [83.3, 406.0], [83.4, 406.0], [83.5, 409.0], [83.6, 409.0], [83.7, 409.0], [83.8, 409.0], [83.9, 409.0], [84.0, 413.0], [84.1, 413.0], [84.2, 413.0], [84.3, 413.0], [84.4, 413.0], [84.5, 417.0], [84.6, 417.0], [84.7, 417.0], [84.8, 417.0], [84.9, 417.0], [85.0, 419.0], [85.1, 419.0], [85.2, 419.0], [85.3, 419.0], [85.4, 419.0], [85.5, 428.0], [85.6, 428.0], [85.7, 428.0], [85.8, 428.0], [85.9, 428.0], [86.0, 428.0], [86.1, 428.0], [86.2, 428.0], [86.3, 428.0], [86.4, 428.0], [86.5, 429.0], [86.6, 429.0], [86.7, 429.0], [86.8, 429.0], [86.9, 429.0], [87.0, 432.0], [87.1, 432.0], [87.2, 432.0], [87.3, 432.0], [87.4, 432.0], [87.5, 436.0], [87.6, 436.0], [87.7, 436.0], [87.8, 436.0], [87.9, 436.0], [88.0, 446.0], [88.1, 446.0], [88.2, 446.0], [88.3, 446.0], [88.4, 446.0], [88.5, 466.0], [88.6, 466.0], [88.7, 466.0], [88.8, 466.0], [88.9, 466.0], [89.0, 475.0], [89.1, 475.0], [89.2, 475.0], [89.3, 475.0], [89.4, 475.0], [89.5, 491.0], [89.6, 491.0], [89.7, 491.0], [89.8, 491.0], [89.9, 491.0], [90.0, 494.0], [90.1, 494.0], [90.2, 494.0], [90.3, 494.0], [90.4, 494.0], [90.5, 509.0], [90.6, 509.0], [90.7, 509.0], [90.8, 509.0], [90.9, 509.0], [91.0, 510.0], [91.1, 510.0], [91.2, 510.0], [91.3, 510.0], [91.4, 510.0], [91.5, 510.0], [91.6, 510.0], [91.7, 510.0], [91.8, 510.0], [91.9, 510.0], [92.0, 517.0], [92.1, 517.0], [92.2, 517.0], [92.3, 517.0], [92.4, 517.0], [92.5, 523.0], [92.6, 523.0], [92.7, 523.0], [92.8, 523.0], [92.9, 523.0], [93.0, 524.0], [93.1, 524.0], [93.2, 524.0], [93.3, 524.0], [93.4, 524.0], [93.5, 525.0], [93.6, 525.0], [93.7, 525.0], [93.8, 525.0], [93.9, 525.0], [94.0, 541.0], [94.1, 541.0], [94.2, 541.0], [94.3, 541.0], [94.4, 541.0], [94.5, 559.0], [94.6, 559.0], [94.7, 559.0], [94.8, 559.0], [94.9, 559.0], [95.0, 562.0], [95.1, 562.0], [95.2, 562.0], [95.3, 562.0], [95.4, 562.0], [95.5, 575.0], [95.6, 575.0], [95.7, 575.0], [95.8, 575.0], [95.9, 575.0], [96.0, 580.0], [96.1, 580.0], [96.2, 580.0], [96.3, 580.0], [96.4, 580.0], [96.5, 587.0], [96.6, 587.0], [96.7, 587.0], [96.8, 587.0], [96.9, 587.0], [97.0, 597.0], [97.1, 597.0], [97.2, 597.0], [97.3, 597.0], [97.4, 597.0], [97.5, 605.0], [97.6, 605.0], [97.7, 605.0], [97.8, 605.0], [97.9, 605.0], [98.0, 620.0], [98.1, 620.0], [98.2, 620.0], [98.3, 620.0], [98.4, 620.0], [98.5, 622.0], [98.6, 622.0], [98.7, 622.0], [98.8, 622.0], [98.9, 622.0], [99.0, 628.0], [99.1, 628.0], [99.2, 628.0], [99.3, 628.0], [99.4, 628.0], [99.5, 706.0], [99.6, 706.0], [99.7, 706.0], [99.8, 706.0], [99.9, 706.0]], "isOverall": false, "label": "Appointment List-1", "isController": false}, {"data": [[0.0, 486.0], [0.1, 486.0], [0.2, 486.0], [0.3, 486.0], [0.4, 486.0], [0.5, 551.0], [0.6, 551.0], [0.7, 551.0], [0.8, 551.0], [0.9, 551.0], [1.0, 565.0], [1.1, 565.0], [1.2, 565.0], [1.3, 565.0], [1.4, 565.0], [1.5, 579.0], [1.6, 579.0], [1.7, 579.0], [1.8, 579.0], [1.9, 579.0], [2.0, 584.0], [2.1, 584.0], [2.2, 584.0], [2.3, 584.0], [2.4, 584.0], [2.5, 584.0], [2.6, 584.0], [2.7, 584.0], [2.8, 584.0], [2.9, 584.0], [3.0, 619.0], [3.1, 619.0], [3.2, 619.0], [3.3, 619.0], [3.4, 619.0], [3.5, 646.0], [3.6, 646.0], [3.7, 646.0], [3.8, 646.0], [3.9, 646.0], [4.0, 654.0], [4.1, 654.0], [4.2, 654.0], [4.3, 654.0], [4.4, 654.0], [4.5, 679.0], [4.6, 679.0], [4.7, 679.0], [4.8, 679.0], [4.9, 679.0], [5.0, 802.0], [5.1, 802.0], [5.2, 802.0], [5.3, 802.0], [5.4, 802.0], [5.5, 852.0], [5.6, 852.0], [5.7, 852.0], [5.8, 852.0], [5.9, 852.0], [6.0, 880.0], [6.1, 880.0], [6.2, 880.0], [6.3, 880.0], [6.4, 880.0], [6.5, 885.0], [6.6, 885.0], [6.7, 885.0], [6.8, 885.0], [6.9, 885.0], [7.0, 891.0], [7.1, 891.0], [7.2, 891.0], [7.3, 891.0], [7.4, 891.0], [7.5, 897.0], [7.6, 897.0], [7.7, 897.0], [7.8, 897.0], [7.9, 897.0], [8.0, 906.0], [8.1, 906.0], [8.2, 906.0], [8.3, 906.0], [8.4, 906.0], [8.5, 921.0], [8.6, 921.0], [8.7, 921.0], [8.8, 921.0], [8.9, 921.0], [9.0, 932.0], [9.1, 932.0], [9.2, 932.0], [9.3, 932.0], [9.4, 932.0], [9.5, 947.0], [9.6, 947.0], [9.7, 947.0], [9.8, 947.0], [9.9, 947.0], [10.0, 977.0], [10.1, 977.0], [10.2, 977.0], [10.3, 977.0], [10.4, 977.0], [10.5, 1057.0], [10.6, 1057.0], [10.7, 1057.0], [10.8, 1057.0], [10.9, 1057.0], [11.0, 1262.0], [11.1, 1262.0], [11.2, 1262.0], [11.3, 1262.0], [11.4, 1262.0], [11.5, 1387.0], [11.6, 1387.0], [11.7, 1387.0], [11.8, 1387.0], [11.9, 1387.0], [12.0, 1401.0], [12.1, 1401.0], [12.2, 1401.0], [12.3, 1401.0], [12.4, 1401.0], [12.5, 1416.0], [12.6, 1416.0], [12.7, 1416.0], [12.8, 1416.0], [12.9, 1416.0], [13.0, 1418.0], [13.1, 1418.0], [13.2, 1418.0], [13.3, 1418.0], [13.4, 1418.0], [13.5, 1418.0], [13.6, 1418.0], [13.7, 1418.0], [13.8, 1418.0], [13.9, 1418.0], [14.0, 1450.0], [14.1, 1450.0], [14.2, 1450.0], [14.3, 1450.0], [14.4, 1450.0], [14.5, 1468.0], [14.6, 1468.0], [14.7, 1468.0], [14.8, 1468.0], [14.9, 1468.0], [15.0, 1484.0], [15.1, 1484.0], [15.2, 1484.0], [15.3, 1484.0], [15.4, 1484.0], [15.5, 1486.0], [15.6, 1486.0], [15.7, 1486.0], [15.8, 1486.0], [15.9, 1486.0], [16.0, 1505.0], [16.1, 1505.0], [16.2, 1505.0], [16.3, 1505.0], [16.4, 1505.0], [16.5, 1630.0], [16.6, 1630.0], [16.7, 1630.0], [16.8, 1630.0], [16.9, 1630.0], [17.0, 1751.0], [17.1, 1751.0], [17.2, 1751.0], [17.3, 1751.0], [17.4, 1751.0], [17.5, 1795.0], [17.6, 1795.0], [17.7, 1795.0], [17.8, 1795.0], [17.9, 1795.0], [18.0, 1803.0], [18.1, 1803.0], [18.2, 1803.0], [18.3, 1803.0], [18.4, 1803.0], [18.5, 1856.0], [18.6, 1856.0], [18.7, 1856.0], [18.8, 1856.0], [18.9, 1856.0], [19.0, 1918.0], [19.1, 1918.0], [19.2, 1918.0], [19.3, 1918.0], [19.4, 1918.0], [19.5, 1928.0], [19.6, 1928.0], [19.7, 1928.0], [19.8, 1928.0], [19.9, 1928.0], [20.0, 1934.0], [20.1, 1934.0], [20.2, 1934.0], [20.3, 1934.0], [20.4, 1934.0], [20.5, 1936.0], [20.6, 1936.0], [20.7, 1936.0], [20.8, 1936.0], [20.9, 1936.0], [21.0, 1937.0], [21.1, 1937.0], [21.2, 1937.0], [21.3, 1937.0], [21.4, 1937.0], [21.5, 1949.0], [21.6, 1949.0], [21.7, 1949.0], [21.8, 1949.0], [21.9, 1949.0], [22.0, 1955.0], [22.1, 1955.0], [22.2, 1955.0], [22.3, 1955.0], [22.4, 1955.0], [22.5, 1969.0], [22.6, 1969.0], [22.7, 1969.0], [22.8, 1969.0], [22.9, 1969.0], [23.0, 2093.0], [23.1, 2093.0], [23.2, 2093.0], [23.3, 2093.0], [23.4, 2093.0], [23.5, 2144.0], [23.6, 2144.0], [23.7, 2144.0], [23.8, 2144.0], [23.9, 2144.0], [24.0, 2147.0], [24.1, 2147.0], [24.2, 2147.0], [24.3, 2147.0], [24.4, 2147.0], [24.5, 2164.0], [24.6, 2164.0], [24.7, 2164.0], [24.8, 2164.0], [24.9, 2164.0], [25.0, 2165.0], [25.1, 2165.0], [25.2, 2165.0], [25.3, 2165.0], [25.4, 2165.0], [25.5, 2171.0], [25.6, 2171.0], [25.7, 2171.0], [25.8, 2171.0], [25.9, 2171.0], [26.0, 2205.0], [26.1, 2205.0], [26.2, 2205.0], [26.3, 2205.0], [26.4, 2205.0], [26.5, 2217.0], [26.6, 2217.0], [26.7, 2217.0], [26.8, 2217.0], [26.9, 2217.0], [27.0, 2237.0], [27.1, 2237.0], [27.2, 2237.0], [27.3, 2237.0], [27.4, 2237.0], [27.5, 2257.0], [27.6, 2257.0], [27.7, 2257.0], [27.8, 2257.0], [27.9, 2257.0], [28.0, 2292.0], [28.1, 2292.0], [28.2, 2292.0], [28.3, 2292.0], [28.4, 2292.0], [28.5, 2301.0], [28.6, 2301.0], [28.7, 2301.0], [28.8, 2301.0], [28.9, 2301.0], [29.0, 2313.0], [29.1, 2313.0], [29.2, 2313.0], [29.3, 2313.0], [29.4, 2313.0], [29.5, 2493.0], [29.6, 2493.0], [29.7, 2493.0], [29.8, 2493.0], [29.9, 2493.0], [30.0, 2497.0], [30.1, 2497.0], [30.2, 2497.0], [30.3, 2497.0], [30.4, 2497.0], [30.5, 2504.0], [30.6, 2504.0], [30.7, 2504.0], [30.8, 2504.0], [30.9, 2504.0], [31.0, 2523.0], [31.1, 2523.0], [31.2, 2523.0], [31.3, 2523.0], [31.4, 2523.0], [31.5, 2524.0], [31.6, 2524.0], [31.7, 2524.0], [31.8, 2524.0], [31.9, 2524.0], [32.0, 2540.0], [32.1, 2540.0], [32.2, 2540.0], [32.3, 2540.0], [32.4, 2540.0], [32.5, 2546.0], [32.6, 2546.0], [32.7, 2546.0], [32.8, 2546.0], [32.9, 2546.0], [33.0, 2557.0], [33.1, 2557.0], [33.2, 2557.0], [33.3, 2557.0], [33.4, 2557.0], [33.5, 2576.0], [33.6, 2576.0], [33.7, 2576.0], [33.8, 2576.0], [33.9, 2576.0], [34.0, 2599.0], [34.1, 2599.0], [34.2, 2599.0], [34.3, 2599.0], [34.4, 2599.0], [34.5, 2682.0], [34.6, 2682.0], [34.7, 2682.0], [34.8, 2682.0], [34.9, 2682.0], [35.0, 2729.0], [35.1, 2729.0], [35.2, 2729.0], [35.3, 2729.0], [35.4, 2729.0], [35.5, 2734.0], [35.6, 2734.0], [35.7, 2734.0], [35.8, 2734.0], [35.9, 2734.0], [36.0, 2843.0], [36.1, 2843.0], [36.2, 2843.0], [36.3, 2843.0], [36.4, 2843.0], [36.5, 2858.0], [36.6, 2858.0], [36.7, 2858.0], [36.8, 2858.0], [36.9, 2858.0], [37.0, 2862.0], [37.1, 2862.0], [37.2, 2862.0], [37.3, 2862.0], [37.4, 2862.0], [37.5, 2867.0], [37.6, 2867.0], [37.7, 2867.0], [37.8, 2867.0], [37.9, 2867.0], [38.0, 2876.0], [38.1, 2876.0], [38.2, 2876.0], [38.3, 2876.0], [38.4, 2876.0], [38.5, 2878.0], [38.6, 2878.0], [38.7, 2878.0], [38.8, 2878.0], [38.9, 2878.0], [39.0, 2898.0], [39.1, 2898.0], [39.2, 2898.0], [39.3, 2898.0], [39.4, 2898.0], [39.5, 2904.0], [39.6, 2904.0], [39.7, 2904.0], [39.8, 2904.0], [39.9, 2904.0], [40.0, 2908.0], [40.1, 2908.0], [40.2, 2908.0], [40.3, 2908.0], [40.4, 2908.0], [40.5, 2923.0], [40.6, 2923.0], [40.7, 2923.0], [40.8, 2923.0], [40.9, 2923.0], [41.0, 2936.0], [41.1, 2936.0], [41.2, 2936.0], [41.3, 2936.0], [41.4, 2936.0], [41.5, 2950.0], [41.6, 2950.0], [41.7, 2950.0], [41.8, 2950.0], [41.9, 2950.0], [42.0, 2950.0], [42.1, 2950.0], [42.2, 2950.0], [42.3, 2950.0], [42.4, 2950.0], [42.5, 2968.0], [42.6, 2968.0], [42.7, 2968.0], [42.8, 2968.0], [42.9, 2968.0], [43.0, 2997.0], [43.1, 2997.0], [43.2, 2997.0], [43.3, 2997.0], [43.4, 2997.0], [43.5, 3003.0], [43.6, 3003.0], [43.7, 3003.0], [43.8, 3003.0], [43.9, 3003.0], [44.0, 3109.0], [44.1, 3109.0], [44.2, 3109.0], [44.3, 3109.0], [44.4, 3109.0], [44.5, 3142.0], [44.6, 3142.0], [44.7, 3142.0], [44.8, 3142.0], [44.9, 3142.0], [45.0, 3167.0], [45.1, 3167.0], [45.2, 3167.0], [45.3, 3167.0], [45.4, 3167.0], [45.5, 3218.0], [45.6, 3218.0], [45.7, 3218.0], [45.8, 3218.0], [45.9, 3218.0], [46.0, 3220.0], [46.1, 3220.0], [46.2, 3220.0], [46.3, 3220.0], [46.4, 3220.0], [46.5, 3250.0], [46.6, 3250.0], [46.7, 3250.0], [46.8, 3250.0], [46.9, 3250.0], [47.0, 3281.0], [47.1, 3281.0], [47.2, 3281.0], [47.3, 3281.0], [47.4, 3281.0], [47.5, 3286.0], [47.6, 3286.0], [47.7, 3286.0], [47.8, 3286.0], [47.9, 3286.0], [48.0, 3318.0], [48.1, 3318.0], [48.2, 3318.0], [48.3, 3318.0], [48.4, 3318.0], [48.5, 3322.0], [48.6, 3322.0], [48.7, 3322.0], [48.8, 3322.0], [48.9, 3322.0], [49.0, 3327.0], [49.1, 3327.0], [49.2, 3327.0], [49.3, 3327.0], [49.4, 3327.0], [49.5, 3332.0], [49.6, 3332.0], [49.7, 3332.0], [49.8, 3332.0], [49.9, 3332.0], [50.0, 3356.0], [50.1, 3356.0], [50.2, 3356.0], [50.3, 3356.0], [50.4, 3356.0], [50.5, 3366.0], [50.6, 3366.0], [50.7, 3366.0], [50.8, 3366.0], [50.9, 3366.0], [51.0, 3369.0], [51.1, 3369.0], [51.2, 3369.0], [51.3, 3369.0], [51.4, 3369.0], [51.5, 3384.0], [51.6, 3384.0], [51.7, 3384.0], [51.8, 3384.0], [51.9, 3384.0], [52.0, 3422.0], [52.1, 3422.0], [52.2, 3422.0], [52.3, 3422.0], [52.4, 3422.0], [52.5, 3515.0], [52.6, 3515.0], [52.7, 3515.0], [52.8, 3515.0], [52.9, 3515.0], [53.0, 3531.0], [53.1, 3531.0], [53.2, 3531.0], [53.3, 3531.0], [53.4, 3531.0], [53.5, 3576.0], [53.6, 3576.0], [53.7, 3576.0], [53.8, 3576.0], [53.9, 3576.0], [54.0, 3587.0], [54.1, 3587.0], [54.2, 3587.0], [54.3, 3587.0], [54.4, 3587.0], [54.5, 3637.0], [54.6, 3637.0], [54.7, 3637.0], [54.8, 3637.0], [54.9, 3637.0], [55.0, 3674.0], [55.1, 3674.0], [55.2, 3674.0], [55.3, 3674.0], [55.4, 3674.0], [55.5, 3702.0], [55.6, 3702.0], [55.7, 3702.0], [55.8, 3702.0], [55.9, 3702.0], [56.0, 3725.0], [56.1, 3725.0], [56.2, 3725.0], [56.3, 3725.0], [56.4, 3725.0], [56.5, 3761.0], [56.6, 3761.0], [56.7, 3761.0], [56.8, 3761.0], [56.9, 3761.0], [57.0, 3762.0], [57.1, 3762.0], [57.2, 3762.0], [57.3, 3762.0], [57.4, 3762.0], [57.5, 3812.0], [57.6, 3812.0], [57.7, 3812.0], [57.8, 3812.0], [57.9, 3812.0], [58.0, 3815.0], [58.1, 3815.0], [58.2, 3815.0], [58.3, 3815.0], [58.4, 3815.0], [58.5, 3819.0], [58.6, 3819.0], [58.7, 3819.0], [58.8, 3819.0], [58.9, 3819.0], [59.0, 3819.0], [59.1, 3819.0], [59.2, 3819.0], [59.3, 3819.0], [59.4, 3819.0], [59.5, 3832.0], [59.6, 3832.0], [59.7, 3832.0], [59.8, 3832.0], [59.9, 3832.0], [60.0, 3838.0], [60.1, 3838.0], [60.2, 3838.0], [60.3, 3838.0], [60.4, 3838.0], [60.5, 3842.0], [60.6, 3842.0], [60.7, 3842.0], [60.8, 3842.0], [60.9, 3842.0], [61.0, 3854.0], [61.1, 3854.0], [61.2, 3854.0], [61.3, 3854.0], [61.4, 3854.0], [61.5, 3873.0], [61.6, 3873.0], [61.7, 3873.0], [61.8, 3873.0], [61.9, 3873.0], [62.0, 3879.0], [62.1, 3879.0], [62.2, 3879.0], [62.3, 3879.0], [62.4, 3879.0], [62.5, 3881.0], [62.6, 3881.0], [62.7, 3881.0], [62.8, 3881.0], [62.9, 3881.0], [63.0, 3894.0], [63.1, 3894.0], [63.2, 3894.0], [63.3, 3894.0], [63.4, 3894.0], [63.5, 3914.0], [63.6, 3914.0], [63.7, 3914.0], [63.8, 3914.0], [63.9, 3914.0], [64.0, 3923.0], [64.1, 3923.0], [64.2, 3923.0], [64.3, 3923.0], [64.4, 3923.0], [64.5, 3926.0], [64.6, 3926.0], [64.7, 3926.0], [64.8, 3926.0], [64.9, 3926.0], [65.0, 3933.0], [65.1, 3933.0], [65.2, 3933.0], [65.3, 3933.0], [65.4, 3933.0], [65.5, 3942.0], [65.6, 3942.0], [65.7, 3942.0], [65.8, 3942.0], [65.9, 3942.0], [66.0, 4017.0], [66.1, 4017.0], [66.2, 4017.0], [66.3, 4017.0], [66.4, 4017.0], [66.5, 4065.0], [66.6, 4065.0], [66.7, 4065.0], [66.8, 4065.0], [66.9, 4065.0], [67.0, 4125.0], [67.1, 4125.0], [67.2, 4125.0], [67.3, 4125.0], [67.4, 4125.0], [67.5, 4130.0], [67.6, 4130.0], [67.7, 4130.0], [67.8, 4130.0], [67.9, 4130.0], [68.0, 4139.0], [68.1, 4139.0], [68.2, 4139.0], [68.3, 4139.0], [68.4, 4139.0], [68.5, 4166.0], [68.6, 4166.0], [68.7, 4166.0], [68.8, 4166.0], [68.9, 4166.0], [69.0, 4194.0], [69.1, 4194.0], [69.2, 4194.0], [69.3, 4194.0], [69.4, 4194.0], [69.5, 4265.0], [69.6, 4265.0], [69.7, 4265.0], [69.8, 4265.0], [69.9, 4265.0], [70.0, 4274.0], [70.1, 4274.0], [70.2, 4274.0], [70.3, 4274.0], [70.4, 4274.0], [70.5, 4280.0], [70.6, 4280.0], [70.7, 4280.0], [70.8, 4280.0], [70.9, 4280.0], [71.0, 4294.0], [71.1, 4294.0], [71.2, 4294.0], [71.3, 4294.0], [71.4, 4294.0], [71.5, 4306.0], [71.6, 4306.0], [71.7, 4306.0], [71.8, 4306.0], [71.9, 4306.0], [72.0, 4356.0], [72.1, 4356.0], [72.2, 4356.0], [72.3, 4356.0], [72.4, 4356.0], [72.5, 4364.0], [72.6, 4364.0], [72.7, 4364.0], [72.8, 4364.0], [72.9, 4364.0], [73.0, 4373.0], [73.1, 4373.0], [73.2, 4373.0], [73.3, 4373.0], [73.4, 4373.0], [73.5, 4378.0], [73.6, 4378.0], [73.7, 4378.0], [73.8, 4378.0], [73.9, 4378.0], [74.0, 4379.0], [74.1, 4379.0], [74.2, 4379.0], [74.3, 4379.0], [74.4, 4379.0], [74.5, 4436.0], [74.6, 4436.0], [74.7, 4436.0], [74.8, 4436.0], [74.9, 4436.0], [75.0, 4451.0], [75.1, 4451.0], [75.2, 4451.0], [75.3, 4451.0], [75.4, 4451.0], [75.5, 4455.0], [75.6, 4455.0], [75.7, 4455.0], [75.8, 4455.0], [75.9, 4455.0], [76.0, 4456.0], [76.1, 4456.0], [76.2, 4456.0], [76.3, 4456.0], [76.4, 4456.0], [76.5, 4459.0], [76.6, 4459.0], [76.7, 4459.0], [76.8, 4459.0], [76.9, 4459.0], [77.0, 4461.0], [77.1, 4461.0], [77.2, 4461.0], [77.3, 4461.0], [77.4, 4461.0], [77.5, 4510.0], [77.6, 4510.0], [77.7, 4510.0], [77.8, 4510.0], [77.9, 4510.0], [78.0, 4517.0], [78.1, 4517.0], [78.2, 4517.0], [78.3, 4517.0], [78.4, 4517.0], [78.5, 4522.0], [78.6, 4522.0], [78.7, 4522.0], [78.8, 4522.0], [78.9, 4522.0], [79.0, 4566.0], [79.1, 4566.0], [79.2, 4566.0], [79.3, 4566.0], [79.4, 4566.0], [79.5, 4590.0], [79.6, 4590.0], [79.7, 4590.0], [79.8, 4590.0], [79.9, 4590.0], [80.0, 4608.0], [80.1, 4608.0], [80.2, 4608.0], [80.3, 4608.0], [80.4, 4608.0], [80.5, 4785.0], [80.6, 4785.0], [80.7, 4785.0], [80.8, 4785.0], [80.9, 4785.0], [81.0, 4822.0], [81.1, 4822.0], [81.2, 4822.0], [81.3, 4822.0], [81.4, 4822.0], [81.5, 4827.0], [81.6, 4827.0], [81.7, 4827.0], [81.8, 4827.0], [81.9, 4827.0], [82.0, 4896.0], [82.1, 4896.0], [82.2, 4896.0], [82.3, 4896.0], [82.4, 4896.0], [82.5, 4901.0], [82.6, 4901.0], [82.7, 4901.0], [82.8, 4901.0], [82.9, 4901.0], [83.0, 4954.0], [83.1, 4954.0], [83.2, 4954.0], [83.3, 4954.0], [83.4, 4954.0], [83.5, 4966.0], [83.6, 4966.0], [83.7, 4966.0], [83.8, 4966.0], [83.9, 4966.0], [84.0, 4971.0], [84.1, 4971.0], [84.2, 4971.0], [84.3, 4971.0], [84.4, 4971.0], [84.5, 4982.0], [84.6, 4982.0], [84.7, 4982.0], [84.8, 4982.0], [84.9, 4982.0], [85.0, 4991.0], [85.1, 4991.0], [85.2, 4991.0], [85.3, 4991.0], [85.4, 4991.0], [85.5, 5000.0], [85.6, 5000.0], [85.7, 5000.0], [85.8, 5000.0], [85.9, 5000.0], [86.0, 5019.0], [86.1, 5019.0], [86.2, 5019.0], [86.3, 5019.0], [86.4, 5019.0], [86.5, 5054.0], [86.6, 5054.0], [86.7, 5054.0], [86.8, 5054.0], [86.9, 5054.0], [87.0, 5068.0], [87.1, 5068.0], [87.2, 5068.0], [87.3, 5068.0], [87.4, 5068.0], [87.5, 5078.0], [87.6, 5078.0], [87.7, 5078.0], [87.8, 5078.0], [87.9, 5078.0], [88.0, 5085.0], [88.1, 5085.0], [88.2, 5085.0], [88.3, 5085.0], [88.4, 5085.0], [88.5, 5108.0], [88.6, 5108.0], [88.7, 5108.0], [88.8, 5108.0], [88.9, 5108.0], [89.0, 5111.0], [89.1, 5111.0], [89.2, 5111.0], [89.3, 5111.0], [89.4, 5111.0], [89.5, 5115.0], [89.6, 5115.0], [89.7, 5115.0], [89.8, 5115.0], [89.9, 5115.0], [90.0, 5127.0], [90.1, 5127.0], [90.2, 5127.0], [90.3, 5127.0], [90.4, 5127.0], [90.5, 5135.0], [90.6, 5135.0], [90.7, 5135.0], [90.8, 5135.0], [90.9, 5135.0], [91.0, 5137.0], [91.1, 5137.0], [91.2, 5137.0], [91.3, 5137.0], [91.4, 5137.0], [91.5, 5156.0], [91.6, 5156.0], [91.7, 5156.0], [91.8, 5156.0], [91.9, 5156.0], [92.0, 5161.0], [92.1, 5161.0], [92.2, 5161.0], [92.3, 5161.0], [92.4, 5161.0], [92.5, 5175.0], [92.6, 5175.0], [92.7, 5175.0], [92.8, 5175.0], [92.9, 5175.0], [93.0, 5178.0], [93.1, 5178.0], [93.2, 5178.0], [93.3, 5178.0], [93.4, 5178.0], [93.5, 5181.0], [93.6, 5181.0], [93.7, 5181.0], [93.8, 5181.0], [93.9, 5181.0], [94.0, 5182.0], [94.1, 5182.0], [94.2, 5182.0], [94.3, 5182.0], [94.4, 5182.0], [94.5, 5185.0], [94.6, 5185.0], [94.7, 5185.0], [94.8, 5185.0], [94.9, 5185.0], [95.0, 5194.0], [95.1, 5194.0], [95.2, 5194.0], [95.3, 5194.0], [95.4, 5194.0], [95.5, 5214.0], [95.6, 5214.0], [95.7, 5214.0], [95.8, 5214.0], [95.9, 5214.0], [96.0, 5218.0], [96.1, 5218.0], [96.2, 5218.0], [96.3, 5218.0], [96.4, 5218.0], [96.5, 5226.0], [96.6, 5226.0], [96.7, 5226.0], [96.8, 5226.0], [96.9, 5226.0], [97.0, 5232.0], [97.1, 5232.0], [97.2, 5232.0], [97.3, 5232.0], [97.4, 5232.0], [97.5, 5241.0], [97.6, 5241.0], [97.7, 5241.0], [97.8, 5241.0], [97.9, 5241.0], [98.0, 5247.0], [98.1, 5247.0], [98.2, 5247.0], [98.3, 5247.0], [98.4, 5247.0], [98.5, 5266.0], [98.6, 5266.0], [98.7, 5266.0], [98.8, 5266.0], [98.9, 5266.0], [99.0, 5363.0], [99.1, 5363.0], [99.2, 5363.0], [99.3, 5363.0], [99.4, 5363.0], [99.5, 5418.0], [99.6, 5418.0], [99.7, 5418.0], [99.8, 5418.0], [99.9, 5418.0]], "isOverall": false, "label": "Appointment List", "isController": false}, {"data": [[0.0, 152.0], [0.1, 152.0], [0.2, 152.0], [0.3, 152.0], [0.4, 152.0], [0.5, 158.0], [0.6, 158.0], [0.7, 158.0], [0.8, 158.0], [0.9, 158.0], [1.0, 158.0], [1.1, 158.0], [1.2, 158.0], [1.3, 158.0], [1.4, 158.0], [1.5, 161.0], [1.6, 161.0], [1.7, 161.0], [1.8, 161.0], [1.9, 161.0], [2.0, 163.0], [2.1, 163.0], [2.2, 163.0], [2.3, 163.0], [2.4, 163.0], [2.5, 165.0], [2.6, 165.0], [2.7, 165.0], [2.8, 165.0], [2.9, 165.0], [3.0, 165.0], [3.1, 165.0], [3.2, 165.0], [3.3, 165.0], [3.4, 165.0], [3.5, 170.0], [3.6, 170.0], [3.7, 170.0], [3.8, 170.0], [3.9, 170.0], [4.0, 173.0], [4.1, 173.0], [4.2, 173.0], [4.3, 173.0], [4.4, 173.0], [4.5, 174.0], [4.6, 174.0], [4.7, 174.0], [4.8, 174.0], [4.9, 174.0], [5.0, 174.0], [5.1, 174.0], [5.2, 174.0], [5.3, 174.0], [5.4, 174.0], [5.5, 175.0], [5.6, 175.0], [5.7, 175.0], [5.8, 175.0], [5.9, 175.0], [6.0, 178.0], [6.1, 178.0], [6.2, 178.0], [6.3, 178.0], [6.4, 178.0], [6.5, 184.0], [6.6, 184.0], [6.7, 184.0], [6.8, 184.0], [6.9, 184.0], [7.0, 184.0], [7.1, 184.0], [7.2, 184.0], [7.3, 184.0], [7.4, 184.0], [7.5, 185.0], [7.6, 185.0], [7.7, 185.0], [7.8, 185.0], [7.9, 185.0], [8.0, 187.0], [8.1, 187.0], [8.2, 187.0], [8.3, 187.0], [8.4, 187.0], [8.5, 187.0], [8.6, 187.0], [8.7, 187.0], [8.8, 187.0], [8.9, 187.0], [9.0, 190.0], [9.1, 190.0], [9.2, 190.0], [9.3, 190.0], [9.4, 190.0], [9.5, 191.0], [9.6, 191.0], [9.7, 191.0], [9.8, 191.0], [9.9, 191.0], [10.0, 191.0], [10.1, 191.0], [10.2, 191.0], [10.3, 191.0], [10.4, 191.0], [10.5, 193.0], [10.6, 193.0], [10.7, 193.0], [10.8, 193.0], [10.9, 193.0], [11.0, 194.0], [11.1, 194.0], [11.2, 194.0], [11.3, 194.0], [11.4, 194.0], [11.5, 194.0], [11.6, 194.0], [11.7, 194.0], [11.8, 194.0], [11.9, 194.0], [12.0, 195.0], [12.1, 195.0], [12.2, 195.0], [12.3, 195.0], [12.4, 195.0], [12.5, 197.0], [12.6, 197.0], [12.7, 197.0], [12.8, 197.0], [12.9, 197.0], [13.0, 197.0], [13.1, 197.0], [13.2, 197.0], [13.3, 197.0], [13.4, 197.0], [13.5, 198.0], [13.6, 198.0], [13.7, 198.0], [13.8, 198.0], [13.9, 198.0], [14.0, 198.0], [14.1, 198.0], [14.2, 198.0], [14.3, 198.0], [14.4, 198.0], [14.5, 199.0], [14.6, 199.0], [14.7, 199.0], [14.8, 199.0], [14.9, 199.0], [15.0, 200.0], [15.1, 200.0], [15.2, 200.0], [15.3, 200.0], [15.4, 200.0], [15.5, 201.0], [15.6, 201.0], [15.7, 201.0], [15.8, 201.0], [15.9, 201.0], [16.0, 201.0], [16.1, 201.0], [16.2, 201.0], [16.3, 201.0], [16.4, 201.0], [16.5, 201.0], [16.6, 201.0], [16.7, 201.0], [16.8, 201.0], [16.9, 201.0], [17.0, 202.0], [17.1, 202.0], [17.2, 202.0], [17.3, 202.0], [17.4, 202.0], [17.5, 202.0], [17.6, 202.0], [17.7, 202.0], [17.8, 202.0], [17.9, 202.0], [18.0, 204.0], [18.1, 204.0], [18.2, 204.0], [18.3, 204.0], [18.4, 204.0], [18.5, 204.0], [18.6, 204.0], [18.7, 204.0], [18.8, 204.0], [18.9, 204.0], [19.0, 205.0], [19.1, 205.0], [19.2, 205.0], [19.3, 205.0], [19.4, 205.0], [19.5, 206.0], [19.6, 206.0], [19.7, 206.0], [19.8, 206.0], [19.9, 206.0], [20.0, 206.0], [20.1, 206.0], [20.2, 206.0], [20.3, 206.0], [20.4, 206.0], [20.5, 206.0], [20.6, 206.0], [20.7, 206.0], [20.8, 206.0], [20.9, 206.0], [21.0, 206.0], [21.1, 206.0], [21.2, 206.0], [21.3, 206.0], [21.4, 206.0], [21.5, 207.0], [21.6, 207.0], [21.7, 207.0], [21.8, 207.0], [21.9, 207.0], [22.0, 207.0], [22.1, 207.0], [22.2, 207.0], [22.3, 207.0], [22.4, 207.0], [22.5, 208.0], [22.6, 208.0], [22.7, 208.0], [22.8, 208.0], [22.9, 208.0], [23.0, 209.0], [23.1, 209.0], [23.2, 209.0], [23.3, 209.0], [23.4, 209.0], [23.5, 210.0], [23.6, 210.0], [23.7, 210.0], [23.8, 210.0], [23.9, 210.0], [24.0, 210.0], [24.1, 210.0], [24.2, 210.0], [24.3, 210.0], [24.4, 210.0], [24.5, 210.0], [24.6, 210.0], [24.7, 210.0], [24.8, 210.0], [24.9, 210.0], [25.0, 211.0], [25.1, 211.0], [25.2, 211.0], [25.3, 211.0], [25.4, 211.0], [25.5, 211.0], [25.6, 211.0], [25.7, 211.0], [25.8, 211.0], [25.9, 211.0], [26.0, 212.0], [26.1, 212.0], [26.2, 212.0], [26.3, 212.0], [26.4, 212.0], [26.5, 212.0], [26.6, 212.0], [26.7, 212.0], [26.8, 212.0], [26.9, 212.0], [27.0, 212.0], [27.1, 212.0], [27.2, 212.0], [27.3, 212.0], [27.4, 212.0], [27.5, 215.0], [27.6, 215.0], [27.7, 215.0], [27.8, 215.0], [27.9, 215.0], [28.0, 215.0], [28.1, 215.0], [28.2, 215.0], [28.3, 215.0], [28.4, 215.0], [28.5, 215.0], [28.6, 215.0], [28.7, 215.0], [28.8, 215.0], [28.9, 215.0], [29.0, 216.0], [29.1, 216.0], [29.2, 216.0], [29.3, 216.0], [29.4, 216.0], [29.5, 216.0], [29.6, 216.0], [29.7, 216.0], [29.8, 216.0], [29.9, 216.0], [30.0, 216.0], [30.1, 216.0], [30.2, 216.0], [30.3, 216.0], [30.4, 216.0], [30.5, 216.0], [30.6, 216.0], [30.7, 216.0], [30.8, 216.0], [30.9, 216.0], [31.0, 217.0], [31.1, 217.0], [31.2, 217.0], [31.3, 217.0], [31.4, 217.0], [31.5, 218.0], [31.6, 218.0], [31.7, 218.0], [31.8, 218.0], [31.9, 218.0], [32.0, 218.0], [32.1, 218.0], [32.2, 218.0], [32.3, 218.0], [32.4, 218.0], [32.5, 218.0], [32.6, 218.0], [32.7, 218.0], [32.8, 218.0], [32.9, 218.0], [33.0, 218.0], [33.1, 218.0], [33.2, 218.0], [33.3, 218.0], [33.4, 218.0], [33.5, 218.0], [33.6, 218.0], [33.7, 218.0], [33.8, 218.0], [33.9, 218.0], [34.0, 219.0], [34.1, 219.0], [34.2, 219.0], [34.3, 219.0], [34.4, 219.0], [34.5, 219.0], [34.6, 219.0], [34.7, 219.0], [34.8, 219.0], [34.9, 219.0], [35.0, 219.0], [35.1, 219.0], [35.2, 219.0], [35.3, 219.0], [35.4, 219.0], [35.5, 220.0], [35.6, 220.0], [35.7, 220.0], [35.8, 220.0], [35.9, 220.0], [36.0, 220.0], [36.1, 220.0], [36.2, 220.0], [36.3, 220.0], [36.4, 220.0], [36.5, 221.0], [36.6, 221.0], [36.7, 221.0], [36.8, 221.0], [36.9, 221.0], [37.0, 222.0], [37.1, 222.0], [37.2, 222.0], [37.3, 222.0], [37.4, 222.0], [37.5, 222.0], [37.6, 222.0], [37.7, 222.0], [37.8, 222.0], [37.9, 222.0], [38.0, 223.0], [38.1, 223.0], [38.2, 223.0], [38.3, 223.0], [38.4, 223.0], [38.5, 224.0], [38.6, 224.0], [38.7, 224.0], [38.8, 224.0], [38.9, 224.0], [39.0, 225.0], [39.1, 225.0], [39.2, 225.0], [39.3, 225.0], [39.4, 225.0], [39.5, 226.0], [39.6, 226.0], [39.7, 226.0], [39.8, 226.0], [39.9, 226.0], [40.0, 227.0], [40.1, 227.0], [40.2, 227.0], [40.3, 227.0], [40.4, 227.0], [40.5, 228.0], [40.6, 228.0], [40.7, 228.0], [40.8, 228.0], [40.9, 228.0], [41.0, 228.0], [41.1, 228.0], [41.2, 228.0], [41.3, 228.0], [41.4, 228.0], [41.5, 229.0], [41.6, 229.0], [41.7, 229.0], [41.8, 229.0], [41.9, 229.0], [42.0, 229.0], [42.1, 229.0], [42.2, 229.0], [42.3, 229.0], [42.4, 229.0], [42.5, 230.0], [42.6, 230.0], [42.7, 230.0], [42.8, 230.0], [42.9, 230.0], [43.0, 231.0], [43.1, 231.0], [43.2, 231.0], [43.3, 231.0], [43.4, 231.0], [43.5, 232.0], [43.6, 232.0], [43.7, 232.0], [43.8, 232.0], [43.9, 232.0], [44.0, 233.0], [44.1, 233.0], [44.2, 233.0], [44.3, 233.0], [44.4, 233.0], [44.5, 236.0], [44.6, 236.0], [44.7, 236.0], [44.8, 236.0], [44.9, 236.0], [45.0, 236.0], [45.1, 236.0], [45.2, 236.0], [45.3, 236.0], [45.4, 236.0], [45.5, 236.0], [45.6, 236.0], [45.7, 236.0], [45.8, 236.0], [45.9, 236.0], [46.0, 238.0], [46.1, 238.0], [46.2, 238.0], [46.3, 238.0], [46.4, 238.0], [46.5, 240.0], [46.6, 240.0], [46.7, 240.0], [46.8, 240.0], [46.9, 240.0], [47.0, 241.0], [47.1, 241.0], [47.2, 241.0], [47.3, 241.0], [47.4, 241.0], [47.5, 242.0], [47.6, 242.0], [47.7, 242.0], [47.8, 242.0], [47.9, 242.0], [48.0, 242.0], [48.1, 242.0], [48.2, 242.0], [48.3, 242.0], [48.4, 242.0], [48.5, 243.0], [48.6, 243.0], [48.7, 243.0], [48.8, 243.0], [48.9, 243.0], [49.0, 244.0], [49.1, 244.0], [49.2, 244.0], [49.3, 244.0], [49.4, 244.0], [49.5, 249.0], [49.6, 249.0], [49.7, 249.0], [49.8, 249.0], [49.9, 249.0], [50.0, 250.0], [50.1, 250.0], [50.2, 250.0], [50.3, 250.0], [50.4, 250.0], [50.5, 250.0], [50.6, 250.0], [50.7, 250.0], [50.8, 250.0], [50.9, 250.0], [51.0, 251.0], [51.1, 251.0], [51.2, 251.0], [51.3, 251.0], [51.4, 251.0], [51.5, 253.0], [51.6, 253.0], [51.7, 253.0], [51.8, 253.0], [51.9, 253.0], [52.0, 254.0], [52.1, 254.0], [52.2, 254.0], [52.3, 254.0], [52.4, 254.0], [52.5, 256.0], [52.6, 256.0], [52.7, 256.0], [52.8, 256.0], [52.9, 256.0], [53.0, 261.0], [53.1, 261.0], [53.2, 261.0], [53.3, 261.0], [53.4, 261.0], [53.5, 264.0], [53.6, 264.0], [53.7, 264.0], [53.8, 264.0], [53.9, 264.0], [54.0, 264.0], [54.1, 264.0], [54.2, 264.0], [54.3, 264.0], [54.4, 264.0], [54.5, 264.0], [54.6, 264.0], [54.7, 264.0], [54.8, 264.0], [54.9, 264.0], [55.0, 265.0], [55.1, 265.0], [55.2, 265.0], [55.3, 265.0], [55.4, 265.0], [55.5, 265.0], [55.6, 265.0], [55.7, 265.0], [55.8, 265.0], [55.9, 265.0], [56.0, 266.0], [56.1, 266.0], [56.2, 266.0], [56.3, 266.0], [56.4, 266.0], [56.5, 266.0], [56.6, 266.0], [56.7, 266.0], [56.8, 266.0], [56.9, 266.0], [57.0, 268.0], [57.1, 268.0], [57.2, 268.0], [57.3, 268.0], [57.4, 268.0], [57.5, 269.0], [57.6, 269.0], [57.7, 269.0], [57.8, 269.0], [57.9, 269.0], [58.0, 270.0], [58.1, 270.0], [58.2, 270.0], [58.3, 270.0], [58.4, 270.0], [58.5, 271.0], [58.6, 271.0], [58.7, 271.0], [58.8, 271.0], [58.9, 271.0], [59.0, 271.0], [59.1, 271.0], [59.2, 271.0], [59.3, 271.0], [59.4, 271.0], [59.5, 273.0], [59.6, 273.0], [59.7, 273.0], [59.8, 273.0], [59.9, 273.0], [60.0, 274.0], [60.1, 274.0], [60.2, 274.0], [60.3, 274.0], [60.4, 274.0], [60.5, 275.0], [60.6, 275.0], [60.7, 275.0], [60.8, 275.0], [60.9, 275.0], [61.0, 276.0], [61.1, 276.0], [61.2, 276.0], [61.3, 276.0], [61.4, 276.0], [61.5, 277.0], [61.6, 277.0], [61.7, 277.0], [61.8, 277.0], [61.9, 277.0], [62.0, 278.0], [62.1, 278.0], [62.2, 278.0], [62.3, 278.0], [62.4, 278.0], [62.5, 281.0], [62.6, 281.0], [62.7, 281.0], [62.8, 281.0], [62.9, 281.0], [63.0, 283.0], [63.1, 283.0], [63.2, 283.0], [63.3, 283.0], [63.4, 283.0], [63.5, 284.0], [63.6, 284.0], [63.7, 284.0], [63.8, 284.0], [63.9, 284.0], [64.0, 284.0], [64.1, 284.0], [64.2, 284.0], [64.3, 284.0], [64.4, 284.0], [64.5, 286.0], [64.6, 286.0], [64.7, 286.0], [64.8, 286.0], [64.9, 286.0], [65.0, 287.0], [65.1, 287.0], [65.2, 287.0], [65.3, 287.0], [65.4, 287.0], [65.5, 289.0], [65.6, 289.0], [65.7, 289.0], [65.8, 289.0], [65.9, 289.0], [66.0, 290.0], [66.1, 290.0], [66.2, 290.0], [66.3, 290.0], [66.4, 290.0], [66.5, 291.0], [66.6, 291.0], [66.7, 291.0], [66.8, 291.0], [66.9, 291.0], [67.0, 291.0], [67.1, 291.0], [67.2, 291.0], [67.3, 291.0], [67.4, 291.0], [67.5, 295.0], [67.6, 295.0], [67.7, 295.0], [67.8, 295.0], [67.9, 295.0], [68.0, 295.0], [68.1, 295.0], [68.2, 295.0], [68.3, 295.0], [68.4, 295.0], [68.5, 296.0], [68.6, 296.0], [68.7, 296.0], [68.8, 296.0], [68.9, 296.0], [69.0, 299.0], [69.1, 299.0], [69.2, 299.0], [69.3, 299.0], [69.4, 299.0], [69.5, 300.0], [69.6, 300.0], [69.7, 300.0], [69.8, 300.0], [69.9, 300.0], [70.0, 301.0], [70.1, 301.0], [70.2, 301.0], [70.3, 301.0], [70.4, 301.0], [70.5, 302.0], [70.6, 302.0], [70.7, 302.0], [70.8, 302.0], [70.9, 302.0], [71.0, 305.0], [71.1, 305.0], [71.2, 305.0], [71.3, 305.0], [71.4, 305.0], [71.5, 306.0], [71.6, 306.0], [71.7, 306.0], [71.8, 306.0], [71.9, 306.0], [72.0, 306.0], [72.1, 306.0], [72.2, 306.0], [72.3, 306.0], [72.4, 306.0], [72.5, 307.0], [72.6, 307.0], [72.7, 307.0], [72.8, 307.0], [72.9, 307.0], [73.0, 307.0], [73.1, 307.0], [73.2, 307.0], [73.3, 307.0], [73.4, 307.0], [73.5, 308.0], [73.6, 308.0], [73.7, 308.0], [73.8, 308.0], [73.9, 308.0], [74.0, 308.0], [74.1, 308.0], [74.2, 308.0], [74.3, 308.0], [74.4, 308.0], [74.5, 309.0], [74.6, 309.0], [74.7, 309.0], [74.8, 309.0], [74.9, 309.0], [75.0, 311.0], [75.1, 311.0], [75.2, 311.0], [75.3, 311.0], [75.4, 311.0], [75.5, 315.0], [75.6, 315.0], [75.7, 315.0], [75.8, 315.0], [75.9, 315.0], [76.0, 316.0], [76.1, 316.0], [76.2, 316.0], [76.3, 316.0], [76.4, 316.0], [76.5, 317.0], [76.6, 317.0], [76.7, 317.0], [76.8, 317.0], [76.9, 317.0], [77.0, 318.0], [77.1, 318.0], [77.2, 318.0], [77.3, 318.0], [77.4, 318.0], [77.5, 318.0], [77.6, 318.0], [77.7, 318.0], [77.8, 318.0], [77.9, 318.0], [78.0, 319.0], [78.1, 319.0], [78.2, 319.0], [78.3, 319.0], [78.4, 319.0], [78.5, 320.0], [78.6, 320.0], [78.7, 320.0], [78.8, 320.0], [78.9, 320.0], [79.0, 321.0], [79.1, 321.0], [79.2, 321.0], [79.3, 321.0], [79.4, 321.0], [79.5, 321.0], [79.6, 321.0], [79.7, 321.0], [79.8, 321.0], [79.9, 321.0], [80.0, 322.0], [80.1, 322.0], [80.2, 322.0], [80.3, 322.0], [80.4, 322.0], [80.5, 322.0], [80.6, 322.0], [80.7, 322.0], [80.8, 322.0], [80.9, 322.0], [81.0, 323.0], [81.1, 323.0], [81.2, 323.0], [81.3, 323.0], [81.4, 323.0], [81.5, 323.0], [81.6, 323.0], [81.7, 323.0], [81.8, 323.0], [81.9, 323.0], [82.0, 324.0], [82.1, 324.0], [82.2, 324.0], [82.3, 324.0], [82.4, 324.0], [82.5, 325.0], [82.6, 325.0], [82.7, 325.0], [82.8, 325.0], [82.9, 325.0], [83.0, 336.0], [83.1, 336.0], [83.2, 336.0], [83.3, 336.0], [83.4, 336.0], [83.5, 336.0], [83.6, 336.0], [83.7, 336.0], [83.8, 336.0], [83.9, 336.0], [84.0, 341.0], [84.1, 341.0], [84.2, 341.0], [84.3, 341.0], [84.4, 341.0], [84.5, 349.0], [84.6, 349.0], [84.7, 349.0], [84.8, 349.0], [84.9, 349.0], [85.0, 350.0], [85.1, 350.0], [85.2, 350.0], [85.3, 350.0], [85.4, 350.0], [85.5, 352.0], [85.6, 352.0], [85.7, 352.0], [85.8, 352.0], [85.9, 352.0], [86.0, 355.0], [86.1, 355.0], [86.2, 355.0], [86.3, 355.0], [86.4, 355.0], [86.5, 356.0], [86.6, 356.0], [86.7, 356.0], [86.8, 356.0], [86.9, 356.0], [87.0, 362.0], [87.1, 362.0], [87.2, 362.0], [87.3, 362.0], [87.4, 362.0], [87.5, 364.0], [87.6, 364.0], [87.7, 364.0], [87.8, 364.0], [87.9, 364.0], [88.0, 367.0], [88.1, 367.0], [88.2, 367.0], [88.3, 367.0], [88.4, 367.0], [88.5, 370.0], [88.6, 370.0], [88.7, 370.0], [88.8, 370.0], [88.9, 370.0], [89.0, 371.0], [89.1, 371.0], [89.2, 371.0], [89.3, 371.0], [89.4, 371.0], [89.5, 372.0], [89.6, 372.0], [89.7, 372.0], [89.8, 372.0], [89.9, 372.0], [90.0, 392.0], [90.1, 392.0], [90.2, 392.0], [90.3, 392.0], [90.4, 392.0], [90.5, 394.0], [90.6, 394.0], [90.7, 394.0], [90.8, 394.0], [90.9, 394.0], [91.0, 412.0], [91.1, 412.0], [91.2, 412.0], [91.3, 412.0], [91.4, 412.0], [91.5, 412.0], [91.6, 412.0], [91.7, 412.0], [91.8, 412.0], [91.9, 412.0], [92.0, 416.0], [92.1, 416.0], [92.2, 416.0], [92.3, 416.0], [92.4, 416.0], [92.5, 416.0], [92.6, 416.0], [92.7, 416.0], [92.8, 416.0], [92.9, 416.0], [93.0, 431.0], [93.1, 431.0], [93.2, 431.0], [93.3, 431.0], [93.4, 431.0], [93.5, 432.0], [93.6, 432.0], [93.7, 432.0], [93.8, 432.0], [93.9, 432.0], [94.0, 436.0], [94.1, 436.0], [94.2, 436.0], [94.3, 436.0], [94.4, 436.0], [94.5, 447.0], [94.6, 447.0], [94.7, 447.0], [94.8, 447.0], [94.9, 447.0], [95.0, 461.0], [95.1, 461.0], [95.2, 461.0], [95.3, 461.0], [95.4, 461.0], [95.5, 472.0], [95.6, 472.0], [95.7, 472.0], [95.8, 472.0], [95.9, 472.0], [96.0, 481.0], [96.1, 481.0], [96.2, 481.0], [96.3, 481.0], [96.4, 481.0], [96.5, 489.0], [96.6, 489.0], [96.7, 489.0], [96.8, 489.0], [96.9, 489.0], [97.0, 499.0], [97.1, 499.0], [97.2, 499.0], [97.3, 499.0], [97.4, 499.0], [97.5, 530.0], [97.6, 530.0], [97.7, 530.0], [97.8, 530.0], [97.9, 530.0], [98.0, 552.0], [98.1, 552.0], [98.2, 552.0], [98.3, 552.0], [98.4, 552.0], [98.5, 563.0], [98.6, 563.0], [98.7, 563.0], [98.8, 563.0], [98.9, 563.0], [99.0, 585.0], [99.1, 585.0], [99.2, 585.0], [99.3, 585.0], [99.4, 585.0], [99.5, 728.0], [99.6, 728.0], [99.7, 728.0], [99.8, 728.0], [99.9, 728.0]], "isOverall": false, "label": "Appointment List-2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 109.0, "series": [{"data": [[600.0, 2.0], [800.0, 1.0], [900.0, 2.0], [1000.0, 5.0], [1100.0, 3.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 7.0], [100.0, 4.0], [1600.0, 1.0], [1700.0, 8.0], [1800.0, 5.0], [2000.0, 3.0], [2100.0, 8.0], [2200.0, 2.0], [2400.0, 10.0], [2500.0, 5.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 10.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 3.0], [200.0, 6.0], [3200.0, 14.0], [3300.0, 6.0], [3400.0, 3.0], [3500.0, 2.0], [3600.0, 5.0], [3700.0, 12.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 4.0], [4200.0, 12.0], [4100.0, 2.0], [4300.0, 21.0], [400.0, 1.0], [500.0, 9.0]], "isOverall": false, "label": "Appointment List-0", "isController": false}, {"data": [[300.0, 27.0], [600.0, 4.0], [700.0, 1.0], [200.0, 107.0], [100.0, 32.0], [400.0, 15.0], [500.0, 14.0]], "isOverall": false, "label": "Appointment List-1", "isController": false}, {"data": [[600.0, 4.0], [800.0, 6.0], [900.0, 5.0], [1000.0, 1.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 8.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 8.0], [2000.0, 1.0], [2100.0, 5.0], [2200.0, 5.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 8.0], [2600.0, 1.0], [2700.0, 2.0], [2800.0, 7.0], [2900.0, 8.0], [3000.0, 1.0], [3100.0, 3.0], [3200.0, 5.0], [3300.0, 8.0], [3400.0, 1.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 4.0], [3800.0, 12.0], [3900.0, 5.0], [4000.0, 2.0], [4100.0, 5.0], [4200.0, 4.0], [4300.0, 6.0], [4400.0, 6.0], [4500.0, 5.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 3.0], [4900.0, 6.0], [5000.0, 6.0], [5100.0, 14.0], [5200.0, 7.0], [5300.0, 1.0], [5400.0, 1.0], [400.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "Appointment List", "isController": false}, {"data": [[300.0, 43.0], [700.0, 1.0], [100.0, 30.0], [200.0, 109.0], [400.0, 13.0], [500.0, 4.0]], "isOverall": false, "label": "Appointment List-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 83.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 389.0, "series": [{"data": [[0.0, 389.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 83.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 328.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 97.69000000000004, "minX": 1.7019234E12, "maxY": 97.69000000000004, "series": [{"data": [[1.7019234E12, 97.69000000000004]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019234E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 159.5, "minX": 1.0, "maxY": 5418.0, "series": [{"data": [[2.0, 4309.0], [3.0, 4290.0], [5.0, 4343.5], [6.0, 4307.0], [7.0, 4323.0], [8.0, 4221.0], [9.0, 4309.0], [11.0, 4324.5], [13.0, 4326.0], [15.0, 4304.0], [17.0, 4327.0], [18.0, 4222.0], [19.0, 4269.0], [20.0, 4348.0], [21.0, 4317.0], [22.0, 4320.0], [23.0, 4319.0], [24.0, 4334.0], [26.0, 4235.5], [27.0, 4273.0], [28.0, 4336.0], [29.0, 4343.0], [30.0, 4146.0], [31.0, 4246.0], [33.0, 4236.0], [32.0, 4233.0], [35.0, 4266.0], [34.0, 4101.0], [37.0, 3942.5], [39.0, 4037.0], [38.0, 4026.0], [41.0, 4027.0], [40.0, 4016.0], [43.0, 3887.0], [42.0, 3729.0], [45.0, 3790.0], [44.0, 3798.0], [49.0, 3735.0], [48.0, 3827.0], [51.0, 3690.0], [50.0, 3791.0], [53.0, 3768.5], [55.0, 3668.0], [54.0, 3744.0], [57.0, 3760.0], [56.0, 3713.0], [59.0, 3736.0], [58.0, 3698.0], [61.0, 3624.0], [60.0, 3731.0], [63.0, 3593.0], [62.0, 3650.0], [67.0, 3413.0], [66.0, 3395.0], [65.0, 3558.0], [64.0, 3467.0], [71.0, 3299.0], [70.0, 3299.0], [69.0, 3305.0], [68.0, 3410.0], [75.0, 3314.0], [74.0, 3294.0], [73.0, 3310.5], [79.0, 3296.0], [78.0, 3299.0], [77.0, 3279.0], [76.0, 3309.0], [83.0, 3267.0], [82.0, 3279.0], [81.0, 3261.0], [80.0, 3258.0], [87.0, 3175.0], [86.0, 3252.0], [85.0, 3262.0], [84.0, 3241.0], [91.0, 3147.0], [90.0, 3093.0], [89.0, 3152.0], [88.0, 3236.0], [95.0, 2797.0], [94.0, 3060.0], [93.0, 3053.0], [92.0, 3066.0], [98.0, 2898.0], [97.0, 2933.0], [96.0, 2938.0], [103.0, 2852.0], [102.0, 2872.0], [101.0, 2883.0], [100.0, 2872.0], [107.0, 2796.0], [106.0, 2826.5], [104.0, 2845.0], [111.0, 2676.0], [110.0, 2729.0], [109.0, 2803.0], [108.0, 2795.0], [115.0, 2500.0], [114.0, 2540.0], [113.0, 2535.0], [112.0, 2677.0], [119.0, 2455.0], [118.0, 2491.0], [117.0, 2501.0], [116.0, 2511.0], [123.0, 2438.0], [122.0, 2446.5], [120.0, 2456.0], [127.0, 2415.0], [126.0, 2407.5], [124.0, 2417.0], [134.0, 1491.6666666666667], [135.0, 2146.0], [132.0, 2125.0], [131.0, 1759.0], [130.0, 2261.5], [128.0, 2109.0], [136.0, 830.0], [137.0, 1128.5], [138.0, 1139.0], [140.0, 1467.6666666666667], [139.0, 233.0], [143.0, 1048.5], [142.0, 1043.5], [141.0, 2095.0], [149.0, 995.0], [151.0, 1759.0], [150.0, 1839.0], [148.0, 1745.0], [147.0, 1758.0], [145.0, 1761.0], [144.0, 1764.0], [158.0, 1497.0], [157.0, 1536.0], [156.0, 1501.0], [155.0, 1561.0], [154.0, 1675.0], [153.0, 1830.0], [163.0, 974.0], [167.0, 1257.0], [166.0, 1364.0], [165.0, 1394.0], [164.0, 1332.0], [162.0, 1500.0], [161.0, 1527.0], [160.0, 1478.0], [174.0, 1074.0], [173.0, 1079.5], [171.0, 998.0], [170.0, 1135.5], [168.0, 980.0], [183.0, 531.0], [182.0, 634.0], [181.0, 541.0], [180.0, 520.0], [179.0, 570.0], [178.0, 1057.0], [177.0, 886.0], [176.0, 1023.5], [189.0, 562.5], [187.0, 510.0], [186.0, 515.0], [185.0, 522.0], [184.0, 540.0], [1.0, 4331.0]], "isOverall": false, "label": "Appointment List-0", "isController": false}, {"data": [[97.69000000000007, 2686.6150000000025]], "isOverall": false, "label": "Appointment List-0-Aggregated", "isController": false}, {"data": [[2.0, 325.0], [3.0, 628.0], [5.0, 525.5], [6.0, 622.0], [7.0, 605.0], [8.0, 597.0], [9.0, 559.0], [11.0, 571.5], [13.0, 577.5], [15.0, 520.5], [17.0, 487.5], [18.0, 494.0], [19.0, 510.0], [20.0, 491.0], [21.0, 475.0], [22.0, 525.0], [23.0, 336.0], [24.0, 406.0], [26.0, 418.0], [27.0, 348.0], [28.0, 262.0], [29.0, 307.0], [30.0, 321.0], [31.0, 429.0], [33.0, 428.0], [32.0, 436.0], [35.0, 279.0], [34.0, 301.0], [37.0, 419.0], [39.0, 331.0], [38.0, 334.0], [41.0, 286.0], [40.0, 283.0], [43.0, 359.0], [42.0, 466.0], [45.0, 432.0], [44.0, 409.0], [49.0, 428.0], [48.0, 323.6666666666667], [51.0, 330.0], [50.0, 275.0], [53.0, 287.0], [55.0, 239.0], [54.0, 304.0], [57.0, 255.0], [56.0, 259.0], [59.0, 279.0], [58.0, 333.0], [61.0, 279.0], [60.0, 244.0], [63.0, 265.0], [62.0, 254.0], [67.0, 290.0], [66.0, 319.0], [65.0, 301.0], [64.0, 317.0], [71.0, 329.0], [70.0, 320.0], [69.0, 319.0], [68.0, 255.0], [75.0, 306.0], [74.0, 286.0], [73.0, 337.5], [79.0, 258.0], [78.0, 267.0], [77.0, 336.0], [76.0, 288.0], [83.0, 250.0], [82.0, 272.0], [81.0, 275.0], [80.0, 271.0], [87.0, 266.0], [86.0, 222.0], [85.0, 239.0], [84.0, 279.0], [91.0, 226.0], [90.0, 245.0], [89.0, 301.0], [88.0, 233.0], [95.0, 509.0], [94.0, 222.0], [93.0, 228.0], [92.0, 248.0], [98.0, 220.0], [97.0, 228.0], [96.0, 257.0], [103.0, 241.0], [102.0, 225.0], [101.0, 217.0], [100.0, 228.0], [107.0, 213.0], [106.0, 232.0], [104.0, 211.0], [111.0, 221.0], [110.0, 227.0], [109.0, 213.0], [108.0, 197.0], [115.0, 226.0], [114.0, 250.0], [113.0, 244.0], [112.0, 215.0], [119.0, 256.0], [118.0, 216.0], [117.0, 215.0], [116.0, 221.0], [123.0, 220.0], [122.0, 237.0], [120.0, 255.0], [127.0, 232.0], [126.0, 230.5], [124.0, 235.0], [134.0, 211.0], [135.0, 181.0], [132.0, 208.0], [131.0, 706.0], [130.0, 207.5], [128.0, 204.0], [136.0, 201.0], [137.0, 211.5], [138.0, 197.0], [140.0, 195.0], [139.0, 237.0], [143.0, 222.5], [142.0, 238.0], [141.0, 202.0], [149.0, 183.0], [151.0, 236.0], [150.0, 180.0], [148.0, 212.0], [147.0, 196.5], [145.0, 201.0], [144.0, 212.0], [158.0, 236.0], [157.0, 215.0], [156.0, 213.0], [155.0, 201.0], [154.0, 219.0], [153.0, 220.0], [163.0, 207.5], [167.0, 161.0], [166.0, 199.0], [165.0, 170.0], [164.0, 242.0], [162.0, 221.0], [161.0, 213.0], [160.0, 215.0], [174.0, 173.0], [173.0, 175.0], [171.0, 213.0], [170.0, 199.5], [168.0, 187.0], [183.0, 203.0], [182.0, 232.0], [181.0, 186.0], [180.0, 197.0], [179.0, 170.0], [178.0, 172.0], [177.0, 172.0], [176.0, 192.0], [189.0, 174.5], [187.0, 179.0], [186.0, 179.0], [185.0, 185.0], [184.0, 182.0], [1.0, 587.0]], "isOverall": false, "label": "Appointment List-1", "isController": false}, {"data": [[97.69000000000007, 285.8]], "isOverall": false, "label": "Appointment List-1-Aggregated", "isController": false}, {"data": [[2.0, 5363.0], [3.0, 5241.0], [5.0, 5230.0], [6.0, 5214.0], [7.0, 5247.0], [8.0, 5156.0], [9.0, 5178.0], [11.0, 5193.5], [13.0, 5203.5], [15.0, 5183.0], [17.0, 5163.0], [18.0, 5085.0], [19.0, 5137.0], [20.0, 5182.0], [21.0, 5078.0], [22.0, 5115.0], [23.0, 5068.0], [24.0, 5135.0], [26.0, 5119.0], [27.0, 5054.0], [28.0, 4991.0], [29.0, 5000.0], [30.0, 5019.0], [31.0, 4982.0], [33.0, 4954.0], [32.0, 4971.0], [35.0, 4827.0], [34.0, 4966.0], [37.0, 4898.5], [39.0, 4785.0], [38.0, 4822.0], [41.0, 4566.0], [40.0, 4590.0], [43.0, 4510.0], [42.0, 4608.0], [45.0, 4517.0], [44.0, 4522.0], [49.0, 4459.0], [48.0, 4457.333333333333], [51.0, 4451.0], [50.0, 4436.0], [53.0, 4375.5], [55.0, 4379.0], [54.0, 4364.0], [57.0, 4265.0], [56.0, 4280.0], [59.0, 4306.0], [58.0, 4356.0], [61.0, 4274.0], [60.0, 4294.0], [63.0, 4166.0], [62.0, 4194.0], [67.0, 4065.0], [66.0, 4130.0], [65.0, 4125.0], [64.0, 4139.0], [71.0, 3933.0], [70.0, 3926.0], [69.0, 3942.0], [68.0, 4017.0], [75.0, 3894.0], [74.0, 3881.0], [73.0, 3918.5], [79.0, 3815.0], [78.0, 3832.0], [77.0, 3879.0], [76.0, 3873.0], [83.0, 3838.0], [82.0, 3819.0], [81.0, 3842.0], [80.0, 3854.0], [87.0, 3762.0], [86.0, 3761.0], [85.0, 3812.0], [84.0, 3819.0], [91.0, 3637.0], [90.0, 3674.0], [89.0, 3702.0], [88.0, 3725.0], [95.0, 3576.0], [94.0, 3515.0], [93.0, 3531.0], [92.0, 3587.0], [98.0, 3369.0], [97.0, 3384.0], [96.0, 3422.0], [103.0, 3322.0], [102.0, 3318.0], [101.0, 3332.0], [100.0, 3361.0], [107.0, 3250.0], [106.0, 3283.5], [104.0, 3327.0], [111.0, 3142.0], [110.0, 3167.0], [109.0, 3218.0], [108.0, 3220.0], [115.0, 2968.0], [114.0, 2997.0], [113.0, 3003.0], [112.0, 3109.0], [119.0, 2923.0], [118.0, 2950.0], [117.0, 2936.0], [116.0, 2950.0], [123.0, 2876.0], [122.0, 2901.0], [120.0, 2908.0], [127.0, 2858.0], [126.0, 2864.5], [124.0, 2878.0], [134.0, 1899.3333333333333], [135.0, 2546.0], [132.0, 2599.0], [131.0, 2682.0], [130.0, 2731.5], [128.0, 2843.0], [136.0, 1215.0], [137.0, 1537.5], [138.0, 1553.5], [140.0, 1858.0], [139.0, 646.0], [143.0, 1485.5], [142.0, 1483.5], [141.0, 2504.0], [149.0, 1361.5], [151.0, 2205.0], [150.0, 2237.0], [148.0, 2165.0], [147.0, 2159.0], [145.0, 2164.0], [144.0, 2217.0], [158.0, 1918.0], [157.0, 1969.0], [156.0, 1934.0], [155.0, 1955.0], [154.0, 2093.0], [153.0, 2279.0], [163.0, 1365.0], [167.0, 1630.0], [166.0, 1751.0], [165.0, 1795.0], [164.0, 1803.0], [162.0, 1936.0], [161.0, 1937.0], [160.0, 1902.5], [174.0, 1468.0], [173.0, 1452.0], [171.0, 1416.0], [170.0, 1494.5], [168.0, 1387.0], [183.0, 897.0], [182.0, 1057.0], [181.0, 921.0], [180.0, 932.0], [179.0, 947.0], [178.0, 1418.0], [177.0, 1262.0], [176.0, 1425.5], [189.0, 914.5], [187.0, 880.0], [186.0, 891.0], [185.0, 885.0], [184.0, 906.0], [1.0, 5418.0]], "isOverall": false, "label": "Appointment List", "isController": false}, {"data": [[97.69000000000007, 3245.105]], "isOverall": false, "label": "Appointment List-Aggregated", "isController": false}, {"data": [[2.0, 728.0], [3.0, 322.0], [5.0, 359.5], [6.0, 284.0], [7.0, 318.0], [8.0, 336.0], [9.0, 309.0], [11.0, 296.5], [13.0, 299.0], [15.0, 357.0], [17.0, 347.5], [18.0, 367.0], [19.0, 356.0], [20.0, 341.0], [21.0, 284.0], [22.0, 269.0], [23.0, 412.0], [24.0, 394.0], [26.0, 464.0], [27.0, 432.0], [28.0, 392.0], [29.0, 349.0], [30.0, 552.0], [31.0, 306.0], [33.0, 289.0], [32.0, 301.0], [35.0, 281.0], [34.0, 563.0], [37.0, 537.0], [39.0, 416.0], [38.0, 461.0], [41.0, 253.0], [40.0, 291.0], [43.0, 264.0], [42.0, 412.0], [45.0, 295.0], [44.0, 315.0], [49.0, 296.0], [48.0, 306.3333333333333], [51.0, 431.0], [50.0, 370.0], [53.0, 320.0], [55.0, 472.0], [54.0, 316.0], [57.0, 250.0], [56.0, 308.0], [59.0, 291.0], [58.0, 324.0], [61.0, 371.0], [60.0, 319.0], [63.0, 308.0], [62.0, 290.0], [67.0, 362.0], [66.0, 416.0], [65.0, 265.0], [64.0, 355.0], [71.0, 305.0], [70.0, 307.0], [69.0, 318.0], [68.0, 352.0], [75.0, 274.0], [74.0, 300.0], [73.0, 270.5], [79.0, 261.0], [78.0, 266.0], [77.0, 264.0], [76.0, 276.0], [83.0, 320.0], [82.0, 268.0], [81.0, 306.0], [80.0, 325.0], [87.0, 321.0], [86.0, 287.0], [85.0, 311.0], [84.0, 299.0], [91.0, 264.0], [90.0, 336.0], [89.0, 249.0], [88.0, 256.0], [95.0, 270.0], [94.0, 233.0], [93.0, 250.0], [92.0, 273.0], [98.0, 251.0], [97.0, 223.0], [96.0, 227.0], [103.0, 229.0], [102.0, 221.0], [101.0, 232.0], [100.0, 261.0], [107.0, 241.0], [106.0, 225.0], [104.0, 271.0], [111.0, 243.0], [110.0, 211.0], [109.0, 202.0], [108.0, 228.0], [115.0, 242.0], [114.0, 207.0], [113.0, 224.0], [112.0, 216.0], [119.0, 212.0], [118.0, 242.0], [117.0, 220.0], [116.0, 218.0], [123.0, 218.0], [122.0, 216.5], [120.0, 197.0], [127.0, 211.0], [126.0, 226.5], [124.0, 226.0], [134.0, 196.33333333333334], [135.0, 218.0], [132.0, 265.0], [131.0, 216.0], [130.0, 262.5], [128.0, 530.0], [136.0, 183.66666666666666], [137.0, 197.0], [138.0, 217.0], [140.0, 194.66666666666666], [139.0, 175.0], [143.0, 214.0], [142.0, 200.5], [141.0, 206.0], [149.0, 183.5], [151.0, 210.0], [150.0, 218.0], [148.0, 208.0], [147.0, 204.5], [145.0, 201.0], [144.0, 240.0], [158.0, 184.0], [157.0, 219.0], [156.0, 219.0], [155.0, 193.0], [154.0, 200.0], [153.0, 229.0], [163.0, 183.0], [167.0, 212.0], [166.0, 187.0], [165.0, 231.0], [164.0, 229.0], [162.0, 215.0], [161.0, 198.0], [160.0, 210.0], [174.0, 222.0], [173.0, 198.0], [171.0, 205.0], [170.0, 159.5], [168.0, 220.0], [183.0, 163.0], [182.0, 191.0], [181.0, 194.0], [180.0, 215.0], [179.0, 206.0], [178.0, 190.0], [177.0, 204.0], [176.0, 210.5], [189.0, 177.5], [187.0, 191.0], [186.0, 197.0], [185.0, 178.0], [184.0, 184.0], [1.0, 499.0]], "isOverall": false, "label": "Appointment List-2", "isController": false}, {"data": [[97.69000000000007, 272.34000000000015]], "isOverall": false, "label": "Appointment List-2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 189.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2793.3333333333335, "minX": 1.7019234E12, "maxY": 44473.333333333336, "series": [{"data": [[1.7019234E12, 44473.333333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7019234E12, 2793.3333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019234E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 272.34000000000015, "minX": 1.7019234E12, "maxY": 3245.105, "series": [{"data": [[1.7019234E12, 2686.6150000000025]], "isOverall": false, "label": "Appointment List-0", "isController": false}, {"data": [[1.7019234E12, 285.8]], "isOverall": false, "label": "Appointment List-1", "isController": false}, {"data": [[1.7019234E12, 3245.105]], "isOverall": false, "label": "Appointment List", "isController": false}, {"data": [[1.7019234E12, 272.34000000000015]], "isOverall": false, "label": "Appointment List-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019234E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 265.395, "minX": 1.7019234E12, "maxY": 2686.425, "series": [{"data": [[1.7019234E12, 2686.4249999999997]], "isOverall": false, "label": "Appointment List-0", "isController": false}, {"data": [[1.7019234E12, 277.075]], "isOverall": false, "label": "Appointment List-1", "isController": false}, {"data": [[1.7019234E12, 2686.425]], "isOverall": false, "label": "Appointment List", "isController": false}, {"data": [[1.7019234E12, 265.395]], "isOverall": false, "label": "Appointment List-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019234E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7019234E12, "maxY": 2673.275000000001, "series": [{"data": [[1.7019234E12, 2673.275000000001]], "isOverall": false, "label": "Appointment List-0", "isController": false}, {"data": [[1.7019234E12, 0.0]], "isOverall": false, "label": "Appointment List-1", "isController": false}, {"data": [[1.7019234E12, 2673.275000000001]], "isOverall": false, "label": "Appointment List", "isController": false}, {"data": [[1.7019234E12, 0.0]], "isOverall": false, "label": "Appointment List-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019234E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 117.0, "minX": 1.7019234E12, "maxY": 5418.0, "series": [{"data": [[1.7019234E12, 5418.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7019234E12, 117.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7019234E12, 4293.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7019234E12, 5217.96]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7019234E12, 527.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7019234E12, 4607.0999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019234E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 232.5, "minX": 30.0, "maxY": 2942.0, "series": [{"data": [[143.0, 587.0], [156.0, 2796.5], [157.0, 432.0], [80.0, 232.5], [115.0, 932.0], [119.0, 265.0], [30.0, 2942.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 157.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 202.0, "minX": 30.0, "maxY": 2472.0, "series": [{"data": [[143.0, 575.0], [156.0, 2427.5], [157.0, 432.0], [80.0, 202.0], [115.0, 541.0], [119.0, 261.0], [30.0, 2472.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 157.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.7019234E12, "maxY": 13.333333333333334, "series": [{"data": [[1.7019234E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019234E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.7019234E12, "maxY": 6.666666666666667, "series": [{"data": [[1.7019234E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7019234E12, 3.3333333333333335]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.7019234E12, 3.3333333333333335]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019234E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.7019234E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.7019234E12, 3.3333333333333335]], "isOverall": false, "label": "Appointment List-2-success", "isController": false}, {"data": [[1.7019234E12, 3.3333333333333335]], "isOverall": false, "label": "Appointment List-0-success", "isController": false}, {"data": [[1.7019234E12, 3.3333333333333335]], "isOverall": false, "label": "Appointment List-1-success", "isController": false}, {"data": [[1.7019234E12, 3.3333333333333335]], "isOverall": false, "label": "Appointment List-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019234E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.7019234E12, "maxY": 13.333333333333334, "series": [{"data": [[1.7019234E12, 13.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019234E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

