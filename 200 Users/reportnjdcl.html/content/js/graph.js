/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 53.0, "minX": 0.0, "maxY": 7064.0, "series": [{"data": [[0.0, 138.0], [0.1, 138.0], [0.2, 138.0], [0.3, 138.0], [0.4, 138.0], [0.5, 138.0], [0.6, 138.0], [0.7, 138.0], [0.8, 138.0], [0.9, 138.0], [1.0, 142.0], [1.1, 142.0], [1.2, 142.0], [1.3, 142.0], [1.4, 142.0], [1.5, 142.0], [1.6, 142.0], [1.7, 142.0], [1.8, 142.0], [1.9, 142.0], [2.0, 142.0], [2.1, 142.0], [2.2, 142.0], [2.3, 142.0], [2.4, 142.0], [2.5, 143.0], [2.6, 143.0], [2.7, 143.0], [2.8, 143.0], [2.9, 143.0], [3.0, 145.0], [3.1, 145.0], [3.2, 145.0], [3.3, 145.0], [3.4, 145.0], [3.5, 146.0], [3.6, 146.0], [3.7, 146.0], [3.8, 146.0], [3.9, 146.0], [4.0, 147.0], [4.1, 147.0], [4.2, 147.0], [4.3, 147.0], [4.4, 147.0], [4.5, 148.0], [4.6, 148.0], [4.7, 148.0], [4.8, 148.0], [4.9, 148.0], [5.0, 149.0], [5.1, 149.0], [5.2, 149.0], [5.3, 149.0], [5.4, 149.0], [5.5, 149.0], [5.6, 149.0], [5.7, 149.0], [5.8, 149.0], [5.9, 149.0], [6.0, 149.0], [6.1, 149.0], [6.2, 149.0], [6.3, 149.0], [6.4, 149.0], [6.5, 150.0], [6.6, 150.0], [6.7, 150.0], [6.8, 150.0], [6.9, 150.0], [7.0, 150.0], [7.1, 150.0], [7.2, 150.0], [7.3, 150.0], [7.4, 150.0], [7.5, 150.0], [7.6, 150.0], [7.7, 150.0], [7.8, 150.0], [7.9, 150.0], [8.0, 150.0], [8.1, 150.0], [8.2, 150.0], [8.3, 150.0], [8.4, 150.0], [8.5, 150.0], [8.6, 150.0], [8.7, 150.0], [8.8, 150.0], [8.9, 150.0], [9.0, 151.0], [9.1, 151.0], [9.2, 151.0], [9.3, 151.0], [9.4, 151.0], [9.5, 151.0], [9.6, 151.0], [9.7, 151.0], [9.8, 151.0], [9.9, 151.0], [10.0, 153.0], [10.1, 153.0], [10.2, 153.0], [10.3, 153.0], [10.4, 153.0], [10.5, 157.0], [10.6, 157.0], [10.7, 157.0], [10.8, 157.0], [10.9, 157.0], [11.0, 157.0], [11.1, 157.0], [11.2, 157.0], [11.3, 157.0], [11.4, 157.0], [11.5, 160.0], [11.6, 160.0], [11.7, 160.0], [11.8, 160.0], [11.9, 160.0], [12.0, 160.0], [12.1, 160.0], [12.2, 160.0], [12.3, 160.0], [12.4, 160.0], [12.5, 160.0], [12.6, 160.0], [12.7, 160.0], [12.8, 160.0], [12.9, 160.0], [13.0, 162.0], [13.1, 162.0], [13.2, 162.0], [13.3, 162.0], [13.4, 162.0], [13.5, 163.0], [13.6, 163.0], [13.7, 163.0], [13.8, 163.0], [13.9, 163.0], [14.0, 185.0], [14.1, 185.0], [14.2, 185.0], [14.3, 185.0], [14.4, 185.0], [14.5, 188.0], [14.6, 188.0], [14.7, 188.0], [14.8, 188.0], [14.9, 188.0], [15.0, 203.0], [15.1, 203.0], [15.2, 203.0], [15.3, 203.0], [15.4, 203.0], [15.5, 203.0], [15.6, 203.0], [15.7, 203.0], [15.8, 203.0], [15.9, 203.0], [16.0, 206.0], [16.1, 206.0], [16.2, 206.0], [16.3, 206.0], [16.4, 206.0], [16.5, 207.0], [16.6, 207.0], [16.7, 207.0], [16.8, 207.0], [16.9, 207.0], [17.0, 220.0], [17.1, 220.0], [17.2, 220.0], [17.3, 220.0], [17.4, 220.0], [17.5, 220.0], [17.6, 220.0], [17.7, 220.0], [17.8, 220.0], [17.9, 220.0], [18.0, 230.0], [18.1, 230.0], [18.2, 230.0], [18.3, 230.0], [18.4, 230.0], [18.5, 231.0], [18.6, 231.0], [18.7, 231.0], [18.8, 231.0], [18.9, 231.0], [19.0, 235.0], [19.1, 235.0], [19.2, 235.0], [19.3, 235.0], [19.4, 235.0], [19.5, 235.0], [19.6, 235.0], [19.7, 235.0], [19.8, 235.0], [19.9, 235.0], [20.0, 247.0], [20.1, 247.0], [20.2, 247.0], [20.3, 247.0], [20.4, 247.0], [20.5, 248.0], [20.6, 248.0], [20.7, 248.0], [20.8, 248.0], [20.9, 248.0], [21.0, 262.0], [21.1, 262.0], [21.2, 262.0], [21.3, 262.0], [21.4, 262.0], [21.5, 272.0], [21.6, 272.0], [21.7, 272.0], [21.8, 272.0], [21.9, 272.0], [22.0, 273.0], [22.1, 273.0], [22.2, 273.0], [22.3, 273.0], [22.4, 273.0], [22.5, 276.0], [22.6, 276.0], [22.7, 276.0], [22.8, 276.0], [22.9, 276.0], [23.0, 284.0], [23.1, 284.0], [23.2, 284.0], [23.3, 284.0], [23.4, 284.0], [23.5, 285.0], [23.6, 285.0], [23.7, 285.0], [23.8, 285.0], [23.9, 285.0], [24.0, 287.0], [24.1, 287.0], [24.2, 287.0], [24.3, 287.0], [24.4, 287.0], [24.5, 291.0], [24.6, 291.0], [24.7, 291.0], [24.8, 291.0], [24.9, 291.0], [25.0, 291.0], [25.1, 291.0], [25.2, 291.0], [25.3, 291.0], [25.4, 291.0], [25.5, 294.0], [25.6, 294.0], [25.7, 294.0], [25.8, 294.0], [25.9, 294.0], [26.0, 298.0], [26.1, 298.0], [26.2, 298.0], [26.3, 298.0], [26.4, 298.0], [26.5, 300.0], [26.6, 300.0], [26.7, 300.0], [26.8, 300.0], [26.9, 300.0], [27.0, 303.0], [27.1, 303.0], [27.2, 303.0], [27.3, 303.0], [27.4, 303.0], [27.5, 311.0], [27.6, 311.0], [27.7, 311.0], [27.8, 311.0], [27.9, 311.0], [28.0, 314.0], [28.1, 314.0], [28.2, 314.0], [28.3, 314.0], [28.4, 314.0], [28.5, 324.0], [28.6, 324.0], [28.7, 324.0], [28.8, 324.0], [28.9, 324.0], [29.0, 326.0], [29.1, 326.0], [29.2, 326.0], [29.3, 326.0], [29.4, 326.0], [29.5, 327.0], [29.6, 327.0], [29.7, 327.0], [29.8, 327.0], [29.9, 327.0], [30.0, 328.0], [30.1, 328.0], [30.2, 328.0], [30.3, 328.0], [30.4, 328.0], [30.5, 329.0], [30.6, 329.0], [30.7, 329.0], [30.8, 329.0], [30.9, 329.0], [31.0, 331.0], [31.1, 331.0], [31.2, 331.0], [31.3, 331.0], [31.4, 331.0], [31.5, 340.0], [31.6, 340.0], [31.7, 340.0], [31.8, 340.0], [31.9, 340.0], [32.0, 340.0], [32.1, 340.0], [32.2, 340.0], [32.3, 340.0], [32.4, 340.0], [32.5, 342.0], [32.6, 342.0], [32.7, 342.0], [32.8, 342.0], [32.9, 342.0], [33.0, 342.0], [33.1, 342.0], [33.2, 342.0], [33.3, 342.0], [33.4, 342.0], [33.5, 344.0], [33.6, 344.0], [33.7, 344.0], [33.8, 344.0], [33.9, 344.0], [34.0, 345.0], [34.1, 345.0], [34.2, 345.0], [34.3, 345.0], [34.4, 345.0], [34.5, 347.0], [34.6, 347.0], [34.7, 347.0], [34.8, 347.0], [34.9, 347.0], [35.0, 348.0], [35.1, 348.0], [35.2, 348.0], [35.3, 348.0], [35.4, 348.0], [35.5, 349.0], [35.6, 349.0], [35.7, 349.0], [35.8, 349.0], [35.9, 349.0], [36.0, 351.0], [36.1, 351.0], [36.2, 351.0], [36.3, 351.0], [36.4, 351.0], [36.5, 354.0], [36.6, 354.0], [36.7, 354.0], [36.8, 354.0], [36.9, 354.0], [37.0, 355.0], [37.1, 355.0], [37.2, 355.0], [37.3, 355.0], [37.4, 355.0], [37.5, 358.0], [37.6, 358.0], [37.7, 358.0], [37.8, 358.0], [37.9, 358.0], [38.0, 363.0], [38.1, 363.0], [38.2, 363.0], [38.3, 363.0], [38.4, 363.0], [38.5, 364.0], [38.6, 364.0], [38.7, 364.0], [38.8, 364.0], [38.9, 364.0], [39.0, 366.0], [39.1, 366.0], [39.2, 366.0], [39.3, 366.0], [39.4, 366.0], [39.5, 366.0], [39.6, 366.0], [39.7, 366.0], [39.8, 366.0], [39.9, 366.0], [40.0, 368.0], [40.1, 368.0], [40.2, 368.0], [40.3, 368.0], [40.4, 368.0], [40.5, 371.0], [40.6, 371.0], [40.7, 371.0], [40.8, 371.0], [40.9, 371.0], [41.0, 372.0], [41.1, 372.0], [41.2, 372.0], [41.3, 372.0], [41.4, 372.0], [41.5, 372.0], [41.6, 372.0], [41.7, 372.0], [41.8, 372.0], [41.9, 372.0], [42.0, 375.0], [42.1, 375.0], [42.2, 375.0], [42.3, 375.0], [42.4, 375.0], [42.5, 377.0], [42.6, 377.0], [42.7, 377.0], [42.8, 377.0], [42.9, 377.0], [43.0, 378.0], [43.1, 378.0], [43.2, 378.0], [43.3, 378.0], [43.4, 378.0], [43.5, 379.0], [43.6, 379.0], [43.7, 379.0], [43.8, 379.0], [43.9, 379.0], [44.0, 379.0], [44.1, 379.0], [44.2, 379.0], [44.3, 379.0], [44.4, 379.0], [44.5, 381.0], [44.6, 381.0], [44.7, 381.0], [44.8, 381.0], [44.9, 381.0], [45.0, 384.0], [45.1, 384.0], [45.2, 384.0], [45.3, 384.0], [45.4, 384.0], [45.5, 384.0], [45.6, 384.0], [45.7, 384.0], [45.8, 384.0], [45.9, 384.0], [46.0, 385.0], [46.1, 385.0], [46.2, 385.0], [46.3, 385.0], [46.4, 385.0], [46.5, 388.0], [46.6, 388.0], [46.7, 388.0], [46.8, 388.0], [46.9, 388.0], [47.0, 389.0], [47.1, 389.0], [47.2, 389.0], [47.3, 389.0], [47.4, 389.0], [47.5, 389.0], [47.6, 389.0], [47.7, 389.0], [47.8, 389.0], [47.9, 389.0], [48.0, 392.0], [48.1, 392.0], [48.2, 392.0], [48.3, 392.0], [48.4, 392.0], [48.5, 392.0], [48.6, 392.0], [48.7, 392.0], [48.8, 392.0], [48.9, 392.0], [49.0, 394.0], [49.1, 394.0], [49.2, 394.0], [49.3, 394.0], [49.4, 394.0], [49.5, 396.0], [49.6, 396.0], [49.7, 396.0], [49.8, 396.0], [49.9, 396.0], [50.0, 396.0], [50.1, 396.0], [50.2, 396.0], [50.3, 396.0], [50.4, 396.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 399.0], [50.9, 399.0], [51.0, 403.0], [51.1, 403.0], [51.2, 403.0], [51.3, 403.0], [51.4, 403.0], [51.5, 404.0], [51.6, 404.0], [51.7, 404.0], [51.8, 404.0], [51.9, 404.0], [52.0, 405.0], [52.1, 405.0], [52.2, 405.0], [52.3, 405.0], [52.4, 405.0], [52.5, 406.0], [52.6, 406.0], [52.7, 406.0], [52.8, 406.0], [52.9, 406.0], [53.0, 406.0], [53.1, 406.0], [53.2, 406.0], [53.3, 406.0], [53.4, 406.0], [53.5, 407.0], [53.6, 407.0], [53.7, 407.0], [53.8, 407.0], [53.9, 407.0], [54.0, 408.0], [54.1, 408.0], [54.2, 408.0], [54.3, 408.0], [54.4, 408.0], [54.5, 408.0], [54.6, 408.0], [54.7, 408.0], [54.8, 408.0], [54.9, 408.0], [55.0, 408.0], [55.1, 408.0], [55.2, 408.0], [55.3, 408.0], [55.4, 408.0], [55.5, 408.0], [55.6, 408.0], [55.7, 408.0], [55.8, 408.0], [55.9, 408.0], [56.0, 409.0], [56.1, 409.0], [56.2, 409.0], [56.3, 409.0], [56.4, 409.0], [56.5, 410.0], [56.6, 410.0], [56.7, 410.0], [56.8, 410.0], [56.9, 410.0], [57.0, 410.0], [57.1, 410.0], [57.2, 410.0], [57.3, 410.0], [57.4, 410.0], [57.5, 411.0], [57.6, 411.0], [57.7, 411.0], [57.8, 411.0], [57.9, 411.0], [58.0, 413.0], [58.1, 413.0], [58.2, 413.0], [58.3, 413.0], [58.4, 413.0], [58.5, 420.0], [58.6, 420.0], [58.7, 420.0], [58.8, 420.0], [58.9, 420.0], [59.0, 423.0], [59.1, 423.0], [59.2, 423.0], [59.3, 423.0], [59.4, 423.0], [59.5, 425.0], [59.6, 425.0], [59.7, 425.0], [59.8, 425.0], [59.9, 425.0], [60.0, 426.0], [60.1, 426.0], [60.2, 426.0], [60.3, 426.0], [60.4, 426.0], [60.5, 427.0], [60.6, 427.0], [60.7, 427.0], [60.8, 427.0], [60.9, 427.0], [61.0, 432.0], [61.1, 432.0], [61.2, 432.0], [61.3, 432.0], [61.4, 432.0], [61.5, 433.0], [61.6, 433.0], [61.7, 433.0], [61.8, 433.0], [61.9, 433.0], [62.0, 439.0], [62.1, 439.0], [62.2, 439.0], [62.3, 439.0], [62.4, 439.0], [62.5, 452.0], [62.6, 452.0], [62.7, 452.0], [62.8, 452.0], [62.9, 452.0], [63.0, 457.0], [63.1, 457.0], [63.2, 457.0], [63.3, 457.0], [63.4, 457.0], [63.5, 467.0], [63.6, 467.0], [63.7, 467.0], [63.8, 467.0], [63.9, 467.0], [64.0, 471.0], [64.1, 471.0], [64.2, 471.0], [64.3, 471.0], [64.4, 471.0], [64.5, 473.0], [64.6, 473.0], [64.7, 473.0], [64.8, 473.0], [64.9, 473.0], [65.0, 474.0], [65.1, 474.0], [65.2, 474.0], [65.3, 474.0], [65.4, 474.0], [65.5, 476.0], [65.6, 476.0], [65.7, 476.0], [65.8, 476.0], [65.9, 476.0], [66.0, 478.0], [66.1, 478.0], [66.2, 478.0], [66.3, 478.0], [66.4, 478.0], [66.5, 484.0], [66.6, 484.0], [66.7, 484.0], [66.8, 484.0], [66.9, 484.0], [67.0, 486.0], [67.1, 486.0], [67.2, 486.0], [67.3, 486.0], [67.4, 486.0], [67.5, 491.0], [67.6, 491.0], [67.7, 491.0], [67.8, 491.0], [67.9, 491.0], [68.0, 495.0], [68.1, 495.0], [68.2, 495.0], [68.3, 495.0], [68.4, 495.0], [68.5, 497.0], [68.6, 497.0], [68.7, 497.0], [68.8, 497.0], [68.9, 497.0], [69.0, 499.0], [69.1, 499.0], [69.2, 499.0], [69.3, 499.0], [69.4, 499.0], [69.5, 506.0], [69.6, 506.0], [69.7, 506.0], [69.8, 506.0], [69.9, 506.0], [70.0, 508.0], [70.1, 508.0], [70.2, 508.0], [70.3, 508.0], [70.4, 508.0], [70.5, 508.0], [70.6, 508.0], [70.7, 508.0], [70.8, 508.0], [70.9, 508.0], [71.0, 510.0], [71.1, 510.0], [71.2, 510.0], [71.3, 510.0], [71.4, 510.0], [71.5, 511.0], [71.6, 511.0], [71.7, 511.0], [71.8, 511.0], [71.9, 511.0], [72.0, 513.0], [72.1, 513.0], [72.2, 513.0], [72.3, 513.0], [72.4, 513.0], [72.5, 517.0], [72.6, 517.0], [72.7, 517.0], [72.8, 517.0], [72.9, 517.0], [73.0, 517.0], [73.1, 517.0], [73.2, 517.0], [73.3, 517.0], [73.4, 517.0], [73.5, 519.0], [73.6, 519.0], [73.7, 519.0], [73.8, 519.0], [73.9, 519.0], [74.0, 523.0], [74.1, 523.0], [74.2, 523.0], [74.3, 523.0], [74.4, 523.0], [74.5, 527.0], [74.6, 527.0], [74.7, 527.0], [74.8, 527.0], [74.9, 527.0], [75.0, 536.0], [75.1, 536.0], [75.2, 536.0], [75.3, 536.0], [75.4, 536.0], [75.5, 536.0], [75.6, 536.0], [75.7, 536.0], [75.8, 536.0], [75.9, 536.0], [76.0, 537.0], [76.1, 537.0], [76.2, 537.0], [76.3, 537.0], [76.4, 537.0], [76.5, 538.0], [76.6, 538.0], [76.7, 538.0], [76.8, 538.0], [76.9, 538.0], [77.0, 540.0], [77.1, 540.0], [77.2, 540.0], [77.3, 540.0], [77.4, 540.0], [77.5, 543.0], [77.6, 543.0], [77.7, 543.0], [77.8, 543.0], [77.9, 543.0], [78.0, 544.0], [78.1, 544.0], [78.2, 544.0], [78.3, 544.0], [78.4, 544.0], [78.5, 548.0], [78.6, 548.0], [78.7, 548.0], [78.8, 548.0], [78.9, 548.0], [79.0, 548.0], [79.1, 548.0], [79.2, 548.0], [79.3, 548.0], [79.4, 548.0], [79.5, 550.0], [79.6, 550.0], [79.7, 550.0], [79.8, 550.0], [79.9, 550.0], [80.0, 553.0], [80.1, 553.0], [80.2, 553.0], [80.3, 553.0], [80.4, 553.0], [80.5, 555.0], [80.6, 555.0], [80.7, 555.0], [80.8, 555.0], [80.9, 555.0], [81.0, 564.0], [81.1, 564.0], [81.2, 564.0], [81.3, 564.0], [81.4, 564.0], [81.5, 567.0], [81.6, 567.0], [81.7, 567.0], [81.8, 567.0], [81.9, 567.0], [82.0, 575.0], [82.1, 575.0], [82.2, 575.0], [82.3, 575.0], [82.4, 575.0], [82.5, 578.0], [82.6, 578.0], [82.7, 578.0], [82.8, 578.0], [82.9, 578.0], [83.0, 579.0], [83.1, 579.0], [83.2, 579.0], [83.3, 579.0], [83.4, 579.0], [83.5, 587.0], [83.6, 587.0], [83.7, 587.0], [83.8, 587.0], [83.9, 587.0], [84.0, 592.0], [84.1, 592.0], [84.2, 592.0], [84.3, 592.0], [84.4, 592.0], [84.5, 597.0], [84.6, 597.0], [84.7, 597.0], [84.8, 597.0], [84.9, 597.0], [85.0, 600.0], [85.1, 600.0], [85.2, 600.0], [85.3, 600.0], [85.4, 600.0], [85.5, 600.0], [85.6, 600.0], [85.7, 600.0], [85.8, 600.0], [85.9, 600.0], [86.0, 605.0], [86.1, 605.0], [86.2, 605.0], [86.3, 605.0], [86.4, 605.0], [86.5, 607.0], [86.6, 607.0], [86.7, 607.0], [86.8, 607.0], [86.9, 607.0], [87.0, 611.0], [87.1, 611.0], [87.2, 611.0], [87.3, 611.0], [87.4, 611.0], [87.5, 619.0], [87.6, 619.0], [87.7, 619.0], [87.8, 619.0], [87.9, 619.0], [88.0, 619.0], [88.1, 619.0], [88.2, 619.0], [88.3, 619.0], [88.4, 619.0], [88.5, 625.0], [88.6, 625.0], [88.7, 625.0], [88.8, 625.0], [88.9, 625.0], [89.0, 631.0], [89.1, 631.0], [89.2, 631.0], [89.3, 631.0], [89.4, 631.0], [89.5, 632.0], [89.6, 632.0], [89.7, 632.0], [89.8, 632.0], [89.9, 632.0], [90.0, 634.0], [90.1, 634.0], [90.2, 634.0], [90.3, 634.0], [90.4, 634.0], [90.5, 654.0], [90.6, 654.0], [90.7, 654.0], [90.8, 654.0], [90.9, 654.0], [91.0, 658.0], [91.1, 658.0], [91.2, 658.0], [91.3, 658.0], [91.4, 658.0], [91.5, 659.0], [91.6, 659.0], [91.7, 659.0], [91.8, 659.0], [91.9, 659.0], [92.0, 664.0], [92.1, 664.0], [92.2, 664.0], [92.3, 664.0], [92.4, 664.0], [92.5, 673.0], [92.6, 673.0], [92.7, 673.0], [92.8, 673.0], [92.9, 673.0], [93.0, 682.0], [93.1, 682.0], [93.2, 682.0], [93.3, 682.0], [93.4, 682.0], [93.5, 682.0], [93.6, 682.0], [93.7, 682.0], [93.8, 682.0], [93.9, 682.0], [94.0, 686.0], [94.1, 686.0], [94.2, 686.0], [94.3, 686.0], [94.4, 686.0], [94.5, 687.0], [94.6, 687.0], [94.7, 687.0], [94.8, 687.0], [94.9, 687.0], [95.0, 698.0], [95.1, 698.0], [95.2, 698.0], [95.3, 698.0], [95.4, 698.0], [95.5, 712.0], [95.6, 712.0], [95.7, 712.0], [95.8, 712.0], [95.9, 712.0], [96.0, 767.0], [96.1, 767.0], [96.2, 767.0], [96.3, 767.0], [96.4, 767.0], [96.5, 781.0], [96.6, 781.0], [96.7, 781.0], [96.8, 781.0], [96.9, 781.0], [97.0, 788.0], [97.1, 788.0], [97.2, 788.0], [97.3, 788.0], [97.4, 788.0], [97.5, 796.0], [97.6, 796.0], [97.7, 796.0], [97.8, 796.0], [97.9, 796.0], [98.0, 804.0], [98.1, 804.0], [98.2, 804.0], [98.3, 804.0], [98.4, 804.0], [98.5, 830.0], [98.6, 830.0], [98.7, 830.0], [98.8, 830.0], [98.9, 830.0], [99.0, 853.0], [99.1, 853.0], [99.2, 853.0], [99.3, 853.0], [99.4, 853.0], [99.5, 862.0], [99.6, 862.0], [99.7, 862.0], [99.8, 862.0], [99.9, 862.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 140.0], [0.1, 140.0], [0.2, 140.0], [0.3, 140.0], [0.4, 140.0], [0.5, 140.0], [0.6, 140.0], [0.7, 140.0], [0.8, 140.0], [0.9, 140.0], [1.0, 141.0], [1.1, 141.0], [1.2, 141.0], [1.3, 141.0], [1.4, 141.0], [1.5, 141.0], [1.6, 141.0], [1.7, 141.0], [1.8, 141.0], [1.9, 141.0], [2.0, 143.0], [2.1, 143.0], [2.2, 143.0], [2.3, 143.0], [2.4, 143.0], [2.5, 143.0], [2.6, 143.0], [2.7, 143.0], [2.8, 143.0], [2.9, 143.0], [3.0, 144.0], [3.1, 144.0], [3.2, 144.0], [3.3, 144.0], [3.4, 144.0], [3.5, 144.0], [3.6, 144.0], [3.7, 144.0], [3.8, 144.0], [3.9, 144.0], [4.0, 144.0], [4.1, 144.0], [4.2, 144.0], [4.3, 144.0], [4.4, 144.0], [4.5, 144.0], [4.6, 144.0], [4.7, 144.0], [4.8, 144.0], [4.9, 144.0], [5.0, 144.0], [5.1, 144.0], [5.2, 144.0], [5.3, 144.0], [5.4, 144.0], [5.5, 145.0], [5.6, 145.0], [5.7, 145.0], [5.8, 145.0], [5.9, 145.0], [6.0, 146.0], [6.1, 146.0], [6.2, 146.0], [6.3, 146.0], [6.4, 146.0], [6.5, 148.0], [6.6, 148.0], [6.7, 148.0], [6.8, 148.0], [6.9, 148.0], [7.0, 148.0], [7.1, 148.0], [7.2, 148.0], [7.3, 148.0], [7.4, 148.0], [7.5, 149.0], [7.6, 149.0], [7.7, 149.0], [7.8, 149.0], [7.9, 149.0], [8.0, 153.0], [8.1, 153.0], [8.2, 153.0], [8.3, 153.0], [8.4, 153.0], [8.5, 153.0], [8.6, 153.0], [8.7, 153.0], [8.8, 153.0], [8.9, 153.0], [9.0, 153.0], [9.1, 153.0], [9.2, 153.0], [9.3, 153.0], [9.4, 153.0], [9.5, 154.0], [9.6, 154.0], [9.7, 154.0], [9.8, 154.0], [9.9, 154.0], [10.0, 156.0], [10.1, 156.0], [10.2, 156.0], [10.3, 156.0], [10.4, 156.0], [10.5, 159.0], [10.6, 159.0], [10.7, 159.0], [10.8, 159.0], [10.9, 159.0], [11.0, 160.0], [11.1, 160.0], [11.2, 160.0], [11.3, 160.0], [11.4, 160.0], [11.5, 163.0], [11.6, 163.0], [11.7, 163.0], [11.8, 163.0], [11.9, 163.0], [12.0, 165.0], [12.1, 165.0], [12.2, 165.0], [12.3, 165.0], [12.4, 165.0], [12.5, 165.0], [12.6, 165.0], [12.7, 165.0], [12.8, 165.0], [12.9, 165.0], [13.0, 166.0], [13.1, 166.0], [13.2, 166.0], [13.3, 166.0], [13.4, 166.0], [13.5, 167.0], [13.6, 167.0], [13.7, 167.0], [13.8, 167.0], [13.9, 167.0], [14.0, 169.0], [14.1, 169.0], [14.2, 169.0], [14.3, 169.0], [14.4, 169.0], [14.5, 170.0], [14.6, 170.0], [14.7, 170.0], [14.8, 170.0], [14.9, 170.0], [15.0, 178.0], [15.1, 178.0], [15.2, 178.0], [15.3, 178.0], [15.4, 178.0], [15.5, 178.0], [15.6, 178.0], [15.7, 178.0], [15.8, 178.0], [15.9, 178.0], [16.0, 180.0], [16.1, 180.0], [16.2, 180.0], [16.3, 180.0], [16.4, 180.0], [16.5, 180.0], [16.6, 180.0], [16.7, 180.0], [16.8, 180.0], [16.9, 180.0], [17.0, 185.0], [17.1, 185.0], [17.2, 185.0], [17.3, 185.0], [17.4, 185.0], [17.5, 186.0], [17.6, 186.0], [17.7, 186.0], [17.8, 186.0], [17.9, 186.0], [18.0, 187.0], [18.1, 187.0], [18.2, 187.0], [18.3, 187.0], [18.4, 187.0], [18.5, 198.0], [18.6, 198.0], [18.7, 198.0], [18.8, 198.0], [18.9, 198.0], [19.0, 208.0], [19.1, 208.0], [19.2, 208.0], [19.3, 208.0], [19.4, 208.0], [19.5, 212.0], [19.6, 212.0], [19.7, 212.0], [19.8, 212.0], [19.9, 212.0], [20.0, 222.0], [20.1, 222.0], [20.2, 222.0], [20.3, 222.0], [20.4, 222.0], [20.5, 222.0], [20.6, 222.0], [20.7, 222.0], [20.8, 222.0], [20.9, 222.0], [21.0, 224.0], [21.1, 224.0], [21.2, 224.0], [21.3, 224.0], [21.4, 224.0], [21.5, 224.0], [21.6, 224.0], [21.7, 224.0], [21.8, 224.0], [21.9, 224.0], [22.0, 227.0], [22.1, 227.0], [22.2, 227.0], [22.3, 227.0], [22.4, 227.0], [22.5, 228.0], [22.6, 228.0], [22.7, 228.0], [22.8, 228.0], [22.9, 228.0], [23.0, 234.0], [23.1, 234.0], [23.2, 234.0], [23.3, 234.0], [23.4, 234.0], [23.5, 235.0], [23.6, 235.0], [23.7, 235.0], [23.8, 235.0], [23.9, 235.0], [24.0, 237.0], [24.1, 237.0], [24.2, 237.0], [24.3, 237.0], [24.4, 237.0], [24.5, 238.0], [24.6, 238.0], [24.7, 238.0], [24.8, 238.0], [24.9, 238.0], [25.0, 238.0], [25.1, 238.0], [25.2, 238.0], [25.3, 238.0], [25.4, 238.0], [25.5, 238.0], [25.6, 238.0], [25.7, 238.0], [25.8, 238.0], [25.9, 238.0], [26.0, 238.0], [26.1, 238.0], [26.2, 238.0], [26.3, 238.0], [26.4, 238.0], [26.5, 240.0], [26.6, 240.0], [26.7, 240.0], [26.8, 240.0], [26.9, 240.0], [27.0, 245.0], [27.1, 245.0], [27.2, 245.0], [27.3, 245.0], [27.4, 245.0], [27.5, 260.0], [27.6, 260.0], [27.7, 260.0], [27.8, 260.0], [27.9, 260.0], [28.0, 261.0], [28.1, 261.0], [28.2, 261.0], [28.3, 261.0], [28.4, 261.0], [28.5, 263.0], [28.6, 263.0], [28.7, 263.0], [28.8, 263.0], [28.9, 263.0], [29.0, 268.0], [29.1, 268.0], [29.2, 268.0], [29.3, 268.0], [29.4, 268.0], [29.5, 274.0], [29.6, 274.0], [29.7, 274.0], [29.8, 274.0], [29.9, 274.0], [30.0, 281.0], [30.1, 281.0], [30.2, 281.0], [30.3, 281.0], [30.4, 281.0], [30.5, 286.0], [30.6, 286.0], [30.7, 286.0], [30.8, 286.0], [30.9, 286.0], [31.0, 287.0], [31.1, 287.0], [31.2, 287.0], [31.3, 287.0], [31.4, 287.0], [31.5, 287.0], [31.6, 287.0], [31.7, 287.0], [31.8, 287.0], [31.9, 287.0], [32.0, 294.0], [32.1, 294.0], [32.2, 294.0], [32.3, 294.0], [32.4, 294.0], [32.5, 301.0], [32.6, 301.0], [32.7, 301.0], [32.8, 301.0], [32.9, 301.0], [33.0, 303.0], [33.1, 303.0], [33.2, 303.0], [33.3, 303.0], [33.4, 303.0], [33.5, 304.0], [33.6, 304.0], [33.7, 304.0], [33.8, 304.0], [33.9, 304.0], [34.0, 305.0], [34.1, 305.0], [34.2, 305.0], [34.3, 305.0], [34.4, 305.0], [34.5, 309.0], [34.6, 309.0], [34.7, 309.0], [34.8, 309.0], [34.9, 309.0], [35.0, 310.0], [35.1, 310.0], [35.2, 310.0], [35.3, 310.0], [35.4, 310.0], [35.5, 317.0], [35.6, 317.0], [35.7, 317.0], [35.8, 317.0], [35.9, 317.0], [36.0, 326.0], [36.1, 326.0], [36.2, 326.0], [36.3, 326.0], [36.4, 326.0], [36.5, 332.0], [36.6, 332.0], [36.7, 332.0], [36.8, 332.0], [36.9, 332.0], [37.0, 333.0], [37.1, 333.0], [37.2, 333.0], [37.3, 333.0], [37.4, 333.0], [37.5, 333.0], [37.6, 333.0], [37.7, 333.0], [37.8, 333.0], [37.9, 333.0], [38.0, 333.0], [38.1, 333.0], [38.2, 333.0], [38.3, 333.0], [38.4, 333.0], [38.5, 334.0], [38.6, 334.0], [38.7, 334.0], [38.8, 334.0], [38.9, 334.0], [39.0, 336.0], [39.1, 336.0], [39.2, 336.0], [39.3, 336.0], [39.4, 336.0], [39.5, 340.0], [39.6, 340.0], [39.7, 340.0], [39.8, 340.0], [39.9, 340.0], [40.0, 341.0], [40.1, 341.0], [40.2, 341.0], [40.3, 341.0], [40.4, 341.0], [40.5, 341.0], [40.6, 341.0], [40.7, 341.0], [40.8, 341.0], [40.9, 341.0], [41.0, 341.0], [41.1, 341.0], [41.2, 341.0], [41.3, 341.0], [41.4, 341.0], [41.5, 342.0], [41.6, 342.0], [41.7, 342.0], [41.8, 342.0], [41.9, 342.0], [42.0, 344.0], [42.1, 344.0], [42.2, 344.0], [42.3, 344.0], [42.4, 344.0], [42.5, 346.0], [42.6, 346.0], [42.7, 346.0], [42.8, 346.0], [42.9, 346.0], [43.0, 346.0], [43.1, 346.0], [43.2, 346.0], [43.3, 346.0], [43.4, 346.0], [43.5, 347.0], [43.6, 347.0], [43.7, 347.0], [43.8, 347.0], [43.9, 347.0], [44.0, 348.0], [44.1, 348.0], [44.2, 348.0], [44.3, 348.0], [44.4, 348.0], [44.5, 349.0], [44.6, 349.0], [44.7, 349.0], [44.8, 349.0], [44.9, 349.0], [45.0, 351.0], [45.1, 351.0], [45.2, 351.0], [45.3, 351.0], [45.4, 351.0], [45.5, 355.0], [45.6, 355.0], [45.7, 355.0], [45.8, 355.0], [45.9, 355.0], [46.0, 358.0], [46.1, 358.0], [46.2, 358.0], [46.3, 358.0], [46.4, 358.0], [46.5, 360.0], [46.6, 360.0], [46.7, 360.0], [46.8, 360.0], [46.9, 360.0], [47.0, 363.0], [47.1, 363.0], [47.2, 363.0], [47.3, 363.0], [47.4, 363.0], [47.5, 366.0], [47.6, 366.0], [47.7, 366.0], [47.8, 366.0], [47.9, 366.0], [48.0, 372.0], [48.1, 372.0], [48.2, 372.0], [48.3, 372.0], [48.4, 372.0], [48.5, 378.0], [48.6, 378.0], [48.7, 378.0], [48.8, 378.0], [48.9, 378.0], [49.0, 380.0], [49.1, 380.0], [49.2, 380.0], [49.3, 380.0], [49.4, 380.0], [49.5, 382.0], [49.6, 382.0], [49.7, 382.0], [49.8, 382.0], [49.9, 382.0], [50.0, 383.0], [50.1, 383.0], [50.2, 383.0], [50.3, 383.0], [50.4, 383.0], [50.5, 387.0], [50.6, 387.0], [50.7, 387.0], [50.8, 387.0], [50.9, 387.0], [51.0, 390.0], [51.1, 390.0], [51.2, 390.0], [51.3, 390.0], [51.4, 390.0], [51.5, 392.0], [51.6, 392.0], [51.7, 392.0], [51.8, 392.0], [51.9, 392.0], [52.0, 399.0], [52.1, 399.0], [52.2, 399.0], [52.3, 399.0], [52.4, 399.0], [52.5, 402.0], [52.6, 402.0], [52.7, 402.0], [52.8, 402.0], [52.9, 402.0], [53.0, 402.0], [53.1, 402.0], [53.2, 402.0], [53.3, 402.0], [53.4, 402.0], [53.5, 404.0], [53.6, 404.0], [53.7, 404.0], [53.8, 404.0], [53.9, 404.0], [54.0, 407.0], [54.1, 407.0], [54.2, 407.0], [54.3, 407.0], [54.4, 407.0], [54.5, 411.0], [54.6, 411.0], [54.7, 411.0], [54.8, 411.0], [54.9, 411.0], [55.0, 423.0], [55.1, 423.0], [55.2, 423.0], [55.3, 423.0], [55.4, 423.0], [55.5, 425.0], [55.6, 425.0], [55.7, 425.0], [55.8, 425.0], [55.9, 425.0], [56.0, 428.0], [56.1, 428.0], [56.2, 428.0], [56.3, 428.0], [56.4, 428.0], [56.5, 440.0], [56.6, 440.0], [56.7, 440.0], [56.8, 440.0], [56.9, 440.0], [57.0, 442.0], [57.1, 442.0], [57.2, 442.0], [57.3, 442.0], [57.4, 442.0], [57.5, 444.0], [57.6, 444.0], [57.7, 444.0], [57.8, 444.0], [57.9, 444.0], [58.0, 450.0], [58.1, 450.0], [58.2, 450.0], [58.3, 450.0], [58.4, 450.0], [58.5, 453.0], [58.6, 453.0], [58.7, 453.0], [58.8, 453.0], [58.9, 453.0], [59.0, 456.0], [59.1, 456.0], [59.2, 456.0], [59.3, 456.0], [59.4, 456.0], [59.5, 463.0], [59.6, 463.0], [59.7, 463.0], [59.8, 463.0], [59.9, 463.0], [60.0, 464.0], [60.1, 464.0], [60.2, 464.0], [60.3, 464.0], [60.4, 464.0], [60.5, 464.0], [60.6, 464.0], [60.7, 464.0], [60.8, 464.0], [60.9, 464.0], [61.0, 468.0], [61.1, 468.0], [61.2, 468.0], [61.3, 468.0], [61.4, 468.0], [61.5, 468.0], [61.6, 468.0], [61.7, 468.0], [61.8, 468.0], [61.9, 468.0], [62.0, 468.0], [62.1, 468.0], [62.2, 468.0], [62.3, 468.0], [62.4, 468.0], [62.5, 469.0], [62.6, 469.0], [62.7, 469.0], [62.8, 469.0], [62.9, 469.0], [63.0, 469.0], [63.1, 469.0], [63.2, 469.0], [63.3, 469.0], [63.4, 469.0], [63.5, 475.0], [63.6, 475.0], [63.7, 475.0], [63.8, 475.0], [63.9, 475.0], [64.0, 480.0], [64.1, 480.0], [64.2, 480.0], [64.3, 480.0], [64.4, 480.0], [64.5, 483.0], [64.6, 483.0], [64.7, 483.0], [64.8, 483.0], [64.9, 483.0], [65.0, 483.0], [65.1, 483.0], [65.2, 483.0], [65.3, 483.0], [65.4, 483.0], [65.5, 484.0], [65.6, 484.0], [65.7, 484.0], [65.8, 484.0], [65.9, 484.0], [66.0, 493.0], [66.1, 493.0], [66.2, 493.0], [66.3, 493.0], [66.4, 493.0], [66.5, 499.0], [66.6, 499.0], [66.7, 499.0], [66.8, 499.0], [66.9, 499.0], [67.0, 507.0], [67.1, 507.0], [67.2, 507.0], [67.3, 507.0], [67.4, 507.0], [67.5, 514.0], [67.6, 514.0], [67.7, 514.0], [67.8, 514.0], [67.9, 514.0], [68.0, 520.0], [68.1, 520.0], [68.2, 520.0], [68.3, 520.0], [68.4, 520.0], [68.5, 521.0], [68.6, 521.0], [68.7, 521.0], [68.8, 521.0], [68.9, 521.0], [69.0, 522.0], [69.1, 522.0], [69.2, 522.0], [69.3, 522.0], [69.4, 522.0], [69.5, 522.0], [69.6, 522.0], [69.7, 522.0], [69.8, 522.0], [69.9, 522.0], [70.0, 522.0], [70.1, 522.0], [70.2, 522.0], [70.3, 522.0], [70.4, 522.0], [70.5, 523.0], [70.6, 523.0], [70.7, 523.0], [70.8, 523.0], [70.9, 523.0], [71.0, 524.0], [71.1, 524.0], [71.2, 524.0], [71.3, 524.0], [71.4, 524.0], [71.5, 524.0], [71.6, 524.0], [71.7, 524.0], [71.8, 524.0], [71.9, 524.0], [72.0, 537.0], [72.1, 537.0], [72.2, 537.0], [72.3, 537.0], [72.4, 537.0], [72.5, 538.0], [72.6, 538.0], [72.7, 538.0], [72.8, 538.0], [72.9, 538.0], [73.0, 542.0], [73.1, 542.0], [73.2, 542.0], [73.3, 542.0], [73.4, 542.0], [73.5, 544.0], [73.6, 544.0], [73.7, 544.0], [73.8, 544.0], [73.9, 544.0], [74.0, 544.0], [74.1, 544.0], [74.2, 544.0], [74.3, 544.0], [74.4, 544.0], [74.5, 548.0], [74.6, 548.0], [74.7, 548.0], [74.8, 548.0], [74.9, 548.0], [75.0, 555.0], [75.1, 555.0], [75.2, 555.0], [75.3, 555.0], [75.4, 555.0], [75.5, 565.0], [75.6, 565.0], [75.7, 565.0], [75.8, 565.0], [75.9, 565.0], [76.0, 566.0], [76.1, 566.0], [76.2, 566.0], [76.3, 566.0], [76.4, 566.0], [76.5, 572.0], [76.6, 572.0], [76.7, 572.0], [76.8, 572.0], [76.9, 572.0], [77.0, 579.0], [77.1, 579.0], [77.2, 579.0], [77.3, 579.0], [77.4, 579.0], [77.5, 580.0], [77.6, 580.0], [77.7, 580.0], [77.8, 580.0], [77.9, 580.0], [78.0, 586.0], [78.1, 586.0], [78.2, 586.0], [78.3, 586.0], [78.4, 586.0], [78.5, 588.0], [78.6, 588.0], [78.7, 588.0], [78.8, 588.0], [78.9, 588.0], [79.0, 592.0], [79.1, 592.0], [79.2, 592.0], [79.3, 592.0], [79.4, 592.0], [79.5, 601.0], [79.6, 601.0], [79.7, 601.0], [79.8, 601.0], [79.9, 601.0], [80.0, 607.0], [80.1, 607.0], [80.2, 607.0], [80.3, 607.0], [80.4, 607.0], [80.5, 607.0], [80.6, 607.0], [80.7, 607.0], [80.8, 607.0], [80.9, 607.0], [81.0, 616.0], [81.1, 616.0], [81.2, 616.0], [81.3, 616.0], [81.4, 616.0], [81.5, 618.0], [81.6, 618.0], [81.7, 618.0], [81.8, 618.0], [81.9, 618.0], [82.0, 620.0], [82.1, 620.0], [82.2, 620.0], [82.3, 620.0], [82.4, 620.0], [82.5, 620.0], [82.6, 620.0], [82.7, 620.0], [82.8, 620.0], [82.9, 620.0], [83.0, 624.0], [83.1, 624.0], [83.2, 624.0], [83.3, 624.0], [83.4, 624.0], [83.5, 627.0], [83.6, 627.0], [83.7, 627.0], [83.8, 627.0], [83.9, 627.0], [84.0, 632.0], [84.1, 632.0], [84.2, 632.0], [84.3, 632.0], [84.4, 632.0], [84.5, 632.0], [84.6, 632.0], [84.7, 632.0], [84.8, 632.0], [84.9, 632.0], [85.0, 633.0], [85.1, 633.0], [85.2, 633.0], [85.3, 633.0], [85.4, 633.0], [85.5, 636.0], [85.6, 636.0], [85.7, 636.0], [85.8, 636.0], [85.9, 636.0], [86.0, 637.0], [86.1, 637.0], [86.2, 637.0], [86.3, 637.0], [86.4, 637.0], [86.5, 646.0], [86.6, 646.0], [86.7, 646.0], [86.8, 646.0], [86.9, 646.0], [87.0, 661.0], [87.1, 661.0], [87.2, 661.0], [87.3, 661.0], [87.4, 661.0], [87.5, 663.0], [87.6, 663.0], [87.7, 663.0], [87.8, 663.0], [87.9, 663.0], [88.0, 667.0], [88.1, 667.0], [88.2, 667.0], [88.3, 667.0], [88.4, 667.0], [88.5, 668.0], [88.6, 668.0], [88.7, 668.0], [88.8, 668.0], [88.9, 668.0], [89.0, 669.0], [89.1, 669.0], [89.2, 669.0], [89.3, 669.0], [89.4, 669.0], [89.5, 670.0], [89.6, 670.0], [89.7, 670.0], [89.8, 670.0], [89.9, 670.0], [90.0, 674.0], [90.1, 674.0], [90.2, 674.0], [90.3, 674.0], [90.4, 674.0], [90.5, 676.0], [90.6, 676.0], [90.7, 676.0], [90.8, 676.0], [90.9, 676.0], [91.0, 690.0], [91.1, 690.0], [91.2, 690.0], [91.3, 690.0], [91.4, 690.0], [91.5, 705.0], [91.6, 705.0], [91.7, 705.0], [91.8, 705.0], [91.9, 705.0], [92.0, 713.0], [92.1, 713.0], [92.2, 713.0], [92.3, 713.0], [92.4, 713.0], [92.5, 719.0], [92.6, 719.0], [92.7, 719.0], [92.8, 719.0], [92.9, 719.0], [93.0, 726.0], [93.1, 726.0], [93.2, 726.0], [93.3, 726.0], [93.4, 726.0], [93.5, 735.0], [93.6, 735.0], [93.7, 735.0], [93.8, 735.0], [93.9, 735.0], [94.0, 741.0], [94.1, 741.0], [94.2, 741.0], [94.3, 741.0], [94.4, 741.0], [94.5, 743.0], [94.6, 743.0], [94.7, 743.0], [94.8, 743.0], [94.9, 743.0], [95.0, 750.0], [95.1, 750.0], [95.2, 750.0], [95.3, 750.0], [95.4, 750.0], [95.5, 754.0], [95.6, 754.0], [95.7, 754.0], [95.8, 754.0], [95.9, 754.0], [96.0, 755.0], [96.1, 755.0], [96.2, 755.0], [96.3, 755.0], [96.4, 755.0], [96.5, 760.0], [96.6, 760.0], [96.7, 760.0], [96.8, 760.0], [96.9, 760.0], [97.0, 801.0], [97.1, 801.0], [97.2, 801.0], [97.3, 801.0], [97.4, 801.0], [97.5, 822.0], [97.6, 822.0], [97.7, 822.0], [97.8, 822.0], [97.9, 822.0], [98.0, 929.0], [98.1, 929.0], [98.2, 929.0], [98.3, 929.0], [98.4, 929.0], [98.5, 945.0], [98.6, 945.0], [98.7, 945.0], [98.8, 945.0], [98.9, 945.0], [99.0, 958.0], [99.1, 958.0], [99.2, 958.0], [99.3, 958.0], [99.4, 958.0], [99.5, 1124.0], [99.6, 1124.0], [99.7, 1124.0], [99.8, 1124.0], [99.9, 1124.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 53.0], [0.1, 53.0], [0.2, 53.0], [0.3, 53.0], [0.4, 53.0], [0.5, 140.0], [0.6, 140.0], [0.7, 140.0], [0.8, 140.0], [0.9, 140.0], [1.0, 320.0], [1.1, 320.0], [1.2, 320.0], [1.3, 320.0], [1.4, 320.0], [1.5, 320.0], [1.6, 320.0], [1.7, 320.0], [1.8, 320.0], [1.9, 320.0], [2.0, 320.0], [2.1, 320.0], [2.2, 320.0], [2.3, 320.0], [2.4, 320.0], [2.5, 450.0], [2.6, 450.0], [2.7, 450.0], [2.8, 450.0], [2.9, 450.0], [3.0, 557.0], [3.1, 557.0], [3.2, 557.0], [3.3, 557.0], [3.4, 557.0], [3.5, 569.0], [3.6, 569.0], [3.7, 569.0], [3.8, 569.0], [3.9, 569.0], [4.0, 658.0], [4.1, 658.0], [4.2, 658.0], [4.3, 658.0], [4.4, 658.0], [4.5, 791.0], [4.6, 791.0], [4.7, 791.0], [4.8, 791.0], [4.9, 791.0], [5.0, 893.0], [5.1, 893.0], [5.2, 893.0], [5.3, 893.0], [5.4, 893.0], [5.5, 952.0], [5.6, 952.0], [5.7, 952.0], [5.8, 952.0], [5.9, 952.0], [6.0, 976.0], [6.1, 976.0], [6.2, 976.0], [6.3, 976.0], [6.4, 976.0], [6.5, 1120.0], [6.6, 1120.0], [6.7, 1120.0], [6.8, 1120.0], [6.9, 1120.0], [7.0, 1154.0], [7.1, 1154.0], [7.2, 1154.0], [7.3, 1154.0], [7.4, 1154.0], [7.5, 1167.0], [7.6, 1167.0], [7.7, 1167.0], [7.8, 1167.0], [7.9, 1167.0], [8.0, 1234.0], [8.1, 1234.0], [8.2, 1234.0], [8.3, 1234.0], [8.4, 1234.0], [8.5, 1251.0], [8.6, 1251.0], [8.7, 1251.0], [8.8, 1251.0], [8.9, 1251.0], [9.0, 1390.0], [9.1, 1390.0], [9.2, 1390.0], [9.3, 1390.0], [9.4, 1390.0], [9.5, 1423.0], [9.6, 1423.0], [9.7, 1423.0], [9.8, 1423.0], [9.9, 1423.0], [10.0, 1428.0], [10.1, 1428.0], [10.2, 1428.0], [10.3, 1428.0], [10.4, 1428.0], [10.5, 1455.0], [10.6, 1455.0], [10.7, 1455.0], [10.8, 1455.0], [10.9, 1455.0], [11.0, 1504.0], [11.1, 1504.0], [11.2, 1504.0], [11.3, 1504.0], [11.4, 1504.0], [11.5, 1647.0], [11.6, 1647.0], [11.7, 1647.0], [11.8, 1647.0], [11.9, 1647.0], [12.0, 1650.0], [12.1, 1650.0], [12.2, 1650.0], [12.3, 1650.0], [12.4, 1650.0], [12.5, 1740.0], [12.6, 1740.0], [12.7, 1740.0], [12.8, 1740.0], [12.9, 1740.0], [13.0, 1776.0], [13.1, 1776.0], [13.2, 1776.0], [13.3, 1776.0], [13.4, 1776.0], [13.5, 1802.0], [13.6, 1802.0], [13.7, 1802.0], [13.8, 1802.0], [13.9, 1802.0], [14.0, 1834.0], [14.1, 1834.0], [14.2, 1834.0], [14.3, 1834.0], [14.4, 1834.0], [14.5, 1923.0], [14.6, 1923.0], [14.7, 1923.0], [14.8, 1923.0], [14.9, 1923.0], [15.0, 1996.0], [15.1, 1996.0], [15.2, 1996.0], [15.3, 1996.0], [15.4, 1996.0], [15.5, 2016.0], [15.6, 2016.0], [15.7, 2016.0], [15.8, 2016.0], [15.9, 2016.0], [16.0, 2044.0], [16.1, 2044.0], [16.2, 2044.0], [16.3, 2044.0], [16.4, 2044.0], [16.5, 2112.0], [16.6, 2112.0], [16.7, 2112.0], [16.8, 2112.0], [16.9, 2112.0], [17.0, 2260.0], [17.1, 2260.0], [17.2, 2260.0], [17.3, 2260.0], [17.4, 2260.0], [17.5, 2261.0], [17.6, 2261.0], [17.7, 2261.0], [17.8, 2261.0], [17.9, 2261.0], [18.0, 2272.0], [18.1, 2272.0], [18.2, 2272.0], [18.3, 2272.0], [18.4, 2272.0], [18.5, 2274.0], [18.6, 2274.0], [18.7, 2274.0], [18.8, 2274.0], [18.9, 2274.0], [19.0, 2282.0], [19.1, 2282.0], [19.2, 2282.0], [19.3, 2282.0], [19.4, 2282.0], [19.5, 2377.0], [19.6, 2377.0], [19.7, 2377.0], [19.8, 2377.0], [19.9, 2377.0], [20.0, 3110.0], [20.1, 3110.0], [20.2, 3110.0], [20.3, 3110.0], [20.4, 3110.0], [20.5, 3110.0], [20.6, 3110.0], [20.7, 3110.0], [20.8, 3110.0], [20.9, 3110.0], [21.0, 3199.0], [21.1, 3199.0], [21.2, 3199.0], [21.3, 3199.0], [21.4, 3199.0], [21.5, 3205.0], [21.6, 3205.0], [21.7, 3205.0], [21.8, 3205.0], [21.9, 3205.0], [22.0, 3264.0], [22.1, 3264.0], [22.2, 3264.0], [22.3, 3264.0], [22.4, 3264.0], [22.5, 3296.0], [22.6, 3296.0], [22.7, 3296.0], [22.8, 3296.0], [22.9, 3296.0], [23.0, 3305.0], [23.1, 3305.0], [23.2, 3305.0], [23.3, 3305.0], [23.4, 3305.0], [23.5, 3317.0], [23.6, 3317.0], [23.7, 3317.0], [23.8, 3317.0], [23.9, 3317.0], [24.0, 3344.0], [24.1, 3344.0], [24.2, 3344.0], [24.3, 3344.0], [24.4, 3344.0], [24.5, 3848.0], [24.6, 3848.0], [24.7, 3848.0], [24.8, 3848.0], [24.9, 3848.0], [25.0, 3944.0], [25.1, 3944.0], [25.2, 3944.0], [25.3, 3944.0], [25.4, 3944.0], [25.5, 3964.0], [25.6, 3964.0], [25.7, 3964.0], [25.8, 3964.0], [25.9, 3964.0], [26.0, 4012.0], [26.1, 4012.0], [26.2, 4012.0], [26.3, 4012.0], [26.4, 4012.0], [26.5, 4070.0], [26.6, 4070.0], [26.7, 4070.0], [26.8, 4070.0], [26.9, 4070.0], [27.0, 4108.0], [27.1, 4108.0], [27.2, 4108.0], [27.3, 4108.0], [27.4, 4108.0], [27.5, 4115.0], [27.6, 4115.0], [27.7, 4115.0], [27.8, 4115.0], [27.9, 4115.0], [28.0, 4117.0], [28.1, 4117.0], [28.2, 4117.0], [28.3, 4117.0], [28.4, 4117.0], [28.5, 4124.0], [28.6, 4124.0], [28.7, 4124.0], [28.8, 4124.0], [28.9, 4124.0], [29.0, 4152.0], [29.1, 4152.0], [29.2, 4152.0], [29.3, 4152.0], [29.4, 4152.0], [29.5, 4158.0], [29.6, 4158.0], [29.7, 4158.0], [29.8, 4158.0], [29.9, 4158.0], [30.0, 4208.0], [30.1, 4208.0], [30.2, 4208.0], [30.3, 4208.0], [30.4, 4208.0], [30.5, 4223.0], [30.6, 4223.0], [30.7, 4223.0], [30.8, 4223.0], [30.9, 4223.0], [31.0, 4244.0], [31.1, 4244.0], [31.2, 4244.0], [31.3, 4244.0], [31.4, 4244.0], [31.5, 4249.0], [31.6, 4249.0], [31.7, 4249.0], [31.8, 4249.0], [31.9, 4249.0], [32.0, 4254.0], [32.1, 4254.0], [32.2, 4254.0], [32.3, 4254.0], [32.4, 4254.0], [32.5, 4260.0], [32.6, 4260.0], [32.7, 4260.0], [32.8, 4260.0], [32.9, 4260.0], [33.0, 4262.0], [33.1, 4262.0], [33.2, 4262.0], [33.3, 4262.0], [33.4, 4262.0], [33.5, 4266.0], [33.6, 4266.0], [33.7, 4266.0], [33.8, 4266.0], [33.9, 4266.0], [34.0, 4266.0], [34.1, 4266.0], [34.2, 4266.0], [34.3, 4266.0], [34.4, 4266.0], [34.5, 4272.0], [34.6, 4272.0], [34.7, 4272.0], [34.8, 4272.0], [34.9, 4272.0], [35.0, 4275.0], [35.1, 4275.0], [35.2, 4275.0], [35.3, 4275.0], [35.4, 4275.0], [35.5, 4277.0], [35.6, 4277.0], [35.7, 4277.0], [35.8, 4277.0], [35.9, 4277.0], [36.0, 4284.0], [36.1, 4284.0], [36.2, 4284.0], [36.3, 4284.0], [36.4, 4284.0], [36.5, 4284.0], [36.6, 4284.0], [36.7, 4284.0], [36.8, 4284.0], [36.9, 4284.0], [37.0, 4284.0], [37.1, 4284.0], [37.2, 4284.0], [37.3, 4284.0], [37.4, 4284.0], [37.5, 4285.0], [37.6, 4285.0], [37.7, 4285.0], [37.8, 4285.0], [37.9, 4285.0], [38.0, 4288.0], [38.1, 4288.0], [38.2, 4288.0], [38.3, 4288.0], [38.4, 4288.0], [38.5, 4293.0], [38.6, 4293.0], [38.7, 4293.0], [38.8, 4293.0], [38.9, 4293.0], [39.0, 4296.0], [39.1, 4296.0], [39.2, 4296.0], [39.3, 4296.0], [39.4, 4296.0], [39.5, 4297.0], [39.6, 4297.0], [39.7, 4297.0], [39.8, 4297.0], [39.9, 4297.0], [40.0, 4297.0], [40.1, 4297.0], [40.2, 4297.0], [40.3, 4297.0], [40.4, 4297.0], [40.5, 4298.0], [40.6, 4298.0], [40.7, 4298.0], [40.8, 4298.0], [40.9, 4298.0], [41.0, 4300.0], [41.1, 4300.0], [41.2, 4300.0], [41.3, 4300.0], [41.4, 4300.0], [41.5, 4307.0], [41.6, 4307.0], [41.7, 4307.0], [41.8, 4307.0], [41.9, 4307.0], [42.0, 4307.0], [42.1, 4307.0], [42.2, 4307.0], [42.3, 4307.0], [42.4, 4307.0], [42.5, 4307.0], [42.6, 4307.0], [42.7, 4307.0], [42.8, 4307.0], [42.9, 4307.0], [43.0, 4307.0], [43.1, 4307.0], [43.2, 4307.0], [43.3, 4307.0], [43.4, 4307.0], [43.5, 4371.0], [43.6, 4371.0], [43.7, 4371.0], [43.8, 4371.0], [43.9, 4371.0], [44.0, 4467.0], [44.1, 4467.0], [44.2, 4467.0], [44.3, 4467.0], [44.4, 4467.0], [44.5, 4487.0], [44.6, 4487.0], [44.7, 4487.0], [44.8, 4487.0], [44.9, 4487.0], [45.0, 4505.0], [45.1, 4505.0], [45.2, 4505.0], [45.3, 4505.0], [45.4, 4505.0], [45.5, 4519.0], [45.6, 4519.0], [45.7, 4519.0], [45.8, 4519.0], [45.9, 4519.0], [46.0, 4570.0], [46.1, 4570.0], [46.2, 4570.0], [46.3, 4570.0], [46.4, 4570.0], [46.5, 4580.0], [46.6, 4580.0], [46.7, 4580.0], [46.8, 4580.0], [46.9, 4580.0], [47.0, 4598.0], [47.1, 4598.0], [47.2, 4598.0], [47.3, 4598.0], [47.4, 4598.0], [47.5, 4605.0], [47.6, 4605.0], [47.7, 4605.0], [47.8, 4605.0], [47.9, 4605.0], [48.0, 4615.0], [48.1, 4615.0], [48.2, 4615.0], [48.3, 4615.0], [48.4, 4615.0], [48.5, 4625.0], [48.6, 4625.0], [48.7, 4625.0], [48.8, 4625.0], [48.9, 4625.0], [49.0, 4775.0], [49.1, 4775.0], [49.2, 4775.0], [49.3, 4775.0], [49.4, 4775.0], [49.5, 4778.0], [49.6, 4778.0], [49.7, 4778.0], [49.8, 4778.0], [49.9, 4778.0], [50.0, 4780.0], [50.1, 4780.0], [50.2, 4780.0], [50.3, 4780.0], [50.4, 4780.0], [50.5, 4783.0], [50.6, 4783.0], [50.7, 4783.0], [50.8, 4783.0], [50.9, 4783.0], [51.0, 4783.0], [51.1, 4783.0], [51.2, 4783.0], [51.3, 4783.0], [51.4, 4783.0], [51.5, 4785.0], [51.6, 4785.0], [51.7, 4785.0], [51.8, 4785.0], [51.9, 4785.0], [52.0, 4786.0], [52.1, 4786.0], [52.2, 4786.0], [52.3, 4786.0], [52.4, 4786.0], [52.5, 4788.0], [52.6, 4788.0], [52.7, 4788.0], [52.8, 4788.0], [52.9, 4788.0], [53.0, 4810.0], [53.1, 4810.0], [53.2, 4810.0], [53.3, 4810.0], [53.4, 4810.0], [53.5, 4813.0], [53.6, 4813.0], [53.7, 4813.0], [53.8, 4813.0], [53.9, 4813.0], [54.0, 4816.0], [54.1, 4816.0], [54.2, 4816.0], [54.3, 4816.0], [54.4, 4816.0], [54.5, 4817.0], [54.6, 4817.0], [54.7, 4817.0], [54.8, 4817.0], [54.9, 4817.0], [55.0, 4818.0], [55.1, 4818.0], [55.2, 4818.0], [55.3, 4818.0], [55.4, 4818.0], [55.5, 4819.0], [55.6, 4819.0], [55.7, 4819.0], [55.8, 4819.0], [55.9, 4819.0], [56.0, 4819.0], [56.1, 4819.0], [56.2, 4819.0], [56.3, 4819.0], [56.4, 4819.0], [56.5, 4822.0], [56.6, 4822.0], [56.7, 4822.0], [56.8, 4822.0], [56.9, 4822.0], [57.0, 4822.0], [57.1, 4822.0], [57.2, 4822.0], [57.3, 4822.0], [57.4, 4822.0], [57.5, 4834.0], [57.6, 4834.0], [57.7, 4834.0], [57.8, 4834.0], [57.9, 4834.0], [58.0, 4841.0], [58.1, 4841.0], [58.2, 4841.0], [58.3, 4841.0], [58.4, 4841.0], [58.5, 4843.0], [58.6, 4843.0], [58.7, 4843.0], [58.8, 4843.0], [58.9, 4843.0], [59.0, 4848.0], [59.1, 4848.0], [59.2, 4848.0], [59.3, 4848.0], [59.4, 4848.0], [59.5, 4874.0], [59.6, 4874.0], [59.7, 4874.0], [59.8, 4874.0], [59.9, 4874.0], [60.0, 4924.0], [60.1, 4924.0], [60.2, 4924.0], [60.3, 4924.0], [60.4, 4924.0], [60.5, 4937.0], [60.6, 4937.0], [60.7, 4937.0], [60.8, 4937.0], [60.9, 4937.0], [61.0, 4980.0], [61.1, 4980.0], [61.2, 4980.0], [61.3, 4980.0], [61.4, 4980.0], [61.5, 5040.0], [61.6, 5040.0], [61.7, 5040.0], [61.8, 5040.0], [61.9, 5040.0], [62.0, 5044.0], [62.1, 5044.0], [62.2, 5044.0], [62.3, 5044.0], [62.4, 5044.0], [62.5, 5058.0], [62.6, 5058.0], [62.7, 5058.0], [62.8, 5058.0], [62.9, 5058.0], [63.0, 5095.0], [63.1, 5095.0], [63.2, 5095.0], [63.3, 5095.0], [63.4, 5095.0], [63.5, 5106.0], [63.6, 5106.0], [63.7, 5106.0], [63.8, 5106.0], [63.9, 5106.0], [64.0, 5108.0], [64.1, 5108.0], [64.2, 5108.0], [64.3, 5108.0], [64.4, 5108.0], [64.5, 5180.0], [64.6, 5180.0], [64.7, 5180.0], [64.8, 5180.0], [64.9, 5180.0], [65.0, 5182.0], [65.1, 5182.0], [65.2, 5182.0], [65.3, 5182.0], [65.4, 5182.0], [65.5, 5185.0], [65.6, 5185.0], [65.7, 5185.0], [65.8, 5185.0], [65.9, 5185.0], [66.0, 5254.0], [66.1, 5254.0], [66.2, 5254.0], [66.3, 5254.0], [66.4, 5254.0], [66.5, 5256.0], [66.6, 5256.0], [66.7, 5256.0], [66.8, 5256.0], [66.9, 5256.0], [67.0, 5270.0], [67.1, 5270.0], [67.2, 5270.0], [67.3, 5270.0], [67.4, 5270.0], [67.5, 5280.0], [67.6, 5280.0], [67.7, 5280.0], [67.8, 5280.0], [67.9, 5280.0], [68.0, 5291.0], [68.1, 5291.0], [68.2, 5291.0], [68.3, 5291.0], [68.4, 5291.0], [68.5, 5293.0], [68.6, 5293.0], [68.7, 5293.0], [68.8, 5293.0], [68.9, 5293.0], [69.0, 5298.0], [69.1, 5298.0], [69.2, 5298.0], [69.3, 5298.0], [69.4, 5298.0], [69.5, 5301.0], [69.6, 5301.0], [69.7, 5301.0], [69.8, 5301.0], [69.9, 5301.0], [70.0, 5302.0], [70.1, 5302.0], [70.2, 5302.0], [70.3, 5302.0], [70.4, 5302.0], [70.5, 5330.0], [70.6, 5330.0], [70.7, 5330.0], [70.8, 5330.0], [70.9, 5330.0], [71.0, 5332.0], [71.1, 5332.0], [71.2, 5332.0], [71.3, 5332.0], [71.4, 5332.0], [71.5, 5335.0], [71.6, 5335.0], [71.7, 5335.0], [71.8, 5335.0], [71.9, 5335.0], [72.0, 5344.0], [72.1, 5344.0], [72.2, 5344.0], [72.3, 5344.0], [72.4, 5344.0], [72.5, 5352.0], [72.6, 5352.0], [72.7, 5352.0], [72.8, 5352.0], [72.9, 5352.0], [73.0, 5449.0], [73.1, 5449.0], [73.2, 5449.0], [73.3, 5449.0], [73.4, 5449.0], [73.5, 5458.0], [73.6, 5458.0], [73.7, 5458.0], [73.8, 5458.0], [73.9, 5458.0], [74.0, 5475.0], [74.1, 5475.0], [74.2, 5475.0], [74.3, 5475.0], [74.4, 5475.0], [74.5, 5476.0], [74.6, 5476.0], [74.7, 5476.0], [74.8, 5476.0], [74.9, 5476.0], [75.0, 5481.0], [75.1, 5481.0], [75.2, 5481.0], [75.3, 5481.0], [75.4, 5481.0], [75.5, 5482.0], [75.6, 5482.0], [75.7, 5482.0], [75.8, 5482.0], [75.9, 5482.0], [76.0, 5482.0], [76.1, 5482.0], [76.2, 5482.0], [76.3, 5482.0], [76.4, 5482.0], [76.5, 5487.0], [76.6, 5487.0], [76.7, 5487.0], [76.8, 5487.0], [76.9, 5487.0], [77.0, 5491.0], [77.1, 5491.0], [77.2, 5491.0], [77.3, 5491.0], [77.4, 5491.0], [77.5, 5493.0], [77.6, 5493.0], [77.7, 5493.0], [77.8, 5493.0], [77.9, 5493.0], [78.0, 5499.0], [78.1, 5499.0], [78.2, 5499.0], [78.3, 5499.0], [78.4, 5499.0], [78.5, 5504.0], [78.6, 5504.0], [78.7, 5504.0], [78.8, 5504.0], [78.9, 5504.0], [79.0, 5511.0], [79.1, 5511.0], [79.2, 5511.0], [79.3, 5511.0], [79.4, 5511.0], [79.5, 5520.0], [79.6, 5520.0], [79.7, 5520.0], [79.8, 5520.0], [79.9, 5520.0], [80.0, 5536.0], [80.1, 5536.0], [80.2, 5536.0], [80.3, 5536.0], [80.4, 5536.0], [80.5, 5541.0], [80.6, 5541.0], [80.7, 5541.0], [80.8, 5541.0], [80.9, 5541.0], [81.0, 5548.0], [81.1, 5548.0], [81.2, 5548.0], [81.3, 5548.0], [81.4, 5548.0], [81.5, 5559.0], [81.6, 5559.0], [81.7, 5559.0], [81.8, 5559.0], [81.9, 5559.0], [82.0, 5574.0], [82.1, 5574.0], [82.2, 5574.0], [82.3, 5574.0], [82.4, 5574.0], [82.5, 5574.0], [82.6, 5574.0], [82.7, 5574.0], [82.8, 5574.0], [82.9, 5574.0], [83.0, 5579.0], [83.1, 5579.0], [83.2, 5579.0], [83.3, 5579.0], [83.4, 5579.0], [83.5, 5607.0], [83.6, 5607.0], [83.7, 5607.0], [83.8, 5607.0], [83.9, 5607.0], [84.0, 5608.0], [84.1, 5608.0], [84.2, 5608.0], [84.3, 5608.0], [84.4, 5608.0], [84.5, 5609.0], [84.6, 5609.0], [84.7, 5609.0], [84.8, 5609.0], [84.9, 5609.0], [85.0, 5613.0], [85.1, 5613.0], [85.2, 5613.0], [85.3, 5613.0], [85.4, 5613.0], [85.5, 5622.0], [85.6, 5622.0], [85.7, 5622.0], [85.8, 5622.0], [85.9, 5622.0], [86.0, 5623.0], [86.1, 5623.0], [86.2, 5623.0], [86.3, 5623.0], [86.4, 5623.0], [86.5, 5628.0], [86.6, 5628.0], [86.7, 5628.0], [86.8, 5628.0], [86.9, 5628.0], [87.0, 5631.0], [87.1, 5631.0], [87.2, 5631.0], [87.3, 5631.0], [87.4, 5631.0], [87.5, 5631.0], [87.6, 5631.0], [87.7, 5631.0], [87.8, 5631.0], [87.9, 5631.0], [88.0, 5638.0], [88.1, 5638.0], [88.2, 5638.0], [88.3, 5638.0], [88.4, 5638.0], [88.5, 5643.0], [88.6, 5643.0], [88.7, 5643.0], [88.8, 5643.0], [88.9, 5643.0], [89.0, 5644.0], [89.1, 5644.0], [89.2, 5644.0], [89.3, 5644.0], [89.4, 5644.0], [89.5, 5646.0], [89.6, 5646.0], [89.7, 5646.0], [89.8, 5646.0], [89.9, 5646.0], [90.0, 5665.0], [90.1, 5665.0], [90.2, 5665.0], [90.3, 5665.0], [90.4, 5665.0], [90.5, 5675.0], [90.6, 5675.0], [90.7, 5675.0], [90.8, 5675.0], [90.9, 5675.0], [91.0, 5685.0], [91.1, 5685.0], [91.2, 5685.0], [91.3, 5685.0], [91.4, 5685.0], [91.5, 5695.0], [91.6, 5695.0], [91.7, 5695.0], [91.8, 5695.0], [91.9, 5695.0], [92.0, 5697.0], [92.1, 5697.0], [92.2, 5697.0], [92.3, 5697.0], [92.4, 5697.0], [92.5, 5707.0], [92.6, 5707.0], [92.7, 5707.0], [92.8, 5707.0], [92.9, 5707.0], [93.0, 5713.0], [93.1, 5713.0], [93.2, 5713.0], [93.3, 5713.0], [93.4, 5713.0], [93.5, 5717.0], [93.6, 5717.0], [93.7, 5717.0], [93.8, 5717.0], [93.9, 5717.0], [94.0, 5729.0], [94.1, 5729.0], [94.2, 5729.0], [94.3, 5729.0], [94.4, 5729.0], [94.5, 5734.0], [94.6, 5734.0], [94.7, 5734.0], [94.8, 5734.0], [94.9, 5734.0], [95.0, 5741.0], [95.1, 5741.0], [95.2, 5741.0], [95.3, 5741.0], [95.4, 5741.0], [95.5, 5749.0], [95.6, 5749.0], [95.7, 5749.0], [95.8, 5749.0], [95.9, 5749.0], [96.0, 5806.0], [96.1, 5806.0], [96.2, 5806.0], [96.3, 5806.0], [96.4, 5806.0], [96.5, 5808.0], [96.6, 5808.0], [96.7, 5808.0], [96.8, 5808.0], [96.9, 5808.0], [97.0, 5929.0], [97.1, 5929.0], [97.2, 5929.0], [97.3, 5929.0], [97.4, 5929.0], [97.5, 6018.0], [97.6, 6018.0], [97.7, 6018.0], [97.8, 6018.0], [97.9, 6018.0], [98.0, 6019.0], [98.1, 6019.0], [98.2, 6019.0], [98.3, 6019.0], [98.4, 6019.0], [98.5, 6090.0], [98.6, 6090.0], [98.7, 6090.0], [98.8, 6090.0], [98.9, 6090.0], [99.0, 6107.0], [99.1, 6107.0], [99.2, 6107.0], [99.3, 6107.0], [99.4, 6107.0], [99.5, 6135.0], [99.6, 6135.0], [99.7, 6135.0], [99.8, 6135.0], [99.9, 6135.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 361.0], [0.1, 361.0], [0.2, 361.0], [0.3, 361.0], [0.4, 361.0], [0.5, 465.0], [0.6, 465.0], [0.7, 465.0], [0.8, 465.0], [0.9, 465.0], [1.0, 629.0], [1.1, 629.0], [1.2, 629.0], [1.3, 629.0], [1.4, 629.0], [1.5, 630.0], [1.6, 630.0], [1.7, 630.0], [1.8, 630.0], [1.9, 630.0], [2.0, 662.0], [2.1, 662.0], [2.2, 662.0], [2.3, 662.0], [2.4, 662.0], [2.5, 740.0], [2.6, 740.0], [2.7, 740.0], [2.8, 740.0], [2.9, 740.0], [3.0, 878.0], [3.1, 878.0], [3.2, 878.0], [3.3, 878.0], [3.4, 878.0], [3.5, 880.0], [3.6, 880.0], [3.7, 880.0], [3.8, 880.0], [3.9, 880.0], [4.0, 953.0], [4.1, 953.0], [4.2, 953.0], [4.3, 953.0], [4.4, 953.0], [4.5, 1077.0], [4.6, 1077.0], [4.7, 1077.0], [4.8, 1077.0], [4.9, 1077.0], [5.0, 1184.0], [5.1, 1184.0], [5.2, 1184.0], [5.3, 1184.0], [5.4, 1184.0], [5.5, 1263.0], [5.6, 1263.0], [5.7, 1263.0], [5.8, 1263.0], [5.9, 1263.0], [6.0, 1318.0], [6.1, 1318.0], [6.2, 1318.0], [6.3, 1318.0], [6.4, 1318.0], [6.5, 1445.0], [6.6, 1445.0], [6.7, 1445.0], [6.8, 1445.0], [6.9, 1445.0], [7.0, 1446.0], [7.1, 1446.0], [7.2, 1446.0], [7.3, 1446.0], [7.4, 1446.0], [7.5, 1483.0], [7.6, 1483.0], [7.7, 1483.0], [7.8, 1483.0], [7.9, 1483.0], [8.0, 1531.0], [8.1, 1531.0], [8.2, 1531.0], [8.3, 1531.0], [8.4, 1531.0], [8.5, 1546.0], [8.6, 1546.0], [8.7, 1546.0], [8.8, 1546.0], [8.9, 1546.0], [9.0, 1709.0], [9.1, 1709.0], [9.2, 1709.0], [9.3, 1709.0], [9.4, 1709.0], [9.5, 1710.0], [9.6, 1710.0], [9.7, 1710.0], [9.8, 1710.0], [9.9, 1710.0], [10.0, 1728.0], [10.1, 1728.0], [10.2, 1728.0], [10.3, 1728.0], [10.4, 1728.0], [10.5, 1749.0], [10.6, 1749.0], [10.7, 1749.0], [10.8, 1749.0], [10.9, 1749.0], [11.0, 1801.0], [11.1, 1801.0], [11.2, 1801.0], [11.3, 1801.0], [11.4, 1801.0], [11.5, 1953.0], [11.6, 1953.0], [11.7, 1953.0], [11.8, 1953.0], [11.9, 1953.0], [12.0, 1960.0], [12.1, 1960.0], [12.2, 1960.0], [12.3, 1960.0], [12.4, 1960.0], [12.5, 2048.0], [12.6, 2048.0], [12.7, 2048.0], [12.8, 2048.0], [12.9, 2048.0], [13.0, 2082.0], [13.1, 2082.0], [13.2, 2082.0], [13.3, 2082.0], [13.4, 2082.0], [13.5, 2108.0], [13.6, 2108.0], [13.7, 2108.0], [13.8, 2108.0], [13.9, 2108.0], [14.0, 2165.0], [14.1, 2165.0], [14.2, 2165.0], [14.3, 2165.0], [14.4, 2165.0], [14.5, 2225.0], [14.6, 2225.0], [14.7, 2225.0], [14.8, 2225.0], [14.9, 2225.0], [15.0, 2600.0], [15.1, 2600.0], [15.2, 2600.0], [15.3, 2600.0], [15.4, 2600.0], [15.5, 2607.0], [15.6, 2607.0], [15.7, 2607.0], [15.8, 2607.0], [15.9, 2607.0], [16.0, 2615.0], [16.1, 2615.0], [16.2, 2615.0], [16.3, 2615.0], [16.4, 2615.0], [16.5, 2704.0], [16.6, 2704.0], [16.7, 2704.0], [16.8, 2704.0], [16.9, 2704.0], [17.0, 2828.0], [17.1, 2828.0], [17.2, 2828.0], [17.3, 2828.0], [17.4, 2828.0], [17.5, 2835.0], [17.6, 2835.0], [17.7, 2835.0], [17.8, 2835.0], [17.9, 2835.0], [18.0, 2848.0], [18.1, 2848.0], [18.2, 2848.0], [18.3, 2848.0], [18.4, 2848.0], [18.5, 2849.0], [18.6, 2849.0], [18.7, 2849.0], [18.8, 2849.0], [18.9, 2849.0], [19.0, 2868.0], [19.1, 2868.0], [19.2, 2868.0], [19.3, 2868.0], [19.4, 2868.0], [19.5, 3421.0], [19.6, 3421.0], [19.7, 3421.0], [19.8, 3421.0], [19.9, 3421.0], [20.0, 4041.0], [20.1, 4041.0], [20.2, 4041.0], [20.3, 4041.0], [20.4, 4041.0], [20.5, 4130.0], [20.6, 4130.0], [20.7, 4130.0], [20.8, 4130.0], [20.9, 4130.0], [21.0, 4138.0], [21.1, 4138.0], [21.2, 4138.0], [21.3, 4138.0], [21.4, 4138.0], [21.5, 4197.0], [21.6, 4197.0], [21.7, 4197.0], [21.8, 4197.0], [21.9, 4197.0], [22.0, 4224.0], [22.1, 4224.0], [22.2, 4224.0], [22.3, 4224.0], [22.4, 4224.0], [22.5, 4226.0], [22.6, 4226.0], [22.7, 4226.0], [22.8, 4226.0], [22.9, 4226.0], [23.0, 4234.0], [23.1, 4234.0], [23.2, 4234.0], [23.3, 4234.0], [23.4, 4234.0], [23.5, 4238.0], [23.6, 4238.0], [23.7, 4238.0], [23.8, 4238.0], [23.9, 4238.0], [24.0, 4251.0], [24.1, 4251.0], [24.2, 4251.0], [24.3, 4251.0], [24.4, 4251.0], [24.5, 4293.0], [24.6, 4293.0], [24.7, 4293.0], [24.8, 4293.0], [24.9, 4293.0], [25.0, 4404.0], [25.1, 4404.0], [25.2, 4404.0], [25.3, 4404.0], [25.4, 4404.0], [25.5, 4422.0], [25.6, 4422.0], [25.7, 4422.0], [25.8, 4422.0], [25.9, 4422.0], [26.0, 4493.0], [26.1, 4493.0], [26.2, 4493.0], [26.3, 4493.0], [26.4, 4493.0], [26.5, 4535.0], [26.6, 4535.0], [26.7, 4535.0], [26.8, 4535.0], [26.9, 4535.0], [27.0, 4542.0], [27.1, 4542.0], [27.2, 4542.0], [27.3, 4542.0], [27.4, 4542.0], [27.5, 4550.0], [27.6, 4550.0], [27.7, 4550.0], [27.8, 4550.0], [27.9, 4550.0], [28.0, 4601.0], [28.1, 4601.0], [28.2, 4601.0], [28.3, 4601.0], [28.4, 4601.0], [28.5, 4610.0], [28.6, 4610.0], [28.7, 4610.0], [28.8, 4610.0], [28.9, 4610.0], [29.0, 4741.0], [29.1, 4741.0], [29.2, 4741.0], [29.3, 4741.0], [29.4, 4741.0], [29.5, 4772.0], [29.6, 4772.0], [29.7, 4772.0], [29.8, 4772.0], [29.9, 4772.0], [30.0, 4792.0], [30.1, 4792.0], [30.2, 4792.0], [30.3, 4792.0], [30.4, 4792.0], [30.5, 4822.0], [30.6, 4822.0], [30.7, 4822.0], [30.8, 4822.0], [30.9, 4822.0], [31.0, 4827.0], [31.1, 4827.0], [31.2, 4827.0], [31.3, 4827.0], [31.4, 4827.0], [31.5, 4840.0], [31.6, 4840.0], [31.7, 4840.0], [31.8, 4840.0], [31.9, 4840.0], [32.0, 4844.0], [32.1, 4844.0], [32.2, 4844.0], [32.3, 4844.0], [32.4, 4844.0], [32.5, 4878.0], [32.6, 4878.0], [32.7, 4878.0], [32.8, 4878.0], [32.9, 4878.0], [33.0, 4879.0], [33.1, 4879.0], [33.2, 4879.0], [33.3, 4879.0], [33.4, 4879.0], [33.5, 4886.0], [33.6, 4886.0], [33.7, 4886.0], [33.8, 4886.0], [33.9, 4886.0], [34.0, 4892.0], [34.1, 4892.0], [34.2, 4892.0], [34.3, 4892.0], [34.4, 4892.0], [34.5, 4894.0], [34.6, 4894.0], [34.7, 4894.0], [34.8, 4894.0], [34.9, 4894.0], [35.0, 4902.0], [35.1, 4902.0], [35.2, 4902.0], [35.3, 4902.0], [35.4, 4902.0], [35.5, 4920.0], [35.6, 4920.0], [35.7, 4920.0], [35.8, 4920.0], [35.9, 4920.0], [36.0, 4921.0], [36.1, 4921.0], [36.2, 4921.0], [36.3, 4921.0], [36.4, 4921.0], [36.5, 4921.0], [36.6, 4921.0], [36.7, 4921.0], [36.8, 4921.0], [36.9, 4921.0], [37.0, 4923.0], [37.1, 4923.0], [37.2, 4923.0], [37.3, 4923.0], [37.4, 4923.0], [37.5, 4929.0], [37.6, 4929.0], [37.7, 4929.0], [37.8, 4929.0], [37.9, 4929.0], [38.0, 4932.0], [38.1, 4932.0], [38.2, 4932.0], [38.3, 4932.0], [38.4, 4932.0], [38.5, 4947.0], [38.6, 4947.0], [38.7, 4947.0], [38.8, 4947.0], [38.9, 4947.0], [39.0, 4951.0], [39.1, 4951.0], [39.2, 4951.0], [39.3, 4951.0], [39.4, 4951.0], [39.5, 4980.0], [39.6, 4980.0], [39.7, 4980.0], [39.8, 4980.0], [39.9, 4980.0], [40.0, 4983.0], [40.1, 4983.0], [40.2, 4983.0], [40.3, 4983.0], [40.4, 4983.0], [40.5, 4990.0], [40.6, 4990.0], [40.7, 4990.0], [40.8, 4990.0], [40.9, 4990.0], [41.0, 4992.0], [41.1, 4992.0], [41.2, 4992.0], [41.3, 4992.0], [41.4, 4992.0], [41.5, 5003.0], [41.6, 5003.0], [41.7, 5003.0], [41.8, 5003.0], [41.9, 5003.0], [42.0, 5005.0], [42.1, 5005.0], [42.2, 5005.0], [42.3, 5005.0], [42.4, 5005.0], [42.5, 5064.0], [42.6, 5064.0], [42.7, 5064.0], [42.8, 5064.0], [42.9, 5064.0], [43.0, 5113.0], [43.1, 5113.0], [43.2, 5113.0], [43.3, 5113.0], [43.4, 5113.0], [43.5, 5114.0], [43.6, 5114.0], [43.7, 5114.0], [43.8, 5114.0], [43.9, 5114.0], [44.0, 5153.0], [44.1, 5153.0], [44.2, 5153.0], [44.3, 5153.0], [44.4, 5153.0], [44.5, 5181.0], [44.6, 5181.0], [44.7, 5181.0], [44.8, 5181.0], [44.9, 5181.0], [45.0, 5218.0], [45.1, 5218.0], [45.2, 5218.0], [45.3, 5218.0], [45.4, 5218.0], [45.5, 5225.0], [45.6, 5225.0], [45.7, 5225.0], [45.8, 5225.0], [45.9, 5225.0], [46.0, 5245.0], [46.1, 5245.0], [46.2, 5245.0], [46.3, 5245.0], [46.4, 5245.0], [46.5, 5268.0], [46.6, 5268.0], [46.7, 5268.0], [46.8, 5268.0], [46.9, 5268.0], [47.0, 5333.0], [47.1, 5333.0], [47.2, 5333.0], [47.3, 5333.0], [47.4, 5333.0], [47.5, 5339.0], [47.6, 5339.0], [47.7, 5339.0], [47.8, 5339.0], [47.9, 5339.0], [48.0, 5357.0], [48.1, 5357.0], [48.2, 5357.0], [48.3, 5357.0], [48.4, 5357.0], [48.5, 5408.0], [48.6, 5408.0], [48.7, 5408.0], [48.8, 5408.0], [48.9, 5408.0], [49.0, 5484.0], [49.1, 5484.0], [49.2, 5484.0], [49.3, 5484.0], [49.4, 5484.0], [49.5, 5493.0], [49.6, 5493.0], [49.7, 5493.0], [49.8, 5493.0], [49.9, 5493.0], [50.0, 5499.0], [50.1, 5499.0], [50.2, 5499.0], [50.3, 5499.0], [50.4, 5499.0], [50.5, 5508.0], [50.6, 5508.0], [50.7, 5508.0], [50.8, 5508.0], [50.9, 5508.0], [51.0, 5514.0], [51.1, 5514.0], [51.2, 5514.0], [51.3, 5514.0], [51.4, 5514.0], [51.5, 5534.0], [51.6, 5534.0], [51.7, 5534.0], [51.8, 5534.0], [51.9, 5534.0], [52.0, 5545.0], [52.1, 5545.0], [52.2, 5545.0], [52.3, 5545.0], [52.4, 5545.0], [52.5, 5563.0], [52.6, 5563.0], [52.7, 5563.0], [52.8, 5563.0], [52.9, 5563.0], [53.0, 5591.0], [53.1, 5591.0], [53.2, 5591.0], [53.3, 5591.0], [53.4, 5591.0], [53.5, 5592.0], [53.6, 5592.0], [53.7, 5592.0], [53.8, 5592.0], [53.9, 5592.0], [54.0, 5594.0], [54.1, 5594.0], [54.2, 5594.0], [54.3, 5594.0], [54.4, 5594.0], [54.5, 5595.0], [54.6, 5595.0], [54.7, 5595.0], [54.8, 5595.0], [54.9, 5595.0], [55.0, 5622.0], [55.1, 5622.0], [55.2, 5622.0], [55.3, 5622.0], [55.4, 5622.0], [55.5, 5623.0], [55.6, 5623.0], [55.7, 5623.0], [55.8, 5623.0], [55.9, 5623.0], [56.0, 5642.0], [56.1, 5642.0], [56.2, 5642.0], [56.3, 5642.0], [56.4, 5642.0], [56.5, 5644.0], [56.6, 5644.0], [56.7, 5644.0], [56.8, 5644.0], [56.9, 5644.0], [57.0, 5671.0], [57.1, 5671.0], [57.2, 5671.0], [57.3, 5671.0], [57.4, 5671.0], [57.5, 5710.0], [57.6, 5710.0], [57.7, 5710.0], [57.8, 5710.0], [57.9, 5710.0], [58.0, 5716.0], [58.1, 5716.0], [58.2, 5716.0], [58.3, 5716.0], [58.4, 5716.0], [58.5, 5727.0], [58.6, 5727.0], [58.7, 5727.0], [58.8, 5727.0], [58.9, 5727.0], [59.0, 5729.0], [59.1, 5729.0], [59.2, 5729.0], [59.3, 5729.0], [59.4, 5729.0], [59.5, 5748.0], [59.6, 5748.0], [59.7, 5748.0], [59.8, 5748.0], [59.9, 5748.0], [60.0, 5788.0], [60.1, 5788.0], [60.2, 5788.0], [60.3, 5788.0], [60.4, 5788.0], [60.5, 5848.0], [60.6, 5848.0], [60.7, 5848.0], [60.8, 5848.0], [60.9, 5848.0], [61.0, 5893.0], [61.1, 5893.0], [61.2, 5893.0], [61.3, 5893.0], [61.4, 5893.0], [61.5, 5909.0], [61.6, 5909.0], [61.7, 5909.0], [61.8, 5909.0], [61.9, 5909.0], [62.0, 5917.0], [62.1, 5917.0], [62.2, 5917.0], [62.3, 5917.0], [62.4, 5917.0], [62.5, 5929.0], [62.6, 5929.0], [62.7, 5929.0], [62.8, 5929.0], [62.9, 5929.0], [63.0, 6035.0], [63.1, 6035.0], [63.2, 6035.0], [63.3, 6035.0], [63.4, 6035.0], [63.5, 6058.0], [63.6, 6058.0], [63.7, 6058.0], [63.8, 6058.0], [63.9, 6058.0], [64.0, 6127.0], [64.1, 6127.0], [64.2, 6127.0], [64.3, 6127.0], [64.4, 6127.0], [64.5, 6214.0], [64.6, 6214.0], [64.7, 6214.0], [64.8, 6214.0], [64.9, 6214.0], [65.0, 6225.0], [65.1, 6225.0], [65.2, 6225.0], [65.3, 6225.0], [65.4, 6225.0], [65.5, 6263.0], [65.6, 6263.0], [65.7, 6263.0], [65.8, 6263.0], [65.9, 6263.0], [66.0, 6295.0], [66.1, 6295.0], [66.2, 6295.0], [66.3, 6295.0], [66.4, 6295.0], [66.5, 6404.0], [66.6, 6404.0], [66.7, 6404.0], [66.8, 6404.0], [66.9, 6404.0], [67.0, 6419.0], [67.1, 6419.0], [67.2, 6419.0], [67.3, 6419.0], [67.4, 6419.0], [67.5, 6433.0], [67.6, 6433.0], [67.7, 6433.0], [67.8, 6433.0], [67.9, 6433.0], [68.0, 6452.0], [68.1, 6452.0], [68.2, 6452.0], [68.3, 6452.0], [68.4, 6452.0], [68.5, 6465.0], [68.6, 6465.0], [68.7, 6465.0], [68.8, 6465.0], [68.9, 6465.0], [69.0, 6467.0], [69.1, 6467.0], [69.2, 6467.0], [69.3, 6467.0], [69.4, 6467.0], [69.5, 6489.0], [69.6, 6489.0], [69.7, 6489.0], [69.8, 6489.0], [69.9, 6489.0], [70.0, 6496.0], [70.1, 6496.0], [70.2, 6496.0], [70.3, 6496.0], [70.4, 6496.0], [70.5, 6540.0], [70.6, 6540.0], [70.7, 6540.0], [70.8, 6540.0], [70.9, 6540.0], [71.0, 6554.0], [71.1, 6554.0], [71.2, 6554.0], [71.3, 6554.0], [71.4, 6554.0], [71.5, 6589.0], [71.6, 6589.0], [71.7, 6589.0], [71.8, 6589.0], [71.9, 6589.0], [72.0, 6597.0], [72.1, 6597.0], [72.2, 6597.0], [72.3, 6597.0], [72.4, 6597.0], [72.5, 6601.0], [72.6, 6601.0], [72.7, 6601.0], [72.8, 6601.0], [72.9, 6601.0], [73.0, 6622.0], [73.1, 6622.0], [73.2, 6622.0], [73.3, 6622.0], [73.4, 6622.0], [73.5, 6628.0], [73.6, 6628.0], [73.7, 6628.0], [73.8, 6628.0], [73.9, 6628.0], [74.0, 6635.0], [74.1, 6635.0], [74.2, 6635.0], [74.3, 6635.0], [74.4, 6635.0], [74.5, 6649.0], [74.6, 6649.0], [74.7, 6649.0], [74.8, 6649.0], [74.9, 6649.0], [75.0, 6651.0], [75.1, 6651.0], [75.2, 6651.0], [75.3, 6651.0], [75.4, 6651.0], [75.5, 6658.0], [75.6, 6658.0], [75.7, 6658.0], [75.8, 6658.0], [75.9, 6658.0], [76.0, 6677.0], [76.1, 6677.0], [76.2, 6677.0], [76.3, 6677.0], [76.4, 6677.0], [76.5, 6686.0], [76.6, 6686.0], [76.7, 6686.0], [76.8, 6686.0], [76.9, 6686.0], [77.0, 6703.0], [77.1, 6703.0], [77.2, 6703.0], [77.3, 6703.0], [77.4, 6703.0], [77.5, 6708.0], [77.6, 6708.0], [77.7, 6708.0], [77.8, 6708.0], [77.9, 6708.0], [78.0, 6750.0], [78.1, 6750.0], [78.2, 6750.0], [78.3, 6750.0], [78.4, 6750.0], [78.5, 6754.0], [78.6, 6754.0], [78.7, 6754.0], [78.8, 6754.0], [78.9, 6754.0], [79.0, 6758.0], [79.1, 6758.0], [79.2, 6758.0], [79.3, 6758.0], [79.4, 6758.0], [79.5, 6760.0], [79.6, 6760.0], [79.7, 6760.0], [79.8, 6760.0], [79.9, 6760.0], [80.0, 6764.0], [80.1, 6764.0], [80.2, 6764.0], [80.3, 6764.0], [80.4, 6764.0], [80.5, 6784.0], [80.6, 6784.0], [80.7, 6784.0], [80.8, 6784.0], [80.9, 6784.0], [81.0, 6788.0], [81.1, 6788.0], [81.2, 6788.0], [81.3, 6788.0], [81.4, 6788.0], [81.5, 6792.0], [81.6, 6792.0], [81.7, 6792.0], [81.8, 6792.0], [81.9, 6792.0], [82.0, 6794.0], [82.1, 6794.0], [82.2, 6794.0], [82.3, 6794.0], [82.4, 6794.0], [82.5, 6807.0], [82.6, 6807.0], [82.7, 6807.0], [82.8, 6807.0], [82.9, 6807.0], [83.0, 6807.0], [83.1, 6807.0], [83.2, 6807.0], [83.3, 6807.0], [83.4, 6807.0], [83.5, 6808.0], [83.6, 6808.0], [83.7, 6808.0], [83.8, 6808.0], [83.9, 6808.0], [84.0, 6819.0], [84.1, 6819.0], [84.2, 6819.0], [84.3, 6819.0], [84.4, 6819.0], [84.5, 6825.0], [84.6, 6825.0], [84.7, 6825.0], [84.8, 6825.0], [84.9, 6825.0], [85.0, 6843.0], [85.1, 6843.0], [85.2, 6843.0], [85.3, 6843.0], [85.4, 6843.0], [85.5, 6850.0], [85.6, 6850.0], [85.7, 6850.0], [85.8, 6850.0], [85.9, 6850.0], [86.0, 6853.0], [86.1, 6853.0], [86.2, 6853.0], [86.3, 6853.0], [86.4, 6853.0], [86.5, 6857.0], [86.6, 6857.0], [86.7, 6857.0], [86.8, 6857.0], [86.9, 6857.0], [87.0, 6858.0], [87.1, 6858.0], [87.2, 6858.0], [87.3, 6858.0], [87.4, 6858.0], [87.5, 6860.0], [87.6, 6860.0], [87.7, 6860.0], [87.8, 6860.0], [87.9, 6860.0], [88.0, 6860.0], [88.1, 6860.0], [88.2, 6860.0], [88.3, 6860.0], [88.4, 6860.0], [88.5, 6862.0], [88.6, 6862.0], [88.7, 6862.0], [88.8, 6862.0], [88.9, 6862.0], [89.0, 6867.0], [89.1, 6867.0], [89.2, 6867.0], [89.3, 6867.0], [89.4, 6867.0], [89.5, 6875.0], [89.6, 6875.0], [89.7, 6875.0], [89.8, 6875.0], [89.9, 6875.0], [90.0, 6879.0], [90.1, 6879.0], [90.2, 6879.0], [90.3, 6879.0], [90.4, 6879.0], [90.5, 6881.0], [90.6, 6881.0], [90.7, 6881.0], [90.8, 6881.0], [90.9, 6881.0], [91.0, 6897.0], [91.1, 6897.0], [91.2, 6897.0], [91.3, 6897.0], [91.4, 6897.0], [91.5, 6901.0], [91.6, 6901.0], [91.7, 6901.0], [91.8, 6901.0], [91.9, 6901.0], [92.0, 6904.0], [92.1, 6904.0], [92.2, 6904.0], [92.3, 6904.0], [92.4, 6904.0], [92.5, 6916.0], [92.6, 6916.0], [92.7, 6916.0], [92.8, 6916.0], [92.9, 6916.0], [93.0, 6924.0], [93.1, 6924.0], [93.2, 6924.0], [93.3, 6924.0], [93.4, 6924.0], [93.5, 6928.0], [93.6, 6928.0], [93.7, 6928.0], [93.8, 6928.0], [93.9, 6928.0], [94.0, 6937.0], [94.1, 6937.0], [94.2, 6937.0], [94.3, 6937.0], [94.4, 6937.0], [94.5, 6954.0], [94.6, 6954.0], [94.7, 6954.0], [94.8, 6954.0], [94.9, 6954.0], [95.0, 6955.0], [95.1, 6955.0], [95.2, 6955.0], [95.3, 6955.0], [95.4, 6955.0], [95.5, 6960.0], [95.6, 6960.0], [95.7, 6960.0], [95.8, 6960.0], [95.9, 6960.0], [96.0, 6969.0], [96.1, 6969.0], [96.2, 6969.0], [96.3, 6969.0], [96.4, 6969.0], [96.5, 6979.0], [96.6, 6979.0], [96.7, 6979.0], [96.8, 6979.0], [96.9, 6979.0], [97.0, 6982.0], [97.1, 6982.0], [97.2, 6982.0], [97.3, 6982.0], [97.4, 6982.0], [97.5, 6985.0], [97.6, 6985.0], [97.7, 6985.0], [97.8, 6985.0], [97.9, 6985.0], [98.0, 6999.0], [98.1, 6999.0], [98.2, 6999.0], [98.3, 6999.0], [98.4, 6999.0], [98.5, 7009.0], [98.6, 7009.0], [98.7, 7009.0], [98.8, 7009.0], [98.9, 7009.0], [99.0, 7024.0], [99.1, 7024.0], [99.2, 7024.0], [99.3, 7024.0], [99.4, 7024.0], [99.5, 7064.0], [99.6, 7064.0], [99.7, 7064.0], [99.8, 7064.0], [99.9, 7064.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 49.0, "series": [{"data": [[300.0, 49.0], [600.0, 21.0], [700.0, 5.0], [100.0, 30.0], [400.0, 37.0], [200.0, 23.0], [800.0, 4.0], [500.0, 31.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 40.0], [600.0, 24.0], [700.0, 11.0], [100.0, 38.0], [200.0, 27.0], [400.0, 29.0], [800.0, 2.0], [900.0, 3.0], [500.0, 25.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 1.0], [600.0, 1.0], [700.0, 1.0], [800.0, 1.0], [900.0, 2.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 5.0], [2300.0, 1.0], [3100.0, 3.0], [3300.0, 3.0], [3200.0, 3.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 6.0], [4200.0, 22.0], [4300.0, 6.0], [4500.0, 5.0], [4400.0, 2.0], [4600.0, 3.0], [4700.0, 8.0], [4800.0, 14.0], [4900.0, 3.0], [5000.0, 4.0], [5100.0, 5.0], [5200.0, 7.0], [5300.0, 7.0], [5400.0, 11.0], [5500.0, 10.0], [5600.0, 18.0], [5700.0, 7.0], [5800.0, 2.0], [6000.0, 3.0], [5900.0, 1.0], [6100.0, 2.0], [100.0, 1.0], [300.0, 3.0], [400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[600.0, 3.0], [700.0, 1.0], [800.0, 2.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 2.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 1.0], [2600.0, 3.0], [2700.0, 1.0], [2800.0, 5.0], [3400.0, 1.0], [4000.0, 1.0], [4200.0, 6.0], [4100.0, 3.0], [4500.0, 3.0], [4400.0, 3.0], [4600.0, 2.0], [4700.0, 3.0], [4800.0, 9.0], [4900.0, 13.0], [5000.0, 3.0], [5100.0, 4.0], [5200.0, 4.0], [5300.0, 3.0], [5400.0, 4.0], [5500.0, 9.0], [5600.0, 5.0], [5700.0, 6.0], [5800.0, 2.0], [5900.0, 3.0], [6000.0, 2.0], [6100.0, 1.0], [6200.0, 4.0], [6400.0, 8.0], [6500.0, 4.0], [6600.0, 9.0], [6700.0, 11.0], [6800.0, 18.0], [6900.0, 14.0], [7000.0, 3.0], [300.0, 1.0], [400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 157.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 362.0, "series": [{"data": [[0.0, 281.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 157.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 362.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 99.24499999999985, "minX": 1.70191506E12, "maxY": 99.24499999999985, "series": [{"data": [[1.70191506E12, 99.24499999999985]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191506E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 138.0, "minX": 1.0, "maxY": 7064.0, "series": [{"data": [[2.0, 207.0], [3.0, 340.0], [4.0, 248.0], [6.0, 295.5], [9.0, 384.6666666666667], [11.0, 382.0], [12.0, 467.0], [13.0, 513.0], [14.0, 394.0], [15.0, 473.0], [16.0, 517.0], [17.0, 517.0], [18.0, 619.0], [19.0, 311.0], [20.0, 497.0], [21.0, 555.0], [22.0, 550.0], [23.0, 536.0], [24.0, 611.0], [25.0, 540.0], [26.0, 544.0], [27.0, 372.0], [29.0, 564.5], [30.0, 495.0], [31.0, 543.0], [32.0, 767.0], [37.0, 575.0], [36.0, 679.25], [39.0, 698.5], [41.0, 862.0], [40.0, 548.0], [43.0, 607.0], [42.0, 527.0], [45.0, 658.0], [44.0, 605.0], [47.0, 673.0], [46.0, 659.0], [48.0, 433.0], [51.0, 614.0], [53.0, 853.0], [52.0, 597.0], [55.0, 788.0], [54.0, 625.0], [56.0, 587.0], [59.0, 686.0], [58.0, 610.0], [61.0, 781.0], [60.0, 600.0], [63.0, 664.0], [62.0, 654.0], [67.0, 682.0], [66.0, 632.0], [65.0, 698.0], [64.0, 484.0], [71.0, 598.5], [69.0, 600.0], [68.0, 634.0], [74.0, 508.0], [73.0, 486.0], [72.0, 536.0], [79.0, 687.0], [78.0, 457.0], [77.0, 511.0], [76.0, 529.0], [83.0, 471.0], [82.0, 355.0], [81.0, 425.0], [80.0, 519.0], [87.0, 474.0], [86.0, 427.0], [85.0, 405.0], [84.0, 411.0], [91.0, 508.0], [90.0, 359.5], [88.0, 358.0], [95.0, 420.0], [94.0, 338.5], [92.0, 396.0], [98.0, 371.0], [97.0, 342.0], [96.0, 347.0], [103.0, 506.0], [102.0, 344.0], [101.0, 377.0], [100.0, 378.5], [107.0, 366.0], [106.0, 284.0], [105.0, 432.0], [104.0, 381.0], [111.0, 303.0], [110.0, 452.0], [109.0, 375.0], [108.0, 294.0], [115.0, 388.0], [114.0, 410.0], [113.0, 426.0], [112.0, 476.0], [119.0, 403.0], [118.0, 331.0], [117.0, 384.0], [116.0, 354.0], [122.0, 366.0], [121.0, 342.0], [120.0, 348.0], [127.0, 300.0], [126.0, 324.0], [125.0, 363.0], [124.0, 332.5], [135.0, 392.0], [134.0, 329.5], [132.0, 308.5], [130.0, 272.0], [129.0, 327.0], [128.0, 328.0], [138.0, 235.33333333333331], [139.0, 221.33333333333331], [140.0, 252.5], [143.0, 230.0], [142.0, 276.0], [141.0, 285.0], [137.0, 385.0], [136.0, 396.0], [151.0, 203.0], [150.0, 203.0], [149.0, 206.0], [148.0, 220.0], [146.0, 235.0], [144.0, 247.0], [158.0, 406.5], [156.0, 408.0], [155.0, 408.3333333333333], [152.0, 410.0], [167.0, 396.5], [163.0, 391.5], [161.0, 579.0], [160.0, 447.5], [175.0, 147.0], [174.0, 162.0], [173.0, 149.0], [172.0, 157.0], [171.0, 185.0], [170.0, 422.0], [183.0, 153.0], [182.0, 148.0], [181.0, 146.0], [180.0, 149.0], [179.0, 150.0], [178.0, 160.0], [177.0, 150.0], [176.0, 150.0], [191.0, 142.0], [189.0, 150.0], [188.0, 188.0], [187.0, 160.0], [186.0, 140.0], [184.0, 149.0], [195.0, 150.5], [193.0, 138.0], [192.0, 145.0], [1.0, 231.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[99.24499999999996, 408.8299999999998]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 750.0], [3.0, 620.0], [4.0, 958.0], [6.0, 666.5], [9.0, 927.3333333333334], [11.0, 741.5], [12.0, 674.0], [13.0, 670.0], [14.0, 484.0], [15.0, 760.0], [16.0, 735.0], [17.0, 669.0], [18.0, 741.0], [19.0, 929.0], [20.0, 663.0], [21.0, 632.0], [22.0, 801.0], [23.0, 676.0], [24.0, 632.0], [25.0, 719.0], [26.0, 690.0], [27.0, 627.0], [29.0, 689.5], [30.0, 667.0], [31.0, 607.0], [32.0, 566.0], [37.0, 616.0], [36.0, 579.0], [39.0, 646.0], [41.0, 507.0], [40.0, 637.0], [43.0, 544.0], [42.0, 633.0], [45.0, 601.0], [44.0, 705.0], [47.0, 620.0], [46.0, 565.0], [48.0, 668.0], [51.0, 644.6666666666666], [53.0, 358.0], [52.0, 618.0], [55.0, 440.0], [54.0, 544.0], [56.0, 572.0], [59.0, 468.0], [58.0, 515.0], [61.0, 514.0], [60.0, 579.0], [63.0, 468.0], [62.0, 442.0], [67.0, 390.0], [66.0, 586.0], [65.0, 402.0], [64.0, 468.0], [71.0, 476.0], [69.0, 407.0], [68.0, 475.0], [74.0, 469.0], [73.0, 392.0], [72.0, 483.0], [79.0, 423.0], [78.0, 347.0], [77.0, 469.0], [76.0, 322.5], [83.0, 382.0], [82.0, 450.0], [81.0, 342.0], [80.0, 428.0], [87.0, 411.0], [86.0, 360.0], [85.0, 463.0], [84.0, 456.0], [91.0, 268.0], [90.0, 452.5], [88.0, 464.0], [95.0, 363.0], [94.0, 442.5], [92.0, 378.0], [98.0, 399.0], [97.0, 349.0], [96.0, 336.0], [103.0, 286.0], [102.0, 351.0], [101.0, 333.0], [100.0, 364.0], [107.0, 309.0], [106.0, 444.0], [105.0, 344.0], [104.0, 333.0], [111.0, 305.0], [110.0, 261.0], [109.0, 355.0], [108.0, 333.0], [115.0, 340.0], [114.0, 366.0], [113.0, 404.0], [112.0, 380.0], [119.0, 346.0], [118.0, 383.0], [117.0, 346.0], [116.0, 372.0], [122.0, 310.0], [121.0, 332.0], [120.0, 348.0], [127.0, 317.0], [126.0, 326.0], [125.0, 274.0], [124.0, 314.0], [135.0, 263.0], [134.0, 270.5], [132.0, 294.0], [130.0, 341.0], [129.0, 287.0], [128.0, 303.0], [138.0, 174.66666666666666], [139.0, 184.66666666666666], [140.0, 207.5], [143.0, 227.0], [142.0, 212.0], [141.0, 222.0], [137.0, 234.0], [136.0, 238.0], [151.0, 224.0], [150.0, 228.0], [149.0, 238.0], [148.0, 239.0], [146.0, 241.0], [144.0, 238.0], [158.0, 522.0], [156.0, 524.0], [155.0, 522.6666666666666], [152.0, 522.0], [167.0, 180.5], [163.0, 189.0], [161.0, 464.0], [160.0, 556.0], [175.0, 154.0], [174.0, 144.0], [173.0, 159.0], [172.0, 148.0], [171.0, 146.0], [170.0, 166.33333333333334], [183.0, 143.0], [182.0, 148.0], [181.0, 140.0], [180.0, 169.0], [179.0, 149.0], [178.0, 153.0], [177.0, 144.0], [176.0, 153.0], [191.0, 144.0], [189.0, 141.0], [188.0, 178.0], [187.0, 165.0], [186.0, 164.0], [184.0, 145.0], [195.0, 141.5], [193.0, 185.0], [192.0, 163.0], [1.0, 588.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[99.24499999999996, 412.0149999999999]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 6107.0], [3.0, 6018.0], [4.0, 5749.0], [6.0, 6009.5], [9.0, 5667.0], [11.0, 5767.5], [12.0, 5734.0], [13.0, 5741.0], [14.0, 6019.0], [15.0, 5574.0], [16.0, 5717.0], [17.0, 5622.0], [18.0, 5638.0], [19.0, 5697.0], [20.0, 5665.0], [21.0, 5631.0], [22.0, 5631.0], [23.0, 5646.0], [24.0, 5685.0], [25.0, 5608.0], [26.0, 5609.0], [27.0, 5808.0], [29.0, 5633.5], [30.0, 5695.0], [31.0, 5707.0], [32.0, 5520.0], [37.0, 5559.0], [36.0, 5489.0], [39.0, 5391.5], [41.0, 5493.0], [40.0, 5579.0], [43.0, 5643.0], [42.0, 5628.0], [45.0, 5330.0], [44.0, 5291.0], [47.0, 5499.0], [46.0, 5536.0], [48.0, 5607.0], [51.0, 5425.333333333333], [53.0, 5254.0], [52.0, 5280.0], [55.0, 5475.0], [54.0, 5482.0], [56.0, 5476.0], [59.0, 5504.0], [58.0, 5427.5], [61.0, 5302.0], [60.0, 5449.0], [63.0, 5335.0], [62.0, 5458.0], [67.0, 5332.0], [66.0, 5270.0], [65.0, 5352.0], [64.0, 5481.0], [71.0, 5144.0], [69.0, 5256.0], [68.0, 5185.0], [74.0, 5058.0], [73.0, 5180.0], [72.0, 5108.0], [79.0, 4783.0], [78.0, 5044.0], [77.0, 4937.0], [76.0, 5067.5], [83.0, 4874.0], [82.0, 4924.0], [81.0, 4980.0], [80.0, 4841.0], [87.0, 4786.0], [86.0, 4834.0], [85.0, 4848.0], [84.0, 4843.0], [91.0, 4819.0], [90.0, 4820.5], [88.0, 4822.0], [95.0, 4780.0], [94.0, 4811.5], [92.0, 4818.0], [98.0, 4775.0], [97.0, 4817.0], [96.0, 4816.0], [103.0, 4615.0], [102.0, 4788.0], [101.0, 4783.0], [100.0, 4781.5], [107.0, 4570.0], [106.0, 4605.0], [105.0, 4580.0], [104.0, 4625.0], [111.0, 4505.0], [110.0, 4467.0], [109.0, 4487.0], [108.0, 4598.0], [115.0, 4262.0], [114.0, 4288.0], [113.0, 4284.0], [112.0, 4297.0], [119.0, 4519.0], [118.0, 4266.0], [117.0, 4275.0], [116.0, 4266.0], [122.0, 4307.0], [121.0, 4277.0], [120.0, 4307.0], [127.0, 4285.0], [126.0, 4297.0], [125.0, 4254.0], [124.0, 4266.5], [135.0, 4223.0], [134.0, 4282.5], [132.0, 4270.0], [130.0, 4307.0], [129.0, 4307.0], [128.0, 4298.0], [138.0, 1499.0], [139.0, 1586.6666666666667], [140.0, 2290.0], [143.0, 4152.0], [142.0, 4284.0], [141.0, 4371.0], [137.0, 4208.0], [136.0, 4158.0], [151.0, 4108.0], [150.0, 4117.0], [149.0, 3848.0], [148.0, 3954.0], [146.0, 4041.0], [144.0, 4115.0], [158.0, 3300.5], [156.0, 3317.0], [155.0, 3191.0], [152.0, 3205.0], [167.0, 2207.5], [163.0, 2267.5], [161.0, 2377.0], [160.0, 3227.0], [175.0, 1923.0], [174.0, 1802.0], [173.0, 1740.0], [172.0, 1776.0], [171.0, 1834.0], [170.0, 2050.6666666666665], [183.0, 1234.0], [182.0, 1504.0], [181.0, 1423.0], [180.0, 1390.0], [179.0, 1428.0], [178.0, 1647.0], [177.0, 1455.0], [176.0, 1650.0], [191.0, 883.5], [189.0, 893.0], [188.0, 952.0], [187.0, 1120.0], [186.0, 1160.5], [184.0, 1251.0], [195.0, 554.0], [193.0, 557.0], [192.0, 569.0], [1.0, 6135.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[99.24499999999996, 4198.985000000001]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 7064.0], [3.0, 6979.0], [4.0, 6955.0], [6.0, 6972.5], [9.0, 6979.0], [11.0, 6891.0], [12.0, 6875.0], [13.0, 6924.0], [14.0, 6897.0], [15.0, 6807.0], [16.0, 6969.0], [17.0, 6808.0], [18.0, 6999.0], [19.0, 6937.0], [20.0, 6825.0], [21.0, 6819.0], [22.0, 6982.0], [23.0, 6860.0], [24.0, 6928.0], [25.0, 6867.0], [26.0, 6843.0], [27.0, 6807.0], [29.0, 6888.0], [30.0, 6858.0], [31.0, 6857.0], [32.0, 6853.0], [37.0, 6750.0], [36.0, 6747.25], [39.0, 6736.0], [41.0, 6862.0], [40.0, 6764.0], [43.0, 6794.0], [42.0, 6788.0], [45.0, 6589.0], [44.0, 6601.0], [47.0, 6792.0], [46.0, 6760.0], [48.0, 6708.0], [51.0, 6684.0], [53.0, 6465.0], [52.0, 6496.0], [55.0, 6703.0], [54.0, 6651.0], [56.0, 6635.0], [59.0, 6658.0], [58.0, 6552.5], [61.0, 6597.0], [60.0, 6628.0], [63.0, 6467.0], [62.0, 6554.0], [67.0, 6404.0], [66.0, 6489.0], [65.0, 6452.0], [64.0, 6433.0], [71.0, 6219.5], [69.0, 6263.0], [68.0, 6295.0], [74.0, 6035.0], [73.0, 6058.0], [72.0, 6127.0], [79.0, 5893.0], [78.0, 5848.0], [77.0, 5917.0], [76.0, 5919.0], [83.0, 5727.0], [82.0, 5729.0], [81.0, 5748.0], [80.0, 5788.0], [87.0, 5671.0], [86.0, 5622.0], [85.0, 5716.0], [84.0, 5710.0], [91.0, 5595.0], [90.0, 5632.5], [88.0, 5644.0], [95.0, 5563.0], [94.0, 5592.5], [92.0, 5592.0], [98.0, 5545.0], [97.0, 5508.0], [96.0, 5499.0], [103.0, 5408.0], [102.0, 5484.0], [101.0, 5493.0], [100.0, 5524.0], [107.0, 5245.0], [106.0, 5333.0], [105.0, 5357.0], [104.0, 5339.0], [111.0, 5113.0], [110.0, 5181.0], [109.0, 5218.0], [108.0, 5225.0], [115.0, 4990.0], [114.0, 5064.0], [113.0, 5114.0], [112.0, 5153.0], [119.0, 5268.0], [118.0, 4980.0], [117.0, 5005.0], [116.0, 4992.0], [122.0, 4983.0], [121.0, 4951.0], [120.0, 5003.0], [127.0, 4902.0], [126.0, 4947.0], [125.0, 4892.0], [124.0, 4913.0], [135.0, 4878.0], [134.0, 4882.5], [132.0, 4872.5], [130.0, 4920.0], [129.0, 4921.0], [128.0, 4929.0], [138.0, 1910.3333333333333], [139.0, 1993.6666666666667], [140.0, 2751.0], [143.0, 4610.0], [142.0, 4772.0], [141.0, 4879.0], [137.0, 4827.0], [136.0, 4792.0], [151.0, 4535.0], [150.0, 4550.0], [149.0, 4293.0], [148.0, 4413.0], [146.0, 4517.5], [144.0, 4601.0], [158.0, 4229.0], [156.0, 4251.0], [155.0, 4122.666666666667], [152.0, 4138.0], [167.0, 2784.75], [163.0, 2848.0], [161.0, 3421.0], [160.0, 4232.0], [175.0, 2225.0], [174.0, 2108.0], [173.0, 2048.0], [172.0, 2082.0], [171.0, 2165.0], [170.0, 2639.6666666666665], [183.0, 1531.0], [182.0, 1801.0], [181.0, 1710.0], [180.0, 1709.0], [179.0, 1728.0], [178.0, 1960.0], [177.0, 1749.0], [176.0, 1953.0], [191.0, 1170.0], [189.0, 1184.0], [188.0, 1318.0], [187.0, 1445.0], [186.0, 1464.5], [184.0, 1546.0], [195.0, 846.5], [193.0, 880.0], [192.0, 878.0], [1.0, 6954.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[99.24499999999996, 5020.134999999998]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 195.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2793.3333333333335, "minX": 1.70191506E12, "maxY": 44473.333333333336, "series": [{"data": [[1.70191506E12, 44473.333333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70191506E12, 2793.3333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191506E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 408.8299999999998, "minX": 1.70191506E12, "maxY": 5020.134999999998, "series": [{"data": [[1.70191506E12, 408.8299999999998]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191506E12, 412.0149999999999]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191506E12, 4198.985000000001]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191506E12, 5020.134999999998]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191506E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 398.09000000000015, "minX": 1.70191506E12, "maxY": 4198.885, "series": [{"data": [[1.70191506E12, 399.26499999999993]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191506E12, 398.09000000000015]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191506E12, 4198.885]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191506E12, 4198.885]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191506E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70191506E12, "maxY": 4140.535, "series": [{"data": [[1.70191506E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191506E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191506E12, 4140.535]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191506E12, 4140.535]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191506E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 53.0, "minX": 1.70191506E12, "maxY": 7064.0, "series": [{"data": [[1.70191506E12, 7064.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70191506E12, 53.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70191506E12, 5929.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70191506E12, 6968.91]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70191506E12, 757.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70191506E12, 6763.799999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191506E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 188.0, "minX": 5.0, "maxY": 5064.0, "series": [{"data": [[135.0, 690.0], [74.0, 1425.5], [37.0, 464.0], [5.0, 320.0], [166.0, 4273.5], [163.0, 5064.0], [51.0, 188.0], [54.0, 2006.5], [115.0, 853.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 166.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 175.0, "minX": 5.0, "maxY": 4580.0, "series": [{"data": [[135.0, 665.0], [74.0, 1200.5], [37.0, 463.0], [5.0, 317.0], [166.0, 4116.0], [163.0, 4580.0], [51.0, 175.0], [54.0, 1484.5], [115.0, 830.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 166.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.70191506E12, "maxY": 13.333333333333334, "series": [{"data": [[1.70191506E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191506E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.70191506E12, "maxY": 6.666666666666667, "series": [{"data": [[1.70191506E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70191506E12, 3.3333333333333335]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70191506E12, 3.3333333333333335]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191506E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.70191506E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.70191506E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70191506E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70191506E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.70191506E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191506E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.70191506E12, "maxY": 13.333333333333334, "series": [{"data": [[1.70191506E12, 13.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191506E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

