/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 256.0, "minX": 0.0, "maxY": 4085.0, "series": [{"data": [[0.0, 256.0], [0.1, 256.0], [0.2, 256.0], [0.3, 256.0], [0.4, 256.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 282.0], [1.1, 282.0], [1.2, 282.0], [1.3, 282.0], [1.4, 282.0], [1.5, 296.0], [1.6, 296.0], [1.7, 296.0], [1.8, 296.0], [1.9, 296.0], [2.0, 306.0], [2.1, 306.0], [2.2, 306.0], [2.3, 306.0], [2.4, 306.0], [2.5, 310.0], [2.6, 310.0], [2.7, 310.0], [2.8, 310.0], [2.9, 310.0], [3.0, 314.0], [3.1, 314.0], [3.2, 314.0], [3.3, 314.0], [3.4, 314.0], [3.5, 314.0], [3.6, 314.0], [3.7, 314.0], [3.8, 314.0], [3.9, 314.0], [4.0, 327.0], [4.1, 327.0], [4.2, 327.0], [4.3, 327.0], [4.4, 327.0], [4.5, 328.0], [4.6, 328.0], [4.7, 328.0], [4.8, 328.0], [4.9, 328.0], [5.0, 331.0], [5.1, 331.0], [5.2, 331.0], [5.3, 331.0], [5.4, 331.0], [5.5, 335.0], [5.6, 335.0], [5.7, 335.0], [5.8, 335.0], [5.9, 335.0], [6.0, 354.0], [6.1, 354.0], [6.2, 354.0], [6.3, 354.0], [6.4, 354.0], [6.5, 360.0], [6.6, 360.0], [6.7, 360.0], [6.8, 360.0], [6.9, 360.0], [7.0, 362.0], [7.1, 362.0], [7.2, 362.0], [7.3, 362.0], [7.4, 362.0], [7.5, 366.0], [7.6, 366.0], [7.7, 366.0], [7.8, 366.0], [7.9, 366.0], [8.0, 368.0], [8.1, 368.0], [8.2, 368.0], [8.3, 368.0], [8.4, 368.0], [8.5, 369.0], [8.6, 369.0], [8.7, 369.0], [8.8, 369.0], [8.9, 369.0], [9.0, 374.0], [9.1, 374.0], [9.2, 374.0], [9.3, 374.0], [9.4, 374.0], [9.5, 376.0], [9.6, 376.0], [9.7, 376.0], [9.8, 376.0], [9.9, 376.0], [10.0, 384.0], [10.1, 384.0], [10.2, 384.0], [10.3, 384.0], [10.4, 384.0], [10.5, 386.0], [10.6, 386.0], [10.7, 386.0], [10.8, 386.0], [10.9, 386.0], [11.0, 387.0], [11.1, 387.0], [11.2, 387.0], [11.3, 387.0], [11.4, 387.0], [11.5, 391.0], [11.6, 391.0], [11.7, 391.0], [11.8, 391.0], [11.9, 391.0], [12.0, 391.0], [12.1, 391.0], [12.2, 391.0], [12.3, 391.0], [12.4, 391.0], [12.5, 391.0], [12.6, 391.0], [12.7, 391.0], [12.8, 391.0], [12.9, 391.0], [13.0, 393.0], [13.1, 393.0], [13.2, 393.0], [13.3, 393.0], [13.4, 393.0], [13.5, 394.0], [13.6, 394.0], [13.7, 394.0], [13.8, 394.0], [13.9, 394.0], [14.0, 395.0], [14.1, 395.0], [14.2, 395.0], [14.3, 395.0], [14.4, 395.0], [14.5, 396.0], [14.6, 396.0], [14.7, 396.0], [14.8, 396.0], [14.9, 396.0], [15.0, 397.0], [15.1, 397.0], [15.2, 397.0], [15.3, 397.0], [15.4, 397.0], [15.5, 398.0], [15.6, 398.0], [15.7, 398.0], [15.8, 398.0], [15.9, 398.0], [16.0, 400.0], [16.1, 400.0], [16.2, 400.0], [16.3, 400.0], [16.4, 400.0], [16.5, 400.0], [16.6, 400.0], [16.7, 400.0], [16.8, 400.0], [16.9, 400.0], [17.0, 401.0], [17.1, 401.0], [17.2, 401.0], [17.3, 401.0], [17.4, 401.0], [17.5, 401.0], [17.6, 401.0], [17.7, 401.0], [17.8, 401.0], [17.9, 401.0], [18.0, 402.0], [18.1, 402.0], [18.2, 402.0], [18.3, 402.0], [18.4, 402.0], [18.5, 404.0], [18.6, 404.0], [18.7, 404.0], [18.8, 404.0], [18.9, 404.0], [19.0, 405.0], [19.1, 405.0], [19.2, 405.0], [19.3, 405.0], [19.4, 405.0], [19.5, 405.0], [19.6, 405.0], [19.7, 405.0], [19.8, 405.0], [19.9, 405.0], [20.0, 407.0], [20.1, 407.0], [20.2, 407.0], [20.3, 407.0], [20.4, 407.0], [20.5, 408.0], [20.6, 408.0], [20.7, 408.0], [20.8, 408.0], [20.9, 408.0], [21.0, 410.0], [21.1, 410.0], [21.2, 410.0], [21.3, 410.0], [21.4, 410.0], [21.5, 411.0], [21.6, 411.0], [21.7, 411.0], [21.8, 411.0], [21.9, 411.0], [22.0, 412.0], [22.1, 412.0], [22.2, 412.0], [22.3, 412.0], [22.4, 412.0], [22.5, 412.0], [22.6, 412.0], [22.7, 412.0], [22.8, 412.0], [22.9, 412.0], [23.0, 413.0], [23.1, 413.0], [23.2, 413.0], [23.3, 413.0], [23.4, 413.0], [23.5, 414.0], [23.6, 414.0], [23.7, 414.0], [23.8, 414.0], [23.9, 414.0], [24.0, 416.0], [24.1, 416.0], [24.2, 416.0], [24.3, 416.0], [24.4, 416.0], [24.5, 416.0], [24.6, 416.0], [24.7, 416.0], [24.8, 416.0], [24.9, 416.0], [25.0, 416.0], [25.1, 416.0], [25.2, 416.0], [25.3, 416.0], [25.4, 416.0], [25.5, 421.0], [25.6, 421.0], [25.7, 421.0], [25.8, 421.0], [25.9, 421.0], [26.0, 426.0], [26.1, 426.0], [26.2, 426.0], [26.3, 426.0], [26.4, 426.0], [26.5, 428.0], [26.6, 428.0], [26.7, 428.0], [26.8, 428.0], [26.9, 428.0], [27.0, 428.0], [27.1, 428.0], [27.2, 428.0], [27.3, 428.0], [27.4, 428.0], [27.5, 431.0], [27.6, 431.0], [27.7, 431.0], [27.8, 431.0], [27.9, 431.0], [28.0, 432.0], [28.1, 432.0], [28.2, 432.0], [28.3, 432.0], [28.4, 432.0], [28.5, 435.0], [28.6, 435.0], [28.7, 435.0], [28.8, 435.0], [28.9, 435.0], [29.0, 435.0], [29.1, 435.0], [29.2, 435.0], [29.3, 435.0], [29.4, 435.0], [29.5, 439.0], [29.6, 439.0], [29.7, 439.0], [29.8, 439.0], [29.9, 439.0], [30.0, 439.0], [30.1, 439.0], [30.2, 439.0], [30.3, 439.0], [30.4, 439.0], [30.5, 440.0], [30.6, 440.0], [30.7, 440.0], [30.8, 440.0], [30.9, 440.0], [31.0, 440.0], [31.1, 440.0], [31.2, 440.0], [31.3, 440.0], [31.4, 440.0], [31.5, 444.0], [31.6, 444.0], [31.7, 444.0], [31.8, 444.0], [31.9, 444.0], [32.0, 445.0], [32.1, 445.0], [32.2, 445.0], [32.3, 445.0], [32.4, 445.0], [32.5, 446.0], [32.6, 446.0], [32.7, 446.0], [32.8, 446.0], [32.9, 446.0], [33.0, 453.0], [33.1, 453.0], [33.2, 453.0], [33.3, 453.0], [33.4, 453.0], [33.5, 454.0], [33.6, 454.0], [33.7, 454.0], [33.8, 454.0], [33.9, 454.0], [34.0, 455.0], [34.1, 455.0], [34.2, 455.0], [34.3, 455.0], [34.4, 455.0], [34.5, 457.0], [34.6, 457.0], [34.7, 457.0], [34.8, 457.0], [34.9, 457.0], [35.0, 464.0], [35.1, 464.0], [35.2, 464.0], [35.3, 464.0], [35.4, 464.0], [35.5, 465.0], [35.6, 465.0], [35.7, 465.0], [35.8, 465.0], [35.9, 465.0], [36.0, 466.0], [36.1, 466.0], [36.2, 466.0], [36.3, 466.0], [36.4, 466.0], [36.5, 468.0], [36.6, 468.0], [36.7, 468.0], [36.8, 468.0], [36.9, 468.0], [37.0, 471.0], [37.1, 471.0], [37.2, 471.0], [37.3, 471.0], [37.4, 471.0], [37.5, 472.0], [37.6, 472.0], [37.7, 472.0], [37.8, 472.0], [37.9, 472.0], [38.0, 473.0], [38.1, 473.0], [38.2, 473.0], [38.3, 473.0], [38.4, 473.0], [38.5, 473.0], [38.6, 473.0], [38.7, 473.0], [38.8, 473.0], [38.9, 473.0], [39.0, 475.0], [39.1, 475.0], [39.2, 475.0], [39.3, 475.0], [39.4, 475.0], [39.5, 476.0], [39.6, 476.0], [39.7, 476.0], [39.8, 476.0], [39.9, 476.0], [40.0, 477.0], [40.1, 477.0], [40.2, 477.0], [40.3, 477.0], [40.4, 477.0], [40.5, 477.0], [40.6, 477.0], [40.7, 477.0], [40.8, 477.0], [40.9, 477.0], [41.0, 478.0], [41.1, 478.0], [41.2, 478.0], [41.3, 478.0], [41.4, 478.0], [41.5, 479.0], [41.6, 479.0], [41.7, 479.0], [41.8, 479.0], [41.9, 479.0], [42.0, 480.0], [42.1, 480.0], [42.2, 480.0], [42.3, 480.0], [42.4, 480.0], [42.5, 480.0], [42.6, 480.0], [42.7, 480.0], [42.8, 480.0], [42.9, 480.0], [43.0, 483.0], [43.1, 483.0], [43.2, 483.0], [43.3, 483.0], [43.4, 483.0], [43.5, 485.0], [43.6, 485.0], [43.7, 485.0], [43.8, 485.0], [43.9, 485.0], [44.0, 489.0], [44.1, 489.0], [44.2, 489.0], [44.3, 489.0], [44.4, 489.0], [44.5, 490.0], [44.6, 490.0], [44.7, 490.0], [44.8, 490.0], [44.9, 490.0], [45.0, 491.0], [45.1, 491.0], [45.2, 491.0], [45.3, 491.0], [45.4, 491.0], [45.5, 492.0], [45.6, 492.0], [45.7, 492.0], [45.8, 492.0], [45.9, 492.0], [46.0, 497.0], [46.1, 497.0], [46.2, 497.0], [46.3, 497.0], [46.4, 497.0], [46.5, 499.0], [46.6, 499.0], [46.7, 499.0], [46.8, 499.0], [46.9, 499.0], [47.0, 499.0], [47.1, 499.0], [47.2, 499.0], [47.3, 499.0], [47.4, 499.0], [47.5, 502.0], [47.6, 502.0], [47.7, 502.0], [47.8, 502.0], [47.9, 502.0], [48.0, 503.0], [48.1, 503.0], [48.2, 503.0], [48.3, 503.0], [48.4, 503.0], [48.5, 504.0], [48.6, 504.0], [48.7, 504.0], [48.8, 504.0], [48.9, 504.0], [49.0, 504.0], [49.1, 504.0], [49.2, 504.0], [49.3, 504.0], [49.4, 504.0], [49.5, 508.0], [49.6, 508.0], [49.7, 508.0], [49.8, 508.0], [49.9, 508.0], [50.0, 509.0], [50.1, 509.0], [50.2, 509.0], [50.3, 509.0], [50.4, 509.0], [50.5, 509.0], [50.6, 509.0], [50.7, 509.0], [50.8, 509.0], [50.9, 509.0], [51.0, 511.0], [51.1, 511.0], [51.2, 511.0], [51.3, 511.0], [51.4, 511.0], [51.5, 511.0], [51.6, 511.0], [51.7, 511.0], [51.8, 511.0], [51.9, 511.0], [52.0, 511.0], [52.1, 511.0], [52.2, 511.0], [52.3, 511.0], [52.4, 511.0], [52.5, 514.0], [52.6, 514.0], [52.7, 514.0], [52.8, 514.0], [52.9, 514.0], [53.0, 517.0], [53.1, 517.0], [53.2, 517.0], [53.3, 517.0], [53.4, 517.0], [53.5, 525.0], [53.6, 525.0], [53.7, 525.0], [53.8, 525.0], [53.9, 525.0], [54.0, 525.0], [54.1, 525.0], [54.2, 525.0], [54.3, 525.0], [54.4, 525.0], [54.5, 527.0], [54.6, 527.0], [54.7, 527.0], [54.8, 527.0], [54.9, 527.0], [55.0, 528.0], [55.1, 528.0], [55.2, 528.0], [55.3, 528.0], [55.4, 528.0], [55.5, 530.0], [55.6, 530.0], [55.7, 530.0], [55.8, 530.0], [55.9, 530.0], [56.0, 535.0], [56.1, 535.0], [56.2, 535.0], [56.3, 535.0], [56.4, 535.0], [56.5, 535.0], [56.6, 535.0], [56.7, 535.0], [56.8, 535.0], [56.9, 535.0], [57.0, 539.0], [57.1, 539.0], [57.2, 539.0], [57.3, 539.0], [57.4, 539.0], [57.5, 539.0], [57.6, 539.0], [57.7, 539.0], [57.8, 539.0], [57.9, 539.0], [58.0, 540.0], [58.1, 540.0], [58.2, 540.0], [58.3, 540.0], [58.4, 540.0], [58.5, 540.0], [58.6, 540.0], [58.7, 540.0], [58.8, 540.0], [58.9, 540.0], [59.0, 541.0], [59.1, 541.0], [59.2, 541.0], [59.3, 541.0], [59.4, 541.0], [59.5, 544.0], [59.6, 544.0], [59.7, 544.0], [59.8, 544.0], [59.9, 544.0], [60.0, 544.0], [60.1, 544.0], [60.2, 544.0], [60.3, 544.0], [60.4, 544.0], [60.5, 544.0], [60.6, 544.0], [60.7, 544.0], [60.8, 544.0], [60.9, 544.0], [61.0, 545.0], [61.1, 545.0], [61.2, 545.0], [61.3, 545.0], [61.4, 545.0], [61.5, 545.0], [61.6, 545.0], [61.7, 545.0], [61.8, 545.0], [61.9, 545.0], [62.0, 547.0], [62.1, 547.0], [62.2, 547.0], [62.3, 547.0], [62.4, 547.0], [62.5, 548.0], [62.6, 548.0], [62.7, 548.0], [62.8, 548.0], [62.9, 548.0], [63.0, 550.0], [63.1, 550.0], [63.2, 550.0], [63.3, 550.0], [63.4, 550.0], [63.5, 550.0], [63.6, 550.0], [63.7, 550.0], [63.8, 550.0], [63.9, 550.0], [64.0, 551.0], [64.1, 551.0], [64.2, 551.0], [64.3, 551.0], [64.4, 551.0], [64.5, 552.0], [64.6, 552.0], [64.7, 552.0], [64.8, 552.0], [64.9, 552.0], [65.0, 552.0], [65.1, 552.0], [65.2, 552.0], [65.3, 552.0], [65.4, 552.0], [65.5, 553.0], [65.6, 553.0], [65.7, 553.0], [65.8, 553.0], [65.9, 553.0], [66.0, 554.0], [66.1, 554.0], [66.2, 554.0], [66.3, 554.0], [66.4, 554.0], [66.5, 557.0], [66.6, 557.0], [66.7, 557.0], [66.8, 557.0], [66.9, 557.0], [67.0, 558.0], [67.1, 558.0], [67.2, 558.0], [67.3, 558.0], [67.4, 558.0], [67.5, 558.0], [67.6, 558.0], [67.7, 558.0], [67.8, 558.0], [67.9, 558.0], [68.0, 559.0], [68.1, 559.0], [68.2, 559.0], [68.3, 559.0], [68.4, 559.0], [68.5, 561.0], [68.6, 561.0], [68.7, 561.0], [68.8, 561.0], [68.9, 561.0], [69.0, 561.0], [69.1, 561.0], [69.2, 561.0], [69.3, 561.0], [69.4, 561.0], [69.5, 564.0], [69.6, 564.0], [69.7, 564.0], [69.8, 564.0], [69.9, 564.0], [70.0, 565.0], [70.1, 565.0], [70.2, 565.0], [70.3, 565.0], [70.4, 565.0], [70.5, 569.0], [70.6, 569.0], [70.7, 569.0], [70.8, 569.0], [70.9, 569.0], [71.0, 571.0], [71.1, 571.0], [71.2, 571.0], [71.3, 571.0], [71.4, 571.0], [71.5, 580.0], [71.6, 580.0], [71.7, 580.0], [71.8, 580.0], [71.9, 580.0], [72.0, 585.0], [72.1, 585.0], [72.2, 585.0], [72.3, 585.0], [72.4, 585.0], [72.5, 586.0], [72.6, 586.0], [72.7, 586.0], [72.8, 586.0], [72.9, 586.0], [73.0, 590.0], [73.1, 590.0], [73.2, 590.0], [73.3, 590.0], [73.4, 590.0], [73.5, 590.0], [73.6, 590.0], [73.7, 590.0], [73.8, 590.0], [73.9, 590.0], [74.0, 591.0], [74.1, 591.0], [74.2, 591.0], [74.3, 591.0], [74.4, 591.0], [74.5, 593.0], [74.6, 593.0], [74.7, 593.0], [74.8, 593.0], [74.9, 593.0], [75.0, 594.0], [75.1, 594.0], [75.2, 594.0], [75.3, 594.0], [75.4, 594.0], [75.5, 594.0], [75.6, 594.0], [75.7, 594.0], [75.8, 594.0], [75.9, 594.0], [76.0, 595.0], [76.1, 595.0], [76.2, 595.0], [76.3, 595.0], [76.4, 595.0], [76.5, 595.0], [76.6, 595.0], [76.7, 595.0], [76.8, 595.0], [76.9, 595.0], [77.0, 596.0], [77.1, 596.0], [77.2, 596.0], [77.3, 596.0], [77.4, 596.0], [77.5, 597.0], [77.6, 597.0], [77.7, 597.0], [77.8, 597.0], [77.9, 597.0], [78.0, 599.0], [78.1, 599.0], [78.2, 599.0], [78.3, 599.0], [78.4, 599.0], [78.5, 602.0], [78.6, 602.0], [78.7, 602.0], [78.8, 602.0], [78.9, 602.0], [79.0, 603.0], [79.1, 603.0], [79.2, 603.0], [79.3, 603.0], [79.4, 603.0], [79.5, 603.0], [79.6, 603.0], [79.7, 603.0], [79.8, 603.0], [79.9, 603.0], [80.0, 603.0], [80.1, 603.0], [80.2, 603.0], [80.3, 603.0], [80.4, 603.0], [80.5, 606.0], [80.6, 606.0], [80.7, 606.0], [80.8, 606.0], [80.9, 606.0], [81.0, 608.0], [81.1, 608.0], [81.2, 608.0], [81.3, 608.0], [81.4, 608.0], [81.5, 608.0], [81.6, 608.0], [81.7, 608.0], [81.8, 608.0], [81.9, 608.0], [82.0, 614.0], [82.1, 614.0], [82.2, 614.0], [82.3, 614.0], [82.4, 614.0], [82.5, 614.0], [82.6, 614.0], [82.7, 614.0], [82.8, 614.0], [82.9, 614.0], [83.0, 621.0], [83.1, 621.0], [83.2, 621.0], [83.3, 621.0], [83.4, 621.0], [83.5, 623.0], [83.6, 623.0], [83.7, 623.0], [83.8, 623.0], [83.9, 623.0], [84.0, 624.0], [84.1, 624.0], [84.2, 624.0], [84.3, 624.0], [84.4, 624.0], [84.5, 625.0], [84.6, 625.0], [84.7, 625.0], [84.8, 625.0], [84.9, 625.0], [85.0, 627.0], [85.1, 627.0], [85.2, 627.0], [85.3, 627.0], [85.4, 627.0], [85.5, 627.0], [85.6, 627.0], [85.7, 627.0], [85.8, 627.0], [85.9, 627.0], [86.0, 633.0], [86.1, 633.0], [86.2, 633.0], [86.3, 633.0], [86.4, 633.0], [86.5, 640.0], [86.6, 640.0], [86.7, 640.0], [86.8, 640.0], [86.9, 640.0], [87.0, 640.0], [87.1, 640.0], [87.2, 640.0], [87.3, 640.0], [87.4, 640.0], [87.5, 644.0], [87.6, 644.0], [87.7, 644.0], [87.8, 644.0], [87.9, 644.0], [88.0, 646.0], [88.1, 646.0], [88.2, 646.0], [88.3, 646.0], [88.4, 646.0], [88.5, 651.0], [88.6, 651.0], [88.7, 651.0], [88.8, 651.0], [88.9, 651.0], [89.0, 653.0], [89.1, 653.0], [89.2, 653.0], [89.3, 653.0], [89.4, 653.0], [89.5, 654.0], [89.6, 654.0], [89.7, 654.0], [89.8, 654.0], [89.9, 654.0], [90.0, 655.0], [90.1, 655.0], [90.2, 655.0], [90.3, 655.0], [90.4, 655.0], [90.5, 659.0], [90.6, 659.0], [90.7, 659.0], [90.8, 659.0], [90.9, 659.0], [91.0, 659.0], [91.1, 659.0], [91.2, 659.0], [91.3, 659.0], [91.4, 659.0], [91.5, 660.0], [91.6, 660.0], [91.7, 660.0], [91.8, 660.0], [91.9, 660.0], [92.0, 661.0], [92.1, 661.0], [92.2, 661.0], [92.3, 661.0], [92.4, 661.0], [92.5, 662.0], [92.6, 662.0], [92.7, 662.0], [92.8, 662.0], [92.9, 662.0], [93.0, 663.0], [93.1, 663.0], [93.2, 663.0], [93.3, 663.0], [93.4, 663.0], [93.5, 667.0], [93.6, 667.0], [93.7, 667.0], [93.8, 667.0], [93.9, 667.0], [94.0, 684.0], [94.1, 684.0], [94.2, 684.0], [94.3, 684.0], [94.4, 684.0], [94.5, 685.0], [94.6, 685.0], [94.7, 685.0], [94.8, 685.0], [94.9, 685.0], [95.0, 697.0], [95.1, 697.0], [95.2, 697.0], [95.3, 697.0], [95.4, 697.0], [95.5, 705.0], [95.6, 705.0], [95.7, 705.0], [95.8, 705.0], [95.9, 705.0], [96.0, 707.0], [96.1, 707.0], [96.2, 707.0], [96.3, 707.0], [96.4, 707.0], [96.5, 719.0], [96.6, 719.0], [96.7, 719.0], [96.8, 719.0], [96.9, 719.0], [97.0, 719.0], [97.1, 719.0], [97.2, 719.0], [97.3, 719.0], [97.4, 719.0], [97.5, 736.0], [97.6, 736.0], [97.7, 736.0], [97.8, 736.0], [97.9, 736.0], [98.0, 736.0], [98.1, 736.0], [98.2, 736.0], [98.3, 736.0], [98.4, 736.0], [98.5, 748.0], [98.6, 748.0], [98.7, 748.0], [98.8, 748.0], [98.9, 748.0], [99.0, 779.0], [99.1, 779.0], [99.2, 779.0], [99.3, 779.0], [99.4, 779.0], [99.5, 807.0], [99.6, 807.0], [99.7, 807.0], [99.8, 807.0], [99.9, 807.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 335.0], [0.1, 335.0], [0.2, 335.0], [0.3, 335.0], [0.4, 335.0], [0.5, 356.0], [0.6, 356.0], [0.7, 356.0], [0.8, 356.0], [0.9, 356.0], [1.0, 357.0], [1.1, 357.0], [1.2, 357.0], [1.3, 357.0], [1.4, 357.0], [1.5, 388.0], [1.6, 388.0], [1.7, 388.0], [1.8, 388.0], [1.9, 388.0], [2.0, 400.0], [2.1, 400.0], [2.2, 400.0], [2.3, 400.0], [2.4, 400.0], [2.5, 406.0], [2.6, 406.0], [2.7, 406.0], [2.8, 406.0], [2.9, 406.0], [3.0, 406.0], [3.1, 406.0], [3.2, 406.0], [3.3, 406.0], [3.4, 406.0], [3.5, 407.0], [3.6, 407.0], [3.7, 407.0], [3.8, 407.0], [3.9, 407.0], [4.0, 408.0], [4.1, 408.0], [4.2, 408.0], [4.3, 408.0], [4.4, 408.0], [4.5, 409.0], [4.6, 409.0], [4.7, 409.0], [4.8, 409.0], [4.9, 409.0], [5.0, 415.0], [5.1, 415.0], [5.2, 415.0], [5.3, 415.0], [5.4, 415.0], [5.5, 418.0], [5.6, 418.0], [5.7, 418.0], [5.8, 418.0], [5.9, 418.0], [6.0, 418.0], [6.1, 418.0], [6.2, 418.0], [6.3, 418.0], [6.4, 418.0], [6.5, 423.0], [6.6, 423.0], [6.7, 423.0], [6.8, 423.0], [6.9, 423.0], [7.0, 429.0], [7.1, 429.0], [7.2, 429.0], [7.3, 429.0], [7.4, 429.0], [7.5, 429.0], [7.6, 429.0], [7.7, 429.0], [7.8, 429.0], [7.9, 429.0], [8.0, 430.0], [8.1, 430.0], [8.2, 430.0], [8.3, 430.0], [8.4, 430.0], [8.5, 432.0], [8.6, 432.0], [8.7, 432.0], [8.8, 432.0], [8.9, 432.0], [9.0, 433.0], [9.1, 433.0], [9.2, 433.0], [9.3, 433.0], [9.4, 433.0], [9.5, 436.0], [9.6, 436.0], [9.7, 436.0], [9.8, 436.0], [9.9, 436.0], [10.0, 436.0], [10.1, 436.0], [10.2, 436.0], [10.3, 436.0], [10.4, 436.0], [10.5, 438.0], [10.6, 438.0], [10.7, 438.0], [10.8, 438.0], [10.9, 438.0], [11.0, 438.0], [11.1, 438.0], [11.2, 438.0], [11.3, 438.0], [11.4, 438.0], [11.5, 440.0], [11.6, 440.0], [11.7, 440.0], [11.8, 440.0], [11.9, 440.0], [12.0, 441.0], [12.1, 441.0], [12.2, 441.0], [12.3, 441.0], [12.4, 441.0], [12.5, 442.0], [12.6, 442.0], [12.7, 442.0], [12.8, 442.0], [12.9, 442.0], [13.0, 446.0], [13.1, 446.0], [13.2, 446.0], [13.3, 446.0], [13.4, 446.0], [13.5, 448.0], [13.6, 448.0], [13.7, 448.0], [13.8, 448.0], [13.9, 448.0], [14.0, 450.0], [14.1, 450.0], [14.2, 450.0], [14.3, 450.0], [14.4, 450.0], [14.5, 451.0], [14.6, 451.0], [14.7, 451.0], [14.8, 451.0], [14.9, 451.0], [15.0, 451.0], [15.1, 451.0], [15.2, 451.0], [15.3, 451.0], [15.4, 451.0], [15.5, 454.0], [15.6, 454.0], [15.7, 454.0], [15.8, 454.0], [15.9, 454.0], [16.0, 456.0], [16.1, 456.0], [16.2, 456.0], [16.3, 456.0], [16.4, 456.0], [16.5, 456.0], [16.6, 456.0], [16.7, 456.0], [16.8, 456.0], [16.9, 456.0], [17.0, 457.0], [17.1, 457.0], [17.2, 457.0], [17.3, 457.0], [17.4, 457.0], [17.5, 459.0], [17.6, 459.0], [17.7, 459.0], [17.8, 459.0], [17.9, 459.0], [18.0, 460.0], [18.1, 460.0], [18.2, 460.0], [18.3, 460.0], [18.4, 460.0], [18.5, 461.0], [18.6, 461.0], [18.7, 461.0], [18.8, 461.0], [18.9, 461.0], [19.0, 461.0], [19.1, 461.0], [19.2, 461.0], [19.3, 461.0], [19.4, 461.0], [19.5, 461.0], [19.6, 461.0], [19.7, 461.0], [19.8, 461.0], [19.9, 461.0], [20.0, 463.0], [20.1, 463.0], [20.2, 463.0], [20.3, 463.0], [20.4, 463.0], [20.5, 463.0], [20.6, 463.0], [20.7, 463.0], [20.8, 463.0], [20.9, 463.0], [21.0, 464.0], [21.1, 464.0], [21.2, 464.0], [21.3, 464.0], [21.4, 464.0], [21.5, 465.0], [21.6, 465.0], [21.7, 465.0], [21.8, 465.0], [21.9, 465.0], [22.0, 467.0], [22.1, 467.0], [22.2, 467.0], [22.3, 467.0], [22.4, 467.0], [22.5, 470.0], [22.6, 470.0], [22.7, 470.0], [22.8, 470.0], [22.9, 470.0], [23.0, 472.0], [23.1, 472.0], [23.2, 472.0], [23.3, 472.0], [23.4, 472.0], [23.5, 472.0], [23.6, 472.0], [23.7, 472.0], [23.8, 472.0], [23.9, 472.0], [24.0, 475.0], [24.1, 475.0], [24.2, 475.0], [24.3, 475.0], [24.4, 475.0], [24.5, 476.0], [24.6, 476.0], [24.7, 476.0], [24.8, 476.0], [24.9, 476.0], [25.0, 477.0], [25.1, 477.0], [25.2, 477.0], [25.3, 477.0], [25.4, 477.0], [25.5, 477.0], [25.6, 477.0], [25.7, 477.0], [25.8, 477.0], [25.9, 477.0], [26.0, 483.0], [26.1, 483.0], [26.2, 483.0], [26.3, 483.0], [26.4, 483.0], [26.5, 484.0], [26.6, 484.0], [26.7, 484.0], [26.8, 484.0], [26.9, 484.0], [27.0, 486.0], [27.1, 486.0], [27.2, 486.0], [27.3, 486.0], [27.4, 486.0], [27.5, 486.0], [27.6, 486.0], [27.7, 486.0], [27.8, 486.0], [27.9, 486.0], [28.0, 488.0], [28.1, 488.0], [28.2, 488.0], [28.3, 488.0], [28.4, 488.0], [28.5, 489.0], [28.6, 489.0], [28.7, 489.0], [28.8, 489.0], [28.9, 489.0], [29.0, 489.0], [29.1, 489.0], [29.2, 489.0], [29.3, 489.0], [29.4, 489.0], [29.5, 489.0], [29.6, 489.0], [29.7, 489.0], [29.8, 489.0], [29.9, 489.0], [30.0, 491.0], [30.1, 491.0], [30.2, 491.0], [30.3, 491.0], [30.4, 491.0], [30.5, 491.0], [30.6, 491.0], [30.7, 491.0], [30.8, 491.0], [30.9, 491.0], [31.0, 492.0], [31.1, 492.0], [31.2, 492.0], [31.3, 492.0], [31.4, 492.0], [31.5, 493.0], [31.6, 493.0], [31.7, 493.0], [31.8, 493.0], [31.9, 493.0], [32.0, 493.0], [32.1, 493.0], [32.2, 493.0], [32.3, 493.0], [32.4, 493.0], [32.5, 494.0], [32.6, 494.0], [32.7, 494.0], [32.8, 494.0], [32.9, 494.0], [33.0, 496.0], [33.1, 496.0], [33.2, 496.0], [33.3, 496.0], [33.4, 496.0], [33.5, 496.0], [33.6, 496.0], [33.7, 496.0], [33.8, 496.0], [33.9, 496.0], [34.0, 499.0], [34.1, 499.0], [34.2, 499.0], [34.3, 499.0], [34.4, 499.0], [34.5, 503.0], [34.6, 503.0], [34.7, 503.0], [34.8, 503.0], [34.9, 503.0], [35.0, 504.0], [35.1, 504.0], [35.2, 504.0], [35.3, 504.0], [35.4, 504.0], [35.5, 508.0], [35.6, 508.0], [35.7, 508.0], [35.8, 508.0], [35.9, 508.0], [36.0, 509.0], [36.1, 509.0], [36.2, 509.0], [36.3, 509.0], [36.4, 509.0], [36.5, 510.0], [36.6, 510.0], [36.7, 510.0], [36.8, 510.0], [36.9, 510.0], [37.0, 511.0], [37.1, 511.0], [37.2, 511.0], [37.3, 511.0], [37.4, 511.0], [37.5, 511.0], [37.6, 511.0], [37.7, 511.0], [37.8, 511.0], [37.9, 511.0], [38.0, 516.0], [38.1, 516.0], [38.2, 516.0], [38.3, 516.0], [38.4, 516.0], [38.5, 516.0], [38.6, 516.0], [38.7, 516.0], [38.8, 516.0], [38.9, 516.0], [39.0, 516.0], [39.1, 516.0], [39.2, 516.0], [39.3, 516.0], [39.4, 516.0], [39.5, 516.0], [39.6, 516.0], [39.7, 516.0], [39.8, 516.0], [39.9, 516.0], [40.0, 518.0], [40.1, 518.0], [40.2, 518.0], [40.3, 518.0], [40.4, 518.0], [40.5, 518.0], [40.6, 518.0], [40.7, 518.0], [40.8, 518.0], [40.9, 518.0], [41.0, 518.0], [41.1, 518.0], [41.2, 518.0], [41.3, 518.0], [41.4, 518.0], [41.5, 520.0], [41.6, 520.0], [41.7, 520.0], [41.8, 520.0], [41.9, 520.0], [42.0, 522.0], [42.1, 522.0], [42.2, 522.0], [42.3, 522.0], [42.4, 522.0], [42.5, 523.0], [42.6, 523.0], [42.7, 523.0], [42.8, 523.0], [42.9, 523.0], [43.0, 524.0], [43.1, 524.0], [43.2, 524.0], [43.3, 524.0], [43.4, 524.0], [43.5, 525.0], [43.6, 525.0], [43.7, 525.0], [43.8, 525.0], [43.9, 525.0], [44.0, 526.0], [44.1, 526.0], [44.2, 526.0], [44.3, 526.0], [44.4, 526.0], [44.5, 526.0], [44.6, 526.0], [44.7, 526.0], [44.8, 526.0], [44.9, 526.0], [45.0, 527.0], [45.1, 527.0], [45.2, 527.0], [45.3, 527.0], [45.4, 527.0], [45.5, 529.0], [45.6, 529.0], [45.7, 529.0], [45.8, 529.0], [45.9, 529.0], [46.0, 532.0], [46.1, 532.0], [46.2, 532.0], [46.3, 532.0], [46.4, 532.0], [46.5, 533.0], [46.6, 533.0], [46.7, 533.0], [46.8, 533.0], [46.9, 533.0], [47.0, 535.0], [47.1, 535.0], [47.2, 535.0], [47.3, 535.0], [47.4, 535.0], [47.5, 536.0], [47.6, 536.0], [47.7, 536.0], [47.8, 536.0], [47.9, 536.0], [48.0, 537.0], [48.1, 537.0], [48.2, 537.0], [48.3, 537.0], [48.4, 537.0], [48.5, 538.0], [48.6, 538.0], [48.7, 538.0], [48.8, 538.0], [48.9, 538.0], [49.0, 539.0], [49.1, 539.0], [49.2, 539.0], [49.3, 539.0], [49.4, 539.0], [49.5, 540.0], [49.6, 540.0], [49.7, 540.0], [49.8, 540.0], [49.9, 540.0], [50.0, 540.0], [50.1, 540.0], [50.2, 540.0], [50.3, 540.0], [50.4, 540.0], [50.5, 541.0], [50.6, 541.0], [50.7, 541.0], [50.8, 541.0], [50.9, 541.0], [51.0, 542.0], [51.1, 542.0], [51.2, 542.0], [51.3, 542.0], [51.4, 542.0], [51.5, 545.0], [51.6, 545.0], [51.7, 545.0], [51.8, 545.0], [51.9, 545.0], [52.0, 545.0], [52.1, 545.0], [52.2, 545.0], [52.3, 545.0], [52.4, 545.0], [52.5, 547.0], [52.6, 547.0], [52.7, 547.0], [52.8, 547.0], [52.9, 547.0], [53.0, 547.0], [53.1, 547.0], [53.2, 547.0], [53.3, 547.0], [53.4, 547.0], [53.5, 548.0], [53.6, 548.0], [53.7, 548.0], [53.8, 548.0], [53.9, 548.0], [54.0, 548.0], [54.1, 548.0], [54.2, 548.0], [54.3, 548.0], [54.4, 548.0], [54.5, 549.0], [54.6, 549.0], [54.7, 549.0], [54.8, 549.0], [54.9, 549.0], [55.0, 549.0], [55.1, 549.0], [55.2, 549.0], [55.3, 549.0], [55.4, 549.0], [55.5, 550.0], [55.6, 550.0], [55.7, 550.0], [55.8, 550.0], [55.9, 550.0], [56.0, 550.0], [56.1, 550.0], [56.2, 550.0], [56.3, 550.0], [56.4, 550.0], [56.5, 551.0], [56.6, 551.0], [56.7, 551.0], [56.8, 551.0], [56.9, 551.0], [57.0, 555.0], [57.1, 555.0], [57.2, 555.0], [57.3, 555.0], [57.4, 555.0], [57.5, 556.0], [57.6, 556.0], [57.7, 556.0], [57.8, 556.0], [57.9, 556.0], [58.0, 556.0], [58.1, 556.0], [58.2, 556.0], [58.3, 556.0], [58.4, 556.0], [58.5, 557.0], [58.6, 557.0], [58.7, 557.0], [58.8, 557.0], [58.9, 557.0], [59.0, 558.0], [59.1, 558.0], [59.2, 558.0], [59.3, 558.0], [59.4, 558.0], [59.5, 559.0], [59.6, 559.0], [59.7, 559.0], [59.8, 559.0], [59.9, 559.0], [60.0, 560.0], [60.1, 560.0], [60.2, 560.0], [60.3, 560.0], [60.4, 560.0], [60.5, 560.0], [60.6, 560.0], [60.7, 560.0], [60.8, 560.0], [60.9, 560.0], [61.0, 562.0], [61.1, 562.0], [61.2, 562.0], [61.3, 562.0], [61.4, 562.0], [61.5, 564.0], [61.6, 564.0], [61.7, 564.0], [61.8, 564.0], [61.9, 564.0], [62.0, 565.0], [62.1, 565.0], [62.2, 565.0], [62.3, 565.0], [62.4, 565.0], [62.5, 566.0], [62.6, 566.0], [62.7, 566.0], [62.8, 566.0], [62.9, 566.0], [63.0, 567.0], [63.1, 567.0], [63.2, 567.0], [63.3, 567.0], [63.4, 567.0], [63.5, 569.0], [63.6, 569.0], [63.7, 569.0], [63.8, 569.0], [63.9, 569.0], [64.0, 569.0], [64.1, 569.0], [64.2, 569.0], [64.3, 569.0], [64.4, 569.0], [64.5, 571.0], [64.6, 571.0], [64.7, 571.0], [64.8, 571.0], [64.9, 571.0], [65.0, 573.0], [65.1, 573.0], [65.2, 573.0], [65.3, 573.0], [65.4, 573.0], [65.5, 573.0], [65.6, 573.0], [65.7, 573.0], [65.8, 573.0], [65.9, 573.0], [66.0, 574.0], [66.1, 574.0], [66.2, 574.0], [66.3, 574.0], [66.4, 574.0], [66.5, 575.0], [66.6, 575.0], [66.7, 575.0], [66.8, 575.0], [66.9, 575.0], [67.0, 575.0], [67.1, 575.0], [67.2, 575.0], [67.3, 575.0], [67.4, 575.0], [67.5, 575.0], [67.6, 575.0], [67.7, 575.0], [67.8, 575.0], [67.9, 575.0], [68.0, 576.0], [68.1, 576.0], [68.2, 576.0], [68.3, 576.0], [68.4, 576.0], [68.5, 577.0], [68.6, 577.0], [68.7, 577.0], [68.8, 577.0], [68.9, 577.0], [69.0, 580.0], [69.1, 580.0], [69.2, 580.0], [69.3, 580.0], [69.4, 580.0], [69.5, 580.0], [69.6, 580.0], [69.7, 580.0], [69.8, 580.0], [69.9, 580.0], [70.0, 581.0], [70.1, 581.0], [70.2, 581.0], [70.3, 581.0], [70.4, 581.0], [70.5, 583.0], [70.6, 583.0], [70.7, 583.0], [70.8, 583.0], [70.9, 583.0], [71.0, 584.0], [71.1, 584.0], [71.2, 584.0], [71.3, 584.0], [71.4, 584.0], [71.5, 585.0], [71.6, 585.0], [71.7, 585.0], [71.8, 585.0], [71.9, 585.0], [72.0, 585.0], [72.1, 585.0], [72.2, 585.0], [72.3, 585.0], [72.4, 585.0], [72.5, 586.0], [72.6, 586.0], [72.7, 586.0], [72.8, 586.0], [72.9, 586.0], [73.0, 586.0], [73.1, 586.0], [73.2, 586.0], [73.3, 586.0], [73.4, 586.0], [73.5, 587.0], [73.6, 587.0], [73.7, 587.0], [73.8, 587.0], [73.9, 587.0], [74.0, 588.0], [74.1, 588.0], [74.2, 588.0], [74.3, 588.0], [74.4, 588.0], [74.5, 590.0], [74.6, 590.0], [74.7, 590.0], [74.8, 590.0], [74.9, 590.0], [75.0, 590.0], [75.1, 590.0], [75.2, 590.0], [75.3, 590.0], [75.4, 590.0], [75.5, 591.0], [75.6, 591.0], [75.7, 591.0], [75.8, 591.0], [75.9, 591.0], [76.0, 591.0], [76.1, 591.0], [76.2, 591.0], [76.3, 591.0], [76.4, 591.0], [76.5, 593.0], [76.6, 593.0], [76.7, 593.0], [76.8, 593.0], [76.9, 593.0], [77.0, 593.0], [77.1, 593.0], [77.2, 593.0], [77.3, 593.0], [77.4, 593.0], [77.5, 594.0], [77.6, 594.0], [77.7, 594.0], [77.8, 594.0], [77.9, 594.0], [78.0, 596.0], [78.1, 596.0], [78.2, 596.0], [78.3, 596.0], [78.4, 596.0], [78.5, 599.0], [78.6, 599.0], [78.7, 599.0], [78.8, 599.0], [78.9, 599.0], [79.0, 600.0], [79.1, 600.0], [79.2, 600.0], [79.3, 600.0], [79.4, 600.0], [79.5, 602.0], [79.6, 602.0], [79.7, 602.0], [79.8, 602.0], [79.9, 602.0], [80.0, 602.0], [80.1, 602.0], [80.2, 602.0], [80.3, 602.0], [80.4, 602.0], [80.5, 603.0], [80.6, 603.0], [80.7, 603.0], [80.8, 603.0], [80.9, 603.0], [81.0, 606.0], [81.1, 606.0], [81.2, 606.0], [81.3, 606.0], [81.4, 606.0], [81.5, 606.0], [81.6, 606.0], [81.7, 606.0], [81.8, 606.0], [81.9, 606.0], [82.0, 607.0], [82.1, 607.0], [82.2, 607.0], [82.3, 607.0], [82.4, 607.0], [82.5, 607.0], [82.6, 607.0], [82.7, 607.0], [82.8, 607.0], [82.9, 607.0], [83.0, 611.0], [83.1, 611.0], [83.2, 611.0], [83.3, 611.0], [83.4, 611.0], [83.5, 613.0], [83.6, 613.0], [83.7, 613.0], [83.8, 613.0], [83.9, 613.0], [84.0, 613.0], [84.1, 613.0], [84.2, 613.0], [84.3, 613.0], [84.4, 613.0], [84.5, 615.0], [84.6, 615.0], [84.7, 615.0], [84.8, 615.0], [84.9, 615.0], [85.0, 618.0], [85.1, 618.0], [85.2, 618.0], [85.3, 618.0], [85.4, 618.0], [85.5, 624.0], [85.6, 624.0], [85.7, 624.0], [85.8, 624.0], [85.9, 624.0], [86.0, 626.0], [86.1, 626.0], [86.2, 626.0], [86.3, 626.0], [86.4, 626.0], [86.5, 630.0], [86.6, 630.0], [86.7, 630.0], [86.8, 630.0], [86.9, 630.0], [87.0, 630.0], [87.1, 630.0], [87.2, 630.0], [87.3, 630.0], [87.4, 630.0], [87.5, 631.0], [87.6, 631.0], [87.7, 631.0], [87.8, 631.0], [87.9, 631.0], [88.0, 637.0], [88.1, 637.0], [88.2, 637.0], [88.3, 637.0], [88.4, 637.0], [88.5, 654.0], [88.6, 654.0], [88.7, 654.0], [88.8, 654.0], [88.9, 654.0], [89.0, 657.0], [89.1, 657.0], [89.2, 657.0], [89.3, 657.0], [89.4, 657.0], [89.5, 663.0], [89.6, 663.0], [89.7, 663.0], [89.8, 663.0], [89.9, 663.0], [90.0, 665.0], [90.1, 665.0], [90.2, 665.0], [90.3, 665.0], [90.4, 665.0], [90.5, 680.0], [90.6, 680.0], [90.7, 680.0], [90.8, 680.0], [90.9, 680.0], [91.0, 680.0], [91.1, 680.0], [91.2, 680.0], [91.3, 680.0], [91.4, 680.0], [91.5, 681.0], [91.6, 681.0], [91.7, 681.0], [91.8, 681.0], [91.9, 681.0], [92.0, 684.0], [92.1, 684.0], [92.2, 684.0], [92.3, 684.0], [92.4, 684.0], [92.5, 699.0], [92.6, 699.0], [92.7, 699.0], [92.8, 699.0], [92.9, 699.0], [93.0, 702.0], [93.1, 702.0], [93.2, 702.0], [93.3, 702.0], [93.4, 702.0], [93.5, 707.0], [93.6, 707.0], [93.7, 707.0], [93.8, 707.0], [93.9, 707.0], [94.0, 709.0], [94.1, 709.0], [94.2, 709.0], [94.3, 709.0], [94.4, 709.0], [94.5, 715.0], [94.6, 715.0], [94.7, 715.0], [94.8, 715.0], [94.9, 715.0], [95.0, 722.0], [95.1, 722.0], [95.2, 722.0], [95.3, 722.0], [95.4, 722.0], [95.5, 722.0], [95.6, 722.0], [95.7, 722.0], [95.8, 722.0], [95.9, 722.0], [96.0, 733.0], [96.1, 733.0], [96.2, 733.0], [96.3, 733.0], [96.4, 733.0], [96.5, 733.0], [96.6, 733.0], [96.7, 733.0], [96.8, 733.0], [96.9, 733.0], [97.0, 735.0], [97.1, 735.0], [97.2, 735.0], [97.3, 735.0], [97.4, 735.0], [97.5, 746.0], [97.6, 746.0], [97.7, 746.0], [97.8, 746.0], [97.9, 746.0], [98.0, 751.0], [98.1, 751.0], [98.2, 751.0], [98.3, 751.0], [98.4, 751.0], [98.5, 762.0], [98.6, 762.0], [98.7, 762.0], [98.8, 762.0], [98.9, 762.0], [99.0, 765.0], [99.1, 765.0], [99.2, 765.0], [99.3, 765.0], [99.4, 765.0], [99.5, 793.0], [99.6, 793.0], [99.7, 793.0], [99.8, 793.0], [99.9, 793.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 314.0], [0.1, 314.0], [0.2, 314.0], [0.3, 314.0], [0.4, 314.0], [0.5, 315.0], [0.6, 315.0], [0.7, 315.0], [0.8, 315.0], [0.9, 315.0], [1.0, 322.0], [1.1, 322.0], [1.2, 322.0], [1.3, 322.0], [1.4, 322.0], [1.5, 327.0], [1.6, 327.0], [1.7, 327.0], [1.8, 327.0], [1.9, 327.0], [2.0, 331.0], [2.1, 331.0], [2.2, 331.0], [2.3, 331.0], [2.4, 331.0], [2.5, 339.0], [2.6, 339.0], [2.7, 339.0], [2.8, 339.0], [2.9, 339.0], [3.0, 346.0], [3.1, 346.0], [3.2, 346.0], [3.3, 346.0], [3.4, 346.0], [3.5, 346.0], [3.6, 346.0], [3.7, 346.0], [3.8, 346.0], [3.9, 346.0], [4.0, 350.0], [4.1, 350.0], [4.2, 350.0], [4.3, 350.0], [4.4, 350.0], [4.5, 356.0], [4.6, 356.0], [4.7, 356.0], [4.8, 356.0], [4.9, 356.0], [5.0, 359.0], [5.1, 359.0], [5.2, 359.0], [5.3, 359.0], [5.4, 359.0], [5.5, 370.0], [5.6, 370.0], [5.7, 370.0], [5.8, 370.0], [5.9, 370.0], [6.0, 378.0], [6.1, 378.0], [6.2, 378.0], [6.3, 378.0], [6.4, 378.0], [6.5, 380.0], [6.6, 380.0], [6.7, 380.0], [6.8, 380.0], [6.9, 380.0], [7.0, 382.0], [7.1, 382.0], [7.2, 382.0], [7.3, 382.0], [7.4, 382.0], [7.5, 399.0], [7.6, 399.0], [7.7, 399.0], [7.8, 399.0], [7.9, 399.0], [8.0, 400.0], [8.1, 400.0], [8.2, 400.0], [8.3, 400.0], [8.4, 400.0], [8.5, 402.0], [8.6, 402.0], [8.7, 402.0], [8.8, 402.0], [8.9, 402.0], [9.0, 406.0], [9.1, 406.0], [9.2, 406.0], [9.3, 406.0], [9.4, 406.0], [9.5, 409.0], [9.6, 409.0], [9.7, 409.0], [9.8, 409.0], [9.9, 409.0], [10.0, 416.0], [10.1, 416.0], [10.2, 416.0], [10.3, 416.0], [10.4, 416.0], [10.5, 421.0], [10.6, 421.0], [10.7, 421.0], [10.8, 421.0], [10.9, 421.0], [11.0, 430.0], [11.1, 430.0], [11.2, 430.0], [11.3, 430.0], [11.4, 430.0], [11.5, 430.0], [11.6, 430.0], [11.7, 430.0], [11.8, 430.0], [11.9, 430.0], [12.0, 441.0], [12.1, 441.0], [12.2, 441.0], [12.3, 441.0], [12.4, 441.0], [12.5, 449.0], [12.6, 449.0], [12.7, 449.0], [12.8, 449.0], [12.9, 449.0], [13.0, 459.0], [13.1, 459.0], [13.2, 459.0], [13.3, 459.0], [13.4, 459.0], [13.5, 460.0], [13.6, 460.0], [13.7, 460.0], [13.8, 460.0], [13.9, 460.0], [14.0, 467.0], [14.1, 467.0], [14.2, 467.0], [14.3, 467.0], [14.4, 467.0], [14.5, 470.0], [14.6, 470.0], [14.7, 470.0], [14.8, 470.0], [14.9, 470.0], [15.0, 470.0], [15.1, 470.0], [15.2, 470.0], [15.3, 470.0], [15.4, 470.0], [15.5, 470.0], [15.6, 470.0], [15.7, 470.0], [15.8, 470.0], [15.9, 470.0], [16.0, 480.0], [16.1, 480.0], [16.2, 480.0], [16.3, 480.0], [16.4, 480.0], [16.5, 490.0], [16.6, 490.0], [16.7, 490.0], [16.8, 490.0], [16.9, 490.0], [17.0, 490.0], [17.1, 490.0], [17.2, 490.0], [17.3, 490.0], [17.4, 490.0], [17.5, 496.0], [17.6, 496.0], [17.7, 496.0], [17.8, 496.0], [17.9, 496.0], [18.0, 506.0], [18.1, 506.0], [18.2, 506.0], [18.3, 506.0], [18.4, 506.0], [18.5, 520.0], [18.6, 520.0], [18.7, 520.0], [18.8, 520.0], [18.9, 520.0], [19.0, 521.0], [19.1, 521.0], [19.2, 521.0], [19.3, 521.0], [19.4, 521.0], [19.5, 530.0], [19.6, 530.0], [19.7, 530.0], [19.8, 530.0], [19.9, 530.0], [20.0, 530.0], [20.1, 530.0], [20.2, 530.0], [20.3, 530.0], [20.4, 530.0], [20.5, 531.0], [20.6, 531.0], [20.7, 531.0], [20.8, 531.0], [20.9, 531.0], [21.0, 536.0], [21.1, 536.0], [21.2, 536.0], [21.3, 536.0], [21.4, 536.0], [21.5, 536.0], [21.6, 536.0], [21.7, 536.0], [21.8, 536.0], [21.9, 536.0], [22.0, 537.0], [22.1, 537.0], [22.2, 537.0], [22.3, 537.0], [22.4, 537.0], [22.5, 539.0], [22.6, 539.0], [22.7, 539.0], [22.8, 539.0], [22.9, 539.0], [23.0, 539.0], [23.1, 539.0], [23.2, 539.0], [23.3, 539.0], [23.4, 539.0], [23.5, 808.0], [23.6, 808.0], [23.7, 808.0], [23.8, 808.0], [23.9, 808.0], [24.0, 1209.0], [24.1, 1209.0], [24.2, 1209.0], [24.3, 1209.0], [24.4, 1209.0], [24.5, 1217.0], [24.6, 1217.0], [24.7, 1217.0], [24.8, 1217.0], [24.9, 1217.0], [25.0, 1224.0], [25.1, 1224.0], [25.2, 1224.0], [25.3, 1224.0], [25.4, 1224.0], [25.5, 1224.0], [25.6, 1224.0], [25.7, 1224.0], [25.8, 1224.0], [25.9, 1224.0], [26.0, 1225.0], [26.1, 1225.0], [26.2, 1225.0], [26.3, 1225.0], [26.4, 1225.0], [26.5, 1250.0], [26.6, 1250.0], [26.7, 1250.0], [26.8, 1250.0], [26.9, 1250.0], [27.0, 1256.0], [27.1, 1256.0], [27.2, 1256.0], [27.3, 1256.0], [27.4, 1256.0], [27.5, 1261.0], [27.6, 1261.0], [27.7, 1261.0], [27.8, 1261.0], [27.9, 1261.0], [28.0, 1272.0], [28.1, 1272.0], [28.2, 1272.0], [28.3, 1272.0], [28.4, 1272.0], [28.5, 1293.0], [28.6, 1293.0], [28.7, 1293.0], [28.8, 1293.0], [28.9, 1293.0], [29.0, 1304.0], [29.1, 1304.0], [29.2, 1304.0], [29.3, 1304.0], [29.4, 1304.0], [29.5, 1310.0], [29.6, 1310.0], [29.7, 1310.0], [29.8, 1310.0], [29.9, 1310.0], [30.0, 1330.0], [30.1, 1330.0], [30.2, 1330.0], [30.3, 1330.0], [30.4, 1330.0], [30.5, 1332.0], [30.6, 1332.0], [30.7, 1332.0], [30.8, 1332.0], [30.9, 1332.0], [31.0, 1334.0], [31.1, 1334.0], [31.2, 1334.0], [31.3, 1334.0], [31.4, 1334.0], [31.5, 1336.0], [31.6, 1336.0], [31.7, 1336.0], [31.8, 1336.0], [31.9, 1336.0], [32.0, 1336.0], [32.1, 1336.0], [32.2, 1336.0], [32.3, 1336.0], [32.4, 1336.0], [32.5, 1339.0], [32.6, 1339.0], [32.7, 1339.0], [32.8, 1339.0], [32.9, 1339.0], [33.0, 1339.0], [33.1, 1339.0], [33.2, 1339.0], [33.3, 1339.0], [33.4, 1339.0], [33.5, 1339.0], [33.6, 1339.0], [33.7, 1339.0], [33.8, 1339.0], [33.9, 1339.0], [34.0, 1340.0], [34.1, 1340.0], [34.2, 1340.0], [34.3, 1340.0], [34.4, 1340.0], [34.5, 1343.0], [34.6, 1343.0], [34.7, 1343.0], [34.8, 1343.0], [34.9, 1343.0], [35.0, 1347.0], [35.1, 1347.0], [35.2, 1347.0], [35.3, 1347.0], [35.4, 1347.0], [35.5, 1347.0], [35.6, 1347.0], [35.7, 1347.0], [35.8, 1347.0], [35.9, 1347.0], [36.0, 1349.0], [36.1, 1349.0], [36.2, 1349.0], [36.3, 1349.0], [36.4, 1349.0], [36.5, 1350.0], [36.6, 1350.0], [36.7, 1350.0], [36.8, 1350.0], [36.9, 1350.0], [37.0, 1352.0], [37.1, 1352.0], [37.2, 1352.0], [37.3, 1352.0], [37.4, 1352.0], [37.5, 1352.0], [37.6, 1352.0], [37.7, 1352.0], [37.8, 1352.0], [37.9, 1352.0], [38.0, 1354.0], [38.1, 1354.0], [38.2, 1354.0], [38.3, 1354.0], [38.4, 1354.0], [38.5, 1361.0], [38.6, 1361.0], [38.7, 1361.0], [38.8, 1361.0], [38.9, 1361.0], [39.0, 1371.0], [39.1, 1371.0], [39.2, 1371.0], [39.3, 1371.0], [39.4, 1371.0], [39.5, 1372.0], [39.6, 1372.0], [39.7, 1372.0], [39.8, 1372.0], [39.9, 1372.0], [40.0, 1372.0], [40.1, 1372.0], [40.2, 1372.0], [40.3, 1372.0], [40.4, 1372.0], [40.5, 1380.0], [40.6, 1380.0], [40.7, 1380.0], [40.8, 1380.0], [40.9, 1380.0], [41.0, 1380.0], [41.1, 1380.0], [41.2, 1380.0], [41.3, 1380.0], [41.4, 1380.0], [41.5, 1381.0], [41.6, 1381.0], [41.7, 1381.0], [41.8, 1381.0], [41.9, 1381.0], [42.0, 1385.0], [42.1, 1385.0], [42.2, 1385.0], [42.3, 1385.0], [42.4, 1385.0], [42.5, 1386.0], [42.6, 1386.0], [42.7, 1386.0], [42.8, 1386.0], [42.9, 1386.0], [43.0, 1389.0], [43.1, 1389.0], [43.2, 1389.0], [43.3, 1389.0], [43.4, 1389.0], [43.5, 1394.0], [43.6, 1394.0], [43.7, 1394.0], [43.8, 1394.0], [43.9, 1394.0], [44.0, 1399.0], [44.1, 1399.0], [44.2, 1399.0], [44.3, 1399.0], [44.4, 1399.0], [44.5, 1406.0], [44.6, 1406.0], [44.7, 1406.0], [44.8, 1406.0], [44.9, 1406.0], [45.0, 1418.0], [45.1, 1418.0], [45.2, 1418.0], [45.3, 1418.0], [45.4, 1418.0], [45.5, 1423.0], [45.6, 1423.0], [45.7, 1423.0], [45.8, 1423.0], [45.9, 1423.0], [46.0, 1441.0], [46.1, 1441.0], [46.2, 1441.0], [46.3, 1441.0], [46.4, 1441.0], [46.5, 1442.0], [46.6, 1442.0], [46.7, 1442.0], [46.8, 1442.0], [46.9, 1442.0], [47.0, 1485.0], [47.1, 1485.0], [47.2, 1485.0], [47.3, 1485.0], [47.4, 1485.0], [47.5, 1536.0], [47.6, 1536.0], [47.7, 1536.0], [47.8, 1536.0], [47.9, 1536.0], [48.0, 1537.0], [48.1, 1537.0], [48.2, 1537.0], [48.3, 1537.0], [48.4, 1537.0], [48.5, 1542.0], [48.6, 1542.0], [48.7, 1542.0], [48.8, 1542.0], [48.9, 1542.0], [49.0, 1575.0], [49.1, 1575.0], [49.2, 1575.0], [49.3, 1575.0], [49.4, 1575.0], [49.5, 1847.0], [49.6, 1847.0], [49.7, 1847.0], [49.8, 1847.0], [49.9, 1847.0], [50.0, 1956.0], [50.1, 1956.0], [50.2, 1956.0], [50.3, 1956.0], [50.4, 1956.0], [50.5, 1957.0], [50.6, 1957.0], [50.7, 1957.0], [50.8, 1957.0], [50.9, 1957.0], [51.0, 1961.0], [51.1, 1961.0], [51.2, 1961.0], [51.3, 1961.0], [51.4, 1961.0], [51.5, 1961.0], [51.6, 1961.0], [51.7, 1961.0], [51.8, 1961.0], [51.9, 1961.0], [52.0, 1966.0], [52.1, 1966.0], [52.2, 1966.0], [52.3, 1966.0], [52.4, 1966.0], [52.5, 1972.0], [52.6, 1972.0], [52.7, 1972.0], [52.8, 1972.0], [52.9, 1972.0], [53.0, 1983.0], [53.1, 1983.0], [53.2, 1983.0], [53.3, 1983.0], [53.4, 1983.0], [53.5, 1986.0], [53.6, 1986.0], [53.7, 1986.0], [53.8, 1986.0], [53.9, 1986.0], [54.0, 2008.0], [54.1, 2008.0], [54.2, 2008.0], [54.3, 2008.0], [54.4, 2008.0], [54.5, 2011.0], [54.6, 2011.0], [54.7, 2011.0], [54.8, 2011.0], [54.9, 2011.0], [55.0, 2012.0], [55.1, 2012.0], [55.2, 2012.0], [55.3, 2012.0], [55.4, 2012.0], [55.5, 2014.0], [55.6, 2014.0], [55.7, 2014.0], [55.8, 2014.0], [55.9, 2014.0], [56.0, 2046.0], [56.1, 2046.0], [56.2, 2046.0], [56.3, 2046.0], [56.4, 2046.0], [56.5, 2058.0], [56.6, 2058.0], [56.7, 2058.0], [56.8, 2058.0], [56.9, 2058.0], [57.0, 2061.0], [57.1, 2061.0], [57.2, 2061.0], [57.3, 2061.0], [57.4, 2061.0], [57.5, 2062.0], [57.6, 2062.0], [57.7, 2062.0], [57.8, 2062.0], [57.9, 2062.0], [58.0, 2063.0], [58.1, 2063.0], [58.2, 2063.0], [58.3, 2063.0], [58.4, 2063.0], [58.5, 2066.0], [58.6, 2066.0], [58.7, 2066.0], [58.8, 2066.0], [58.9, 2066.0], [59.0, 2071.0], [59.1, 2071.0], [59.2, 2071.0], [59.3, 2071.0], [59.4, 2071.0], [59.5, 2071.0], [59.6, 2071.0], [59.7, 2071.0], [59.8, 2071.0], [59.9, 2071.0], [60.0, 2079.0], [60.1, 2079.0], [60.2, 2079.0], [60.3, 2079.0], [60.4, 2079.0], [60.5, 2083.0], [60.6, 2083.0], [60.7, 2083.0], [60.8, 2083.0], [60.9, 2083.0], [61.0, 2083.0], [61.1, 2083.0], [61.2, 2083.0], [61.3, 2083.0], [61.4, 2083.0], [61.5, 2084.0], [61.6, 2084.0], [61.7, 2084.0], [61.8, 2084.0], [61.9, 2084.0], [62.0, 2085.0], [62.1, 2085.0], [62.2, 2085.0], [62.3, 2085.0], [62.4, 2085.0], [62.5, 2087.0], [62.6, 2087.0], [62.7, 2087.0], [62.8, 2087.0], [62.9, 2087.0], [63.0, 2088.0], [63.1, 2088.0], [63.2, 2088.0], [63.3, 2088.0], [63.4, 2088.0], [63.5, 2127.0], [63.6, 2127.0], [63.7, 2127.0], [63.8, 2127.0], [63.9, 2127.0], [64.0, 2132.0], [64.1, 2132.0], [64.2, 2132.0], [64.3, 2132.0], [64.4, 2132.0], [64.5, 2139.0], [64.6, 2139.0], [64.7, 2139.0], [64.8, 2139.0], [64.9, 2139.0], [65.0, 2143.0], [65.1, 2143.0], [65.2, 2143.0], [65.3, 2143.0], [65.4, 2143.0], [65.5, 2174.0], [65.6, 2174.0], [65.7, 2174.0], [65.8, 2174.0], [65.9, 2174.0], [66.0, 2202.0], [66.1, 2202.0], [66.2, 2202.0], [66.3, 2202.0], [66.4, 2202.0], [66.5, 2229.0], [66.6, 2229.0], [66.7, 2229.0], [66.8, 2229.0], [66.9, 2229.0], [67.0, 2233.0], [67.1, 2233.0], [67.2, 2233.0], [67.3, 2233.0], [67.4, 2233.0], [67.5, 2236.0], [67.6, 2236.0], [67.7, 2236.0], [67.8, 2236.0], [67.9, 2236.0], [68.0, 2238.0], [68.1, 2238.0], [68.2, 2238.0], [68.3, 2238.0], [68.4, 2238.0], [68.5, 2246.0], [68.6, 2246.0], [68.7, 2246.0], [68.8, 2246.0], [68.9, 2246.0], [69.0, 2260.0], [69.1, 2260.0], [69.2, 2260.0], [69.3, 2260.0], [69.4, 2260.0], [69.5, 2269.0], [69.6, 2269.0], [69.7, 2269.0], [69.8, 2269.0], [69.9, 2269.0], [70.0, 2272.0], [70.1, 2272.0], [70.2, 2272.0], [70.3, 2272.0], [70.4, 2272.0], [70.5, 2277.0], [70.6, 2277.0], [70.7, 2277.0], [70.8, 2277.0], [70.9, 2277.0], [71.0, 2280.0], [71.1, 2280.0], [71.2, 2280.0], [71.3, 2280.0], [71.4, 2280.0], [71.5, 2280.0], [71.6, 2280.0], [71.7, 2280.0], [71.8, 2280.0], [71.9, 2280.0], [72.0, 2285.0], [72.1, 2285.0], [72.2, 2285.0], [72.3, 2285.0], [72.4, 2285.0], [72.5, 2288.0], [72.6, 2288.0], [72.7, 2288.0], [72.8, 2288.0], [72.9, 2288.0], [73.0, 2314.0], [73.1, 2314.0], [73.2, 2314.0], [73.3, 2314.0], [73.4, 2314.0], [73.5, 2319.0], [73.6, 2319.0], [73.7, 2319.0], [73.8, 2319.0], [73.9, 2319.0], [74.0, 2320.0], [74.1, 2320.0], [74.2, 2320.0], [74.3, 2320.0], [74.4, 2320.0], [74.5, 2332.0], [74.6, 2332.0], [74.7, 2332.0], [74.8, 2332.0], [74.9, 2332.0], [75.0, 2374.0], [75.1, 2374.0], [75.2, 2374.0], [75.3, 2374.0], [75.4, 2374.0], [75.5, 2375.0], [75.6, 2375.0], [75.7, 2375.0], [75.8, 2375.0], [75.9, 2375.0], [76.0, 2378.0], [76.1, 2378.0], [76.2, 2378.0], [76.3, 2378.0], [76.4, 2378.0], [76.5, 2381.0], [76.6, 2381.0], [76.7, 2381.0], [76.8, 2381.0], [76.9, 2381.0], [77.0, 2501.0], [77.1, 2501.0], [77.2, 2501.0], [77.3, 2501.0], [77.4, 2501.0], [77.5, 2607.0], [77.6, 2607.0], [77.7, 2607.0], [77.8, 2607.0], [77.9, 2607.0], [78.0, 2611.0], [78.1, 2611.0], [78.2, 2611.0], [78.3, 2611.0], [78.4, 2611.0], [78.5, 2714.0], [78.6, 2714.0], [78.7, 2714.0], [78.8, 2714.0], [78.9, 2714.0], [79.0, 2740.0], [79.1, 2740.0], [79.2, 2740.0], [79.3, 2740.0], [79.4, 2740.0], [79.5, 2770.0], [79.6, 2770.0], [79.7, 2770.0], [79.8, 2770.0], [79.9, 2770.0], [80.0, 2933.0], [80.1, 2933.0], [80.2, 2933.0], [80.3, 2933.0], [80.4, 2933.0], [80.5, 2933.0], [80.6, 2933.0], [80.7, 2933.0], [80.8, 2933.0], [80.9, 2933.0], [81.0, 2959.0], [81.1, 2959.0], [81.2, 2959.0], [81.3, 2959.0], [81.4, 2959.0], [81.5, 2960.0], [81.6, 2960.0], [81.7, 2960.0], [81.8, 2960.0], [81.9, 2960.0], [82.0, 2960.0], [82.1, 2960.0], [82.2, 2960.0], [82.3, 2960.0], [82.4, 2960.0], [82.5, 2963.0], [82.6, 2963.0], [82.7, 2963.0], [82.8, 2963.0], [82.9, 2963.0], [83.0, 2965.0], [83.1, 2965.0], [83.2, 2965.0], [83.3, 2965.0], [83.4, 2965.0], [83.5, 2968.0], [83.6, 2968.0], [83.7, 2968.0], [83.8, 2968.0], [83.9, 2968.0], [84.0, 2969.0], [84.1, 2969.0], [84.2, 2969.0], [84.3, 2969.0], [84.4, 2969.0], [84.5, 2971.0], [84.6, 2971.0], [84.7, 2971.0], [84.8, 2971.0], [84.9, 2971.0], [85.0, 2971.0], [85.1, 2971.0], [85.2, 2971.0], [85.3, 2971.0], [85.4, 2971.0], [85.5, 2978.0], [85.6, 2978.0], [85.7, 2978.0], [85.8, 2978.0], [85.9, 2978.0], [86.0, 2994.0], [86.1, 2994.0], [86.2, 2994.0], [86.3, 2994.0], [86.4, 2994.0], [86.5, 2996.0], [86.6, 2996.0], [86.7, 2996.0], [86.8, 2996.0], [86.9, 2996.0], [87.0, 3001.0], [87.1, 3001.0], [87.2, 3001.0], [87.3, 3001.0], [87.4, 3001.0], [87.5, 3003.0], [87.6, 3003.0], [87.7, 3003.0], [87.8, 3003.0], [87.9, 3003.0], [88.0, 3006.0], [88.1, 3006.0], [88.2, 3006.0], [88.3, 3006.0], [88.4, 3006.0], [88.5, 3007.0], [88.6, 3007.0], [88.7, 3007.0], [88.8, 3007.0], [88.9, 3007.0], [89.0, 3054.0], [89.1, 3054.0], [89.2, 3054.0], [89.3, 3054.0], [89.4, 3054.0], [89.5, 3057.0], [89.6, 3057.0], [89.7, 3057.0], [89.8, 3057.0], [89.9, 3057.0], [90.0, 3060.0], [90.1, 3060.0], [90.2, 3060.0], [90.3, 3060.0], [90.4, 3060.0], [90.5, 3064.0], [90.6, 3064.0], [90.7, 3064.0], [90.8, 3064.0], [90.9, 3064.0], [91.0, 3070.0], [91.1, 3070.0], [91.2, 3070.0], [91.3, 3070.0], [91.4, 3070.0], [91.5, 3079.0], [91.6, 3079.0], [91.7, 3079.0], [91.8, 3079.0], [91.9, 3079.0], [92.0, 3101.0], [92.1, 3101.0], [92.2, 3101.0], [92.3, 3101.0], [92.4, 3101.0], [92.5, 3107.0], [92.6, 3107.0], [92.7, 3107.0], [92.8, 3107.0], [92.9, 3107.0], [93.0, 3117.0], [93.1, 3117.0], [93.2, 3117.0], [93.3, 3117.0], [93.4, 3117.0], [93.5, 3122.0], [93.6, 3122.0], [93.7, 3122.0], [93.8, 3122.0], [93.9, 3122.0], [94.0, 3124.0], [94.1, 3124.0], [94.2, 3124.0], [94.3, 3124.0], [94.4, 3124.0], [94.5, 3127.0], [94.6, 3127.0], [94.7, 3127.0], [94.8, 3127.0], [94.9, 3127.0], [95.0, 3133.0], [95.1, 3133.0], [95.2, 3133.0], [95.3, 3133.0], [95.4, 3133.0], [95.5, 3141.0], [95.6, 3141.0], [95.7, 3141.0], [95.8, 3141.0], [95.9, 3141.0], [96.0, 3154.0], [96.1, 3154.0], [96.2, 3154.0], [96.3, 3154.0], [96.4, 3154.0], [96.5, 3155.0], [96.6, 3155.0], [96.7, 3155.0], [96.8, 3155.0], [96.9, 3155.0], [97.0, 3156.0], [97.1, 3156.0], [97.2, 3156.0], [97.3, 3156.0], [97.4, 3156.0], [97.5, 3158.0], [97.6, 3158.0], [97.7, 3158.0], [97.8, 3158.0], [97.9, 3158.0], [98.0, 3176.0], [98.1, 3176.0], [98.2, 3176.0], [98.3, 3176.0], [98.4, 3176.0], [98.5, 3179.0], [98.6, 3179.0], [98.7, 3179.0], [98.8, 3179.0], [98.9, 3179.0], [99.0, 3189.0], [99.1, 3189.0], [99.2, 3189.0], [99.3, 3189.0], [99.4, 3189.0], [99.5, 3199.0], [99.6, 3199.0], [99.7, 3199.0], [99.8, 3199.0], [99.9, 3199.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 1096.0], [0.1, 1096.0], [0.2, 1096.0], [0.3, 1096.0], [0.4, 1096.0], [0.5, 1126.0], [0.6, 1126.0], [0.7, 1126.0], [0.8, 1126.0], [0.9, 1126.0], [1.0, 1213.0], [1.1, 1213.0], [1.2, 1213.0], [1.3, 1213.0], [1.4, 1213.0], [1.5, 1286.0], [1.6, 1286.0], [1.7, 1286.0], [1.8, 1286.0], [1.9, 1286.0], [2.0, 1303.0], [2.1, 1303.0], [2.2, 1303.0], [2.3, 1303.0], [2.4, 1303.0], [2.5, 1323.0], [2.6, 1323.0], [2.7, 1323.0], [2.8, 1323.0], [2.9, 1323.0], [3.0, 1349.0], [3.1, 1349.0], [3.2, 1349.0], [3.3, 1349.0], [3.4, 1349.0], [3.5, 1376.0], [3.6, 1376.0], [3.7, 1376.0], [3.8, 1376.0], [3.9, 1376.0], [4.0, 1389.0], [4.1, 1389.0], [4.2, 1389.0], [4.3, 1389.0], [4.4, 1389.0], [4.5, 1397.0], [4.6, 1397.0], [4.7, 1397.0], [4.8, 1397.0], [4.9, 1397.0], [5.0, 1405.0], [5.1, 1405.0], [5.2, 1405.0], [5.3, 1405.0], [5.4, 1405.0], [5.5, 1405.0], [5.6, 1405.0], [5.7, 1405.0], [5.8, 1405.0], [5.9, 1405.0], [6.0, 1410.0], [6.1, 1410.0], [6.2, 1410.0], [6.3, 1410.0], [6.4, 1410.0], [6.5, 1418.0], [6.6, 1418.0], [6.7, 1418.0], [6.8, 1418.0], [6.9, 1418.0], [7.0, 1419.0], [7.1, 1419.0], [7.2, 1419.0], [7.3, 1419.0], [7.4, 1419.0], [7.5, 1425.0], [7.6, 1425.0], [7.7, 1425.0], [7.8, 1425.0], [7.9, 1425.0], [8.0, 1431.0], [8.1, 1431.0], [8.2, 1431.0], [8.3, 1431.0], [8.4, 1431.0], [8.5, 1431.0], [8.6, 1431.0], [8.7, 1431.0], [8.8, 1431.0], [8.9, 1431.0], [9.0, 1433.0], [9.1, 1433.0], [9.2, 1433.0], [9.3, 1433.0], [9.4, 1433.0], [9.5, 1434.0], [9.6, 1434.0], [9.7, 1434.0], [9.8, 1434.0], [9.9, 1434.0], [10.0, 1442.0], [10.1, 1442.0], [10.2, 1442.0], [10.3, 1442.0], [10.4, 1442.0], [10.5, 1450.0], [10.6, 1450.0], [10.7, 1450.0], [10.8, 1450.0], [10.9, 1450.0], [11.0, 1456.0], [11.1, 1456.0], [11.2, 1456.0], [11.3, 1456.0], [11.4, 1456.0], [11.5, 1469.0], [11.6, 1469.0], [11.7, 1469.0], [11.8, 1469.0], [11.9, 1469.0], [12.0, 1482.0], [12.1, 1482.0], [12.2, 1482.0], [12.3, 1482.0], [12.4, 1482.0], [12.5, 1486.0], [12.6, 1486.0], [12.7, 1486.0], [12.8, 1486.0], [12.9, 1486.0], [13.0, 1510.0], [13.1, 1510.0], [13.2, 1510.0], [13.3, 1510.0], [13.4, 1510.0], [13.5, 1517.0], [13.6, 1517.0], [13.7, 1517.0], [13.8, 1517.0], [13.9, 1517.0], [14.0, 1525.0], [14.1, 1525.0], [14.2, 1525.0], [14.3, 1525.0], [14.4, 1525.0], [14.5, 1526.0], [14.6, 1526.0], [14.7, 1526.0], [14.8, 1526.0], [14.9, 1526.0], [15.0, 1534.0], [15.1, 1534.0], [15.2, 1534.0], [15.3, 1534.0], [15.4, 1534.0], [15.5, 1546.0], [15.6, 1546.0], [15.7, 1546.0], [15.8, 1546.0], [15.9, 1546.0], [16.0, 1571.0], [16.1, 1571.0], [16.2, 1571.0], [16.3, 1571.0], [16.4, 1571.0], [16.5, 1572.0], [16.6, 1572.0], [16.7, 1572.0], [16.8, 1572.0], [16.9, 1572.0], [17.0, 1585.0], [17.1, 1585.0], [17.2, 1585.0], [17.3, 1585.0], [17.4, 1585.0], [17.5, 1612.0], [17.6, 1612.0], [17.7, 1612.0], [17.8, 1612.0], [17.9, 1612.0], [18.0, 1613.0], [18.1, 1613.0], [18.2, 1613.0], [18.3, 1613.0], [18.4, 1613.0], [18.5, 1613.0], [18.6, 1613.0], [18.7, 1613.0], [18.8, 1613.0], [18.9, 1613.0], [19.0, 1631.0], [19.1, 1631.0], [19.2, 1631.0], [19.3, 1631.0], [19.4, 1631.0], [19.5, 1635.0], [19.6, 1635.0], [19.7, 1635.0], [19.8, 1635.0], [19.9, 1635.0], [20.0, 1636.0], [20.1, 1636.0], [20.2, 1636.0], [20.3, 1636.0], [20.4, 1636.0], [20.5, 1640.0], [20.6, 1640.0], [20.7, 1640.0], [20.8, 1640.0], [20.9, 1640.0], [21.0, 1640.0], [21.1, 1640.0], [21.2, 1640.0], [21.3, 1640.0], [21.4, 1640.0], [21.5, 1669.0], [21.6, 1669.0], [21.7, 1669.0], [21.8, 1669.0], [21.9, 1669.0], [22.0, 1686.0], [22.1, 1686.0], [22.2, 1686.0], [22.3, 1686.0], [22.4, 1686.0], [22.5, 1794.0], [22.6, 1794.0], [22.7, 1794.0], [22.8, 1794.0], [22.9, 1794.0], [23.0, 1807.0], [23.1, 1807.0], [23.2, 1807.0], [23.3, 1807.0], [23.4, 1807.0], [23.5, 1855.0], [23.6, 1855.0], [23.7, 1855.0], [23.8, 1855.0], [23.9, 1855.0], [24.0, 2138.0], [24.1, 2138.0], [24.2, 2138.0], [24.3, 2138.0], [24.4, 2138.0], [24.5, 2139.0], [24.6, 2139.0], [24.7, 2139.0], [24.8, 2139.0], [24.9, 2139.0], [25.0, 2178.0], [25.1, 2178.0], [25.2, 2178.0], [25.3, 2178.0], [25.4, 2178.0], [25.5, 2182.0], [25.6, 2182.0], [25.7, 2182.0], [25.8, 2182.0], [25.9, 2182.0], [26.0, 2198.0], [26.1, 2198.0], [26.2, 2198.0], [26.3, 2198.0], [26.4, 2198.0], [26.5, 2204.0], [26.6, 2204.0], [26.7, 2204.0], [26.8, 2204.0], [26.9, 2204.0], [27.0, 2204.0], [27.1, 2204.0], [27.2, 2204.0], [27.3, 2204.0], [27.4, 2204.0], [27.5, 2246.0], [27.6, 2246.0], [27.7, 2246.0], [27.8, 2246.0], [27.9, 2246.0], [28.0, 2247.0], [28.1, 2247.0], [28.2, 2247.0], [28.3, 2247.0], [28.4, 2247.0], [28.5, 2256.0], [28.6, 2256.0], [28.7, 2256.0], [28.8, 2256.0], [28.9, 2256.0], [29.0, 2285.0], [29.1, 2285.0], [29.2, 2285.0], [29.3, 2285.0], [29.4, 2285.0], [29.5, 2291.0], [29.6, 2291.0], [29.7, 2291.0], [29.8, 2291.0], [29.9, 2291.0], [30.0, 2296.0], [30.1, 2296.0], [30.2, 2296.0], [30.3, 2296.0], [30.4, 2296.0], [30.5, 2302.0], [30.6, 2302.0], [30.7, 2302.0], [30.8, 2302.0], [30.9, 2302.0], [31.0, 2309.0], [31.1, 2309.0], [31.2, 2309.0], [31.3, 2309.0], [31.4, 2309.0], [31.5, 2309.0], [31.6, 2309.0], [31.7, 2309.0], [31.8, 2309.0], [31.9, 2309.0], [32.0, 2315.0], [32.1, 2315.0], [32.2, 2315.0], [32.3, 2315.0], [32.4, 2315.0], [32.5, 2337.0], [32.6, 2337.0], [32.7, 2337.0], [32.8, 2337.0], [32.9, 2337.0], [33.0, 2347.0], [33.1, 2347.0], [33.2, 2347.0], [33.3, 2347.0], [33.4, 2347.0], [33.5, 2352.0], [33.6, 2352.0], [33.7, 2352.0], [33.8, 2352.0], [33.9, 2352.0], [34.0, 2355.0], [34.1, 2355.0], [34.2, 2355.0], [34.3, 2355.0], [34.4, 2355.0], [34.5, 2363.0], [34.6, 2363.0], [34.7, 2363.0], [34.8, 2363.0], [34.9, 2363.0], [35.0, 2374.0], [35.1, 2374.0], [35.2, 2374.0], [35.3, 2374.0], [35.4, 2374.0], [35.5, 2379.0], [35.6, 2379.0], [35.7, 2379.0], [35.8, 2379.0], [35.9, 2379.0], [36.0, 2393.0], [36.1, 2393.0], [36.2, 2393.0], [36.3, 2393.0], [36.4, 2393.0], [36.5, 2395.0], [36.6, 2395.0], [36.7, 2395.0], [36.8, 2395.0], [36.9, 2395.0], [37.0, 2398.0], [37.1, 2398.0], [37.2, 2398.0], [37.3, 2398.0], [37.4, 2398.0], [37.5, 2399.0], [37.6, 2399.0], [37.7, 2399.0], [37.8, 2399.0], [37.9, 2399.0], [38.0, 2421.0], [38.1, 2421.0], [38.2, 2421.0], [38.3, 2421.0], [38.4, 2421.0], [38.5, 2431.0], [38.6, 2431.0], [38.7, 2431.0], [38.8, 2431.0], [38.9, 2431.0], [39.0, 2432.0], [39.1, 2432.0], [39.2, 2432.0], [39.3, 2432.0], [39.4, 2432.0], [39.5, 2442.0], [39.6, 2442.0], [39.7, 2442.0], [39.8, 2442.0], [39.9, 2442.0], [40.0, 2444.0], [40.1, 2444.0], [40.2, 2444.0], [40.3, 2444.0], [40.4, 2444.0], [40.5, 2445.0], [40.6, 2445.0], [40.7, 2445.0], [40.8, 2445.0], [40.9, 2445.0], [41.0, 2447.0], [41.1, 2447.0], [41.2, 2447.0], [41.3, 2447.0], [41.4, 2447.0], [41.5, 2449.0], [41.6, 2449.0], [41.7, 2449.0], [41.8, 2449.0], [41.9, 2449.0], [42.0, 2450.0], [42.1, 2450.0], [42.2, 2450.0], [42.3, 2450.0], [42.4, 2450.0], [42.5, 2473.0], [42.6, 2473.0], [42.7, 2473.0], [42.8, 2473.0], [42.9, 2473.0], [43.0, 2475.0], [43.1, 2475.0], [43.2, 2475.0], [43.3, 2475.0], [43.4, 2475.0], [43.5, 2516.0], [43.6, 2516.0], [43.7, 2516.0], [43.8, 2516.0], [43.9, 2516.0], [44.0, 2519.0], [44.1, 2519.0], [44.2, 2519.0], [44.3, 2519.0], [44.4, 2519.0], [44.5, 2529.0], [44.6, 2529.0], [44.7, 2529.0], [44.8, 2529.0], [44.9, 2529.0], [45.0, 2531.0], [45.1, 2531.0], [45.2, 2531.0], [45.3, 2531.0], [45.4, 2531.0], [45.5, 2532.0], [45.6, 2532.0], [45.7, 2532.0], [45.8, 2532.0], [45.9, 2532.0], [46.0, 2539.0], [46.1, 2539.0], [46.2, 2539.0], [46.3, 2539.0], [46.4, 2539.0], [46.5, 2558.0], [46.6, 2558.0], [46.7, 2558.0], [46.8, 2558.0], [46.9, 2558.0], [47.0, 2591.0], [47.1, 2591.0], [47.2, 2591.0], [47.3, 2591.0], [47.4, 2591.0], [47.5, 2614.0], [47.6, 2614.0], [47.7, 2614.0], [47.8, 2614.0], [47.9, 2614.0], [48.0, 2623.0], [48.1, 2623.0], [48.2, 2623.0], [48.3, 2623.0], [48.4, 2623.0], [48.5, 2649.0], [48.6, 2649.0], [48.7, 2649.0], [48.8, 2649.0], [48.9, 2649.0], [49.0, 2776.0], [49.1, 2776.0], [49.2, 2776.0], [49.3, 2776.0], [49.4, 2776.0], [49.5, 2861.0], [49.6, 2861.0], [49.7, 2861.0], [49.8, 2861.0], [49.9, 2861.0], [50.0, 2871.0], [50.1, 2871.0], [50.2, 2871.0], [50.3, 2871.0], [50.4, 2871.0], [50.5, 2909.0], [50.6, 2909.0], [50.7, 2909.0], [50.8, 2909.0], [50.9, 2909.0], [51.0, 2949.0], [51.1, 2949.0], [51.2, 2949.0], [51.3, 2949.0], [51.4, 2949.0], [51.5, 2997.0], [51.6, 2997.0], [51.7, 2997.0], [51.8, 2997.0], [51.9, 2997.0], [52.0, 2997.0], [52.1, 2997.0], [52.2, 2997.0], [52.3, 2997.0], [52.4, 2997.0], [52.5, 3100.0], [52.6, 3100.0], [52.7, 3100.0], [52.8, 3100.0], [52.9, 3100.0], [53.0, 3131.0], [53.1, 3131.0], [53.2, 3131.0], [53.3, 3131.0], [53.4, 3131.0], [53.5, 3148.0], [53.6, 3148.0], [53.7, 3148.0], [53.8, 3148.0], [53.9, 3148.0], [54.0, 3163.0], [54.1, 3163.0], [54.2, 3163.0], [54.3, 3163.0], [54.4, 3163.0], [54.5, 3165.0], [54.6, 3165.0], [54.7, 3165.0], [54.8, 3165.0], [54.9, 3165.0], [55.0, 3177.0], [55.1, 3177.0], [55.2, 3177.0], [55.3, 3177.0], [55.4, 3177.0], [55.5, 3178.0], [55.6, 3178.0], [55.7, 3178.0], [55.8, 3178.0], [55.9, 3178.0], [56.0, 3189.0], [56.1, 3189.0], [56.2, 3189.0], [56.3, 3189.0], [56.4, 3189.0], [56.5, 3204.0], [56.6, 3204.0], [56.7, 3204.0], [56.8, 3204.0], [56.9, 3204.0], [57.0, 3216.0], [57.1, 3216.0], [57.2, 3216.0], [57.3, 3216.0], [57.4, 3216.0], [57.5, 3218.0], [57.6, 3218.0], [57.7, 3218.0], [57.8, 3218.0], [57.9, 3218.0], [58.0, 3222.0], [58.1, 3222.0], [58.2, 3222.0], [58.3, 3222.0], [58.4, 3222.0], [58.5, 3223.0], [58.6, 3223.0], [58.7, 3223.0], [58.8, 3223.0], [58.9, 3223.0], [59.0, 3223.0], [59.1, 3223.0], [59.2, 3223.0], [59.3, 3223.0], [59.4, 3223.0], [59.5, 3231.0], [59.6, 3231.0], [59.7, 3231.0], [59.8, 3231.0], [59.9, 3231.0], [60.0, 3249.0], [60.1, 3249.0], [60.2, 3249.0], [60.3, 3249.0], [60.4, 3249.0], [60.5, 3262.0], [60.6, 3262.0], [60.7, 3262.0], [60.8, 3262.0], [60.9, 3262.0], [61.0, 3279.0], [61.1, 3279.0], [61.2, 3279.0], [61.3, 3279.0], [61.4, 3279.0], [61.5, 3280.0], [61.6, 3280.0], [61.7, 3280.0], [61.8, 3280.0], [61.9, 3280.0], [62.0, 3283.0], [62.1, 3283.0], [62.2, 3283.0], [62.3, 3283.0], [62.4, 3283.0], [62.5, 3284.0], [62.6, 3284.0], [62.7, 3284.0], [62.8, 3284.0], [62.9, 3284.0], [63.0, 3321.0], [63.1, 3321.0], [63.2, 3321.0], [63.3, 3321.0], [63.4, 3321.0], [63.5, 3325.0], [63.6, 3325.0], [63.7, 3325.0], [63.8, 3325.0], [63.9, 3325.0], [64.0, 3333.0], [64.1, 3333.0], [64.2, 3333.0], [64.3, 3333.0], [64.4, 3333.0], [64.5, 3337.0], [64.6, 3337.0], [64.7, 3337.0], [64.8, 3337.0], [64.9, 3337.0], [65.0, 3344.0], [65.1, 3344.0], [65.2, 3344.0], [65.3, 3344.0], [65.4, 3344.0], [65.5, 3348.0], [65.6, 3348.0], [65.7, 3348.0], [65.8, 3348.0], [65.9, 3348.0], [66.0, 3353.0], [66.1, 3353.0], [66.2, 3353.0], [66.3, 3353.0], [66.4, 3353.0], [66.5, 3359.0], [66.6, 3359.0], [66.7, 3359.0], [66.8, 3359.0], [66.9, 3359.0], [67.0, 3359.0], [67.1, 3359.0], [67.2, 3359.0], [67.3, 3359.0], [67.4, 3359.0], [67.5, 3360.0], [67.6, 3360.0], [67.7, 3360.0], [67.8, 3360.0], [67.9, 3360.0], [68.0, 3368.0], [68.1, 3368.0], [68.2, 3368.0], [68.3, 3368.0], [68.4, 3368.0], [68.5, 3371.0], [68.6, 3371.0], [68.7, 3371.0], [68.8, 3371.0], [68.9, 3371.0], [69.0, 3386.0], [69.1, 3386.0], [69.2, 3386.0], [69.3, 3386.0], [69.4, 3386.0], [69.5, 3394.0], [69.6, 3394.0], [69.7, 3394.0], [69.8, 3394.0], [69.9, 3394.0], [70.0, 3417.0], [70.1, 3417.0], [70.2, 3417.0], [70.3, 3417.0], [70.4, 3417.0], [70.5, 3428.0], [70.6, 3428.0], [70.7, 3428.0], [70.8, 3428.0], [70.9, 3428.0], [71.0, 3434.0], [71.1, 3434.0], [71.2, 3434.0], [71.3, 3434.0], [71.4, 3434.0], [71.5, 3457.0], [71.6, 3457.0], [71.7, 3457.0], [71.8, 3457.0], [71.9, 3457.0], [72.0, 3474.0], [72.1, 3474.0], [72.2, 3474.0], [72.3, 3474.0], [72.4, 3474.0], [72.5, 3502.0], [72.6, 3502.0], [72.7, 3502.0], [72.8, 3502.0], [72.9, 3502.0], [73.0, 3503.0], [73.1, 3503.0], [73.2, 3503.0], [73.3, 3503.0], [73.4, 3503.0], [73.5, 3519.0], [73.6, 3519.0], [73.7, 3519.0], [73.8, 3519.0], [73.9, 3519.0], [74.0, 3534.0], [74.1, 3534.0], [74.2, 3534.0], [74.3, 3534.0], [74.4, 3534.0], [74.5, 3546.0], [74.6, 3546.0], [74.7, 3546.0], [74.8, 3546.0], [74.9, 3546.0], [75.0, 3551.0], [75.1, 3551.0], [75.2, 3551.0], [75.3, 3551.0], [75.4, 3551.0], [75.5, 3601.0], [75.6, 3601.0], [75.7, 3601.0], [75.8, 3601.0], [75.9, 3601.0], [76.0, 3601.0], [76.1, 3601.0], [76.2, 3601.0], [76.3, 3601.0], [76.4, 3601.0], [76.5, 3661.0], [76.6, 3661.0], [76.7, 3661.0], [76.8, 3661.0], [76.9, 3661.0], [77.0, 3674.0], [77.1, 3674.0], [77.2, 3674.0], [77.3, 3674.0], [77.4, 3674.0], [77.5, 3688.0], [77.6, 3688.0], [77.7, 3688.0], [77.8, 3688.0], [77.9, 3688.0], [78.0, 3717.0], [78.1, 3717.0], [78.2, 3717.0], [78.3, 3717.0], [78.4, 3717.0], [78.5, 3742.0], [78.6, 3742.0], [78.7, 3742.0], [78.8, 3742.0], [78.9, 3742.0], [79.0, 3743.0], [79.1, 3743.0], [79.2, 3743.0], [79.3, 3743.0], [79.4, 3743.0], [79.5, 3759.0], [79.6, 3759.0], [79.7, 3759.0], [79.8, 3759.0], [79.9, 3759.0], [80.0, 3789.0], [80.1, 3789.0], [80.2, 3789.0], [80.3, 3789.0], [80.4, 3789.0], [80.5, 3887.0], [80.6, 3887.0], [80.7, 3887.0], [80.8, 3887.0], [80.9, 3887.0], [81.0, 3897.0], [81.1, 3897.0], [81.2, 3897.0], [81.3, 3897.0], [81.4, 3897.0], [81.5, 3897.0], [81.6, 3897.0], [81.7, 3897.0], [81.8, 3897.0], [81.9, 3897.0], [82.0, 3897.0], [82.1, 3897.0], [82.2, 3897.0], [82.3, 3897.0], [82.4, 3897.0], [82.5, 3904.0], [82.6, 3904.0], [82.7, 3904.0], [82.8, 3904.0], [82.9, 3904.0], [83.0, 3931.0], [83.1, 3931.0], [83.2, 3931.0], [83.3, 3931.0], [83.4, 3931.0], [83.5, 3948.0], [83.6, 3948.0], [83.7, 3948.0], [83.8, 3948.0], [83.9, 3948.0], [84.0, 3953.0], [84.1, 3953.0], [84.2, 3953.0], [84.3, 3953.0], [84.4, 3953.0], [84.5, 3957.0], [84.6, 3957.0], [84.7, 3957.0], [84.8, 3957.0], [84.9, 3957.0], [85.0, 3959.0], [85.1, 3959.0], [85.2, 3959.0], [85.3, 3959.0], [85.4, 3959.0], [85.5, 3961.0], [85.6, 3961.0], [85.7, 3961.0], [85.8, 3961.0], [85.9, 3961.0], [86.0, 3963.0], [86.1, 3963.0], [86.2, 3963.0], [86.3, 3963.0], [86.4, 3963.0], [86.5, 3969.0], [86.6, 3969.0], [86.7, 3969.0], [86.8, 3969.0], [86.9, 3969.0], [87.0, 3971.0], [87.1, 3971.0], [87.2, 3971.0], [87.3, 3971.0], [87.4, 3971.0], [87.5, 3974.0], [87.6, 3974.0], [87.7, 3974.0], [87.8, 3974.0], [87.9, 3974.0], [88.0, 3993.0], [88.1, 3993.0], [88.2, 3993.0], [88.3, 3993.0], [88.4, 3993.0], [88.5, 3994.0], [88.6, 3994.0], [88.7, 3994.0], [88.8, 3994.0], [88.9, 3994.0], [89.0, 4001.0], [89.1, 4001.0], [89.2, 4001.0], [89.3, 4001.0], [89.4, 4001.0], [89.5, 4005.0], [89.6, 4005.0], [89.7, 4005.0], [89.8, 4005.0], [89.9, 4005.0], [90.0, 4008.0], [90.1, 4008.0], [90.2, 4008.0], [90.3, 4008.0], [90.4, 4008.0], [90.5, 4014.0], [90.6, 4014.0], [90.7, 4014.0], [90.8, 4014.0], [90.9, 4014.0], [91.0, 4014.0], [91.1, 4014.0], [91.2, 4014.0], [91.3, 4014.0], [91.4, 4014.0], [91.5, 4017.0], [91.6, 4017.0], [91.7, 4017.0], [91.8, 4017.0], [91.9, 4017.0], [92.0, 4019.0], [92.1, 4019.0], [92.2, 4019.0], [92.3, 4019.0], [92.4, 4019.0], [92.5, 4020.0], [92.6, 4020.0], [92.7, 4020.0], [92.8, 4020.0], [92.9, 4020.0], [93.0, 4025.0], [93.1, 4025.0], [93.2, 4025.0], [93.3, 4025.0], [93.4, 4025.0], [93.5, 4027.0], [93.6, 4027.0], [93.7, 4027.0], [93.8, 4027.0], [93.9, 4027.0], [94.0, 4027.0], [94.1, 4027.0], [94.2, 4027.0], [94.3, 4027.0], [94.4, 4027.0], [94.5, 4034.0], [94.6, 4034.0], [94.7, 4034.0], [94.8, 4034.0], [94.9, 4034.0], [95.0, 4039.0], [95.1, 4039.0], [95.2, 4039.0], [95.3, 4039.0], [95.4, 4039.0], [95.5, 4039.0], [95.6, 4039.0], [95.7, 4039.0], [95.8, 4039.0], [95.9, 4039.0], [96.0, 4041.0], [96.1, 4041.0], [96.2, 4041.0], [96.3, 4041.0], [96.4, 4041.0], [96.5, 4054.0], [96.6, 4054.0], [96.7, 4054.0], [96.8, 4054.0], [96.9, 4054.0], [97.0, 4061.0], [97.1, 4061.0], [97.2, 4061.0], [97.3, 4061.0], [97.4, 4061.0], [97.5, 4067.0], [97.6, 4067.0], [97.7, 4067.0], [97.8, 4067.0], [97.9, 4067.0], [98.0, 4069.0], [98.1, 4069.0], [98.2, 4069.0], [98.3, 4069.0], [98.4, 4069.0], [98.5, 4074.0], [98.6, 4074.0], [98.7, 4074.0], [98.8, 4074.0], [98.9, 4074.0], [99.0, 4084.0], [99.1, 4084.0], [99.2, 4084.0], [99.3, 4084.0], [99.4, 4084.0], [99.5, 4085.0], [99.6, 4085.0], [99.7, 4085.0], [99.8, 4085.0], [99.9, 4085.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 89.0, "series": [{"data": [[300.0, 28.0], [600.0, 34.0], [700.0, 8.0], [400.0, 63.0], [800.0, 1.0], [200.0, 4.0], [500.0, 62.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[300.0, 4.0], [600.0, 28.0], [700.0, 14.0], [400.0, 65.0], [500.0, 89.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[2100.0, 5.0], [2200.0, 14.0], [2300.0, 8.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 3.0], [2900.0, 14.0], [3000.0, 10.0], [3100.0, 16.0], [800.0, 1.0], [300.0, 16.0], [1200.0, 10.0], [1300.0, 31.0], [1400.0, 6.0], [1500.0, 4.0], [400.0, 20.0], [1800.0, 1.0], [1900.0, 8.0], [500.0, 11.0], [2000.0, 19.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1000.0, 1.0], [1100.0, 1.0], [1200.0, 2.0], [1300.0, 6.0], [1400.0, 16.0], [1500.0, 9.0], [1600.0, 10.0], [1700.0, 1.0], [1800.0, 2.0], [2100.0, 5.0], [2200.0, 8.0], [2300.0, 15.0], [2400.0, 11.0], [2500.0, 8.0], [2600.0, 3.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 4.0], [3100.0, 8.0], [3200.0, 13.0], [3300.0, 14.0], [3400.0, 5.0], [3500.0, 6.0], [3600.0, 5.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 13.0], [4000.0, 22.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 200.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 321.0, "series": [{"data": [[0.0, 200.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 321.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 279.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 100.60999999999994, "minX": 1.70191872E12, "maxY": 100.60999999999994, "series": [{"data": [[1.70191872E12, 100.60999999999994]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191872E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.0, "maxY": 4085.0, "series": [{"data": [[3.0, 303.0], [5.0, 285.0], [6.0, 282.0], [7.0, 306.0], [9.0, 345.0], [10.0, 360.0], [11.0, 396.0], [12.0, 440.0], [13.0, 394.0], [14.0, 395.0], [15.0, 416.0], [16.0, 411.0], [17.0, 410.0], [18.0, 402.0], [19.0, 401.0], [20.0, 391.0], [21.0, 435.0], [22.0, 426.0], [23.0, 366.0], [24.0, 384.0], [26.0, 397.5], [27.0, 416.0], [28.0, 736.0], [29.0, 511.0], [30.0, 455.0], [31.0, 431.0], [33.0, 504.0], [32.0, 335.0], [35.0, 408.0], [34.0, 397.0], [37.0, 404.0], [36.0, 314.0], [39.0, 393.0], [38.0, 401.0], [41.0, 412.0], [40.0, 327.0], [43.0, 660.0], [42.0, 376.0], [45.0, 497.0], [44.0, 548.0], [47.0, 620.5], [49.0, 527.0], [48.0, 445.0], [51.0, 552.0], [50.0, 603.0], [53.0, 627.0], [52.0, 580.0], [55.0, 571.0], [54.0, 489.0], [57.0, 613.5], [59.0, 554.0], [58.0, 596.0], [61.0, 525.0], [60.0, 594.0], [63.0, 485.0], [62.0, 530.0], [67.0, 539.0], [66.0, 545.0], [65.0, 540.0], [64.0, 541.0], [71.0, 539.0], [70.0, 748.0], [69.0, 535.0], [68.0, 719.0], [75.0, 553.0], [74.0, 590.0], [73.0, 400.0], [72.0, 779.0], [79.0, 705.0], [78.0, 603.0], [77.0, 707.0], [76.0, 432.0], [83.0, 807.0], [82.0, 663.0], [81.0, 597.0], [80.0, 667.0], [87.0, 640.0], [86.0, 659.0], [85.0, 647.0], [91.0, 542.5], [89.0, 435.0], [88.0, 661.0], [95.0, 627.0], [94.0, 685.0], [93.0, 602.0], [92.0, 405.0], [99.0, 480.0], [98.0, 547.0], [97.0, 528.0], [96.0, 509.0], [103.0, 511.0], [102.0, 662.0], [101.0, 483.0], [100.0, 439.0], [107.0, 569.0], [106.0, 659.0], [105.0, 477.0], [104.0, 471.0], [111.0, 606.0], [110.0, 594.0], [109.0, 557.0], [108.0, 561.0], [114.0, 540.0], [113.0, 475.0], [112.0, 719.0], [119.0, 428.0], [118.0, 504.0], [117.0, 614.0], [116.0, 485.5], [123.0, 465.0], [122.0, 477.0], [121.0, 473.0], [120.0, 559.0], [127.0, 646.0], [126.0, 564.0], [125.0, 387.0], [124.0, 473.0], [135.0, 528.0], [132.0, 551.0], [131.0, 492.0], [130.0, 503.0], [129.0, 514.0], [128.0, 491.0], [143.0, 502.0], [142.0, 511.0], [141.0, 414.0], [140.0, 472.0], [138.0, 407.0], [137.0, 480.0], [136.0, 454.0], [151.0, 591.0], [150.0, 499.0], [149.0, 457.0], [148.0, 508.0], [147.0, 534.5], [145.0, 544.0], [144.0, 499.0], [159.0, 638.0], [157.0, 644.0], [156.0, 684.0], [155.0, 653.0], [154.0, 736.0], [153.0, 412.0], [152.0, 416.0], [167.0, 558.0], [166.0, 565.0], [165.0, 585.0], [164.0, 599.0], [163.0, 608.0], [161.0, 608.0], [160.0, 623.0], [175.0, 624.0], [173.0, 646.0], [171.0, 490.0], [170.0, 614.0], [169.0, 544.0], [168.0, 586.0], [183.0, 509.0], [182.0, 439.0], [181.0, 545.0], [180.0, 502.6666666666667], [177.0, 444.0], [176.0, 472.0], [191.0, 476.0], [190.0, 369.0], [189.0, 453.0], [188.0, 478.0], [187.0, 405.0], [186.0, 464.0], [185.0, 398.0], [184.0, 466.0], [199.0, 331.0], [198.0, 468.0], [197.0, 354.0], [196.0, 428.0], [195.0, 426.5], [193.0, 391.0], [192.0, 400.0], [200.0, 391.0], [1.0, 265.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[100.61000000000006, 509.335]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[3.0, 579.0], [5.0, 558.5], [6.0, 591.0], [7.0, 556.0], [9.0, 513.0], [10.0, 654.0], [11.0, 684.0], [12.0, 637.0], [13.0, 547.0], [14.0, 665.0], [15.0, 624.0], [16.0, 418.0], [17.0, 538.0], [18.0, 418.0], [19.0, 440.0], [20.0, 433.0], [21.0, 560.0], [22.0, 436.0], [23.0, 573.0], [24.0, 580.0], [26.0, 624.0], [27.0, 631.0], [28.0, 585.0], [29.0, 545.0], [30.0, 406.0], [31.0, 356.0], [33.0, 550.0], [32.0, 733.0], [35.0, 557.0], [34.0, 611.0], [37.0, 586.0], [36.0, 472.0], [39.0, 532.0], [38.0, 533.0], [41.0, 577.0], [40.0, 491.0], [43.0, 709.0], [42.0, 388.0], [45.0, 450.0], [44.0, 558.0], [47.0, 621.0], [49.0, 699.0], [48.0, 549.0], [51.0, 722.0], [50.0, 581.0], [53.0, 722.0], [52.0, 733.0], [55.0, 537.0], [54.0, 564.0], [57.0, 707.0], [59.0, 746.0], [58.0, 615.0], [61.0, 491.0], [60.0, 489.0], [63.0, 680.0], [62.0, 516.0], [67.0, 529.0], [66.0, 793.0], [65.0, 607.0], [64.0, 522.0], [71.0, 451.0], [70.0, 518.0], [69.0, 459.0], [68.0, 565.0], [75.0, 600.0], [74.0, 681.0], [73.0, 541.0], [72.0, 509.0], [79.0, 518.0], [78.0, 496.0], [77.0, 510.0], [76.0, 477.0], [83.0, 429.0], [82.0, 477.0], [81.0, 657.0], [80.0, 735.0], [87.0, 626.0], [86.0, 551.0], [85.0, 543.5], [91.0, 555.5], [89.0, 630.0], [88.0, 454.0], [95.0, 518.0], [94.0, 470.0], [93.0, 588.0], [92.0, 556.0], [99.0, 463.0], [98.0, 446.0], [97.0, 508.0], [96.0, 516.0], [103.0, 602.0], [102.0, 539.0], [101.0, 540.0], [100.0, 461.0], [107.0, 715.0], [106.0, 585.0], [105.0, 596.0], [104.0, 526.0], [111.0, 562.0], [110.0, 516.0], [109.0, 602.0], [108.0, 569.0], [114.0, 486.0], [113.0, 430.0], [112.0, 441.0], [119.0, 580.0], [118.0, 566.0], [117.0, 511.0], [116.0, 543.0], [123.0, 555.0], [122.0, 591.0], [121.0, 493.0], [120.0, 535.0], [127.0, 527.0], [126.0, 436.0], [125.0, 548.0], [124.0, 559.0], [135.0, 498.0], [132.0, 465.0], [131.0, 461.0], [130.0, 765.0], [129.0, 467.0], [128.0, 680.0], [143.0, 493.0], [142.0, 475.0], [141.0, 448.0], [140.0, 488.0], [138.0, 457.0], [137.0, 483.0], [136.0, 460.0], [151.0, 408.0], [150.0, 489.0], [149.0, 464.0], [148.0, 406.0], [147.0, 423.5], [145.0, 583.0], [144.0, 524.0], [159.0, 589.0], [157.0, 594.0], [156.0, 575.0], [155.0, 613.0], [154.0, 599.0], [153.0, 587.0], [152.0, 442.0], [167.0, 586.0], [166.0, 590.0], [165.0, 576.0], [164.0, 573.0], [163.0, 583.5], [161.0, 584.0], [160.0, 593.0], [175.0, 460.5], [173.0, 452.0], [171.0, 607.0], [170.0, 496.0], [169.0, 567.0], [168.0, 548.0], [183.0, 503.0], [182.0, 590.0], [181.0, 499.0], [180.0, 572.0], [177.0, 630.0], [176.0, 606.0], [191.0, 423.0], [190.0, 536.0], [189.0, 451.0], [188.0, 456.0], [187.0, 523.0], [186.0, 472.0], [185.0, 549.0], [184.0, 547.0], [199.0, 438.0], [198.0, 357.0], [197.0, 492.0], [196.0, 407.0], [195.0, 446.0], [193.0, 488.0], [192.0, 494.0], [200.0, 335.0], [1.0, 575.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[100.61000000000006, 541.7599999999999]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[3.0, 3168.5], [5.0, 3182.5], [6.0, 3154.0], [7.0, 3155.0], [9.0, 3148.5], [10.0, 3060.0], [11.0, 3003.0], [12.0, 3007.0], [13.0, 3079.0], [14.0, 2994.0], [15.0, 3001.0], [16.0, 3127.0], [17.0, 3057.0], [18.0, 3133.0], [19.0, 3122.0], [20.0, 3124.0], [21.0, 3006.0], [22.0, 3107.0], [23.0, 3054.0], [24.0, 2933.0], [26.0, 2998.5], [27.0, 2960.0], [28.0, 2740.0], [29.0, 2969.0], [30.0, 3070.0], [31.0, 3117.0], [33.0, 2960.0], [32.0, 2959.0], [35.0, 2996.0], [34.0, 2965.0], [37.0, 2968.0], [36.0, 3101.0], [39.0, 2971.0], [38.0, 2963.0], [41.0, 2770.0], [40.0, 2971.0], [43.0, 2374.0], [42.0, 2978.0], [45.0, 2714.0], [44.0, 2611.0], [47.0, 2439.5], [49.0, 2375.0], [48.0, 2607.0], [51.0, 2260.0], [50.0, 2319.0], [53.0, 2202.0], [52.0, 2233.0], [55.0, 2320.0], [54.0, 2381.0], [57.0, 2189.5], [59.0, 2174.0], [58.0, 2246.0], [61.0, 2332.0], [60.0, 2288.0], [63.0, 2229.0], [62.0, 2314.0], [67.0, 2269.0], [66.0, 2079.0], [65.0, 2238.0], [64.0, 2280.0], [71.0, 2272.0], [70.0, 2087.0], [69.0, 2285.0], [68.0, 2084.0], [75.0, 2127.0], [74.0, 2062.0], [73.0, 2277.0], [72.0, 2071.0], [79.0, 2061.0], [78.0, 2132.0], [77.0, 2066.0], [76.0, 2280.0], [83.0, 2085.0], [82.0, 2083.0], [81.0, 2071.0], [80.0, 1957.0], [87.0, 1983.0], [86.0, 2012.0], [85.0, 2028.5], [91.0, 2073.0], [89.0, 2083.0], [88.0, 2063.0], [95.0, 1986.0], [94.0, 2008.0], [93.0, 2014.0], [92.0, 2139.0], [99.0, 1966.0], [98.0, 1956.0], [97.0, 1961.0], [96.0, 1972.0], [103.0, 1536.0], [102.0, 1575.0], [101.0, 1847.0], [100.0, 1961.0], [107.0, 1339.0], [106.0, 1347.0], [105.0, 1485.0], [104.0, 1542.0], [111.0, 1361.0], [110.0, 1406.0], [109.0, 1372.0], [108.0, 1389.0], [114.0, 1418.0], [113.0, 1537.0], [112.0, 1372.0], [119.0, 1385.0], [118.0, 1380.0], [117.0, 1349.0], [116.0, 1411.0], [123.0, 1334.0], [122.0, 1352.0], [121.0, 1371.0], [120.0, 1354.0], [127.0, 1225.0], [126.0, 1352.0], [125.0, 1350.0], [124.0, 1330.0], [135.0, 1297.6666666666667], [132.0, 1293.0], [131.0, 1343.0], [130.0, 1347.0], [129.0, 1310.0], [128.0, 1224.0], [143.0, 1209.0], [142.0, 1261.0], [141.0, 1336.0], [140.0, 1365.0], [138.0, 1340.0], [137.0, 1339.0], [136.0, 1332.0], [151.0, 1380.0], [150.0, 1386.0], [149.0, 1217.0], [148.0, 1224.0], [147.0, 1349.0], [145.0, 1272.0], [144.0, 1423.0], [159.0, 404.5], [157.0, 402.0], [156.0, 536.0], [155.0, 339.0], [154.0, 520.0], [153.0, 808.0], [152.0, 1399.0], [167.0, 380.0], [166.0, 327.0], [165.0, 470.0], [164.0, 506.0], [163.0, 318.0], [161.0, 470.0], [160.0, 416.0], [175.0, 364.0], [173.0, 450.5], [171.0, 449.0], [170.0, 315.0], [169.0, 460.0], [168.0, 430.0], [183.0, 430.0], [182.0, 359.0], [181.0, 441.0], [180.0, 449.3333333333333], [177.0, 539.0], [176.0, 346.0], [191.0, 496.0], [190.0, 537.0], [189.0, 399.0], [188.0, 521.0], [187.0, 490.0], [186.0, 467.0], [185.0, 331.0], [184.0, 406.0], [199.0, 356.0], [198.0, 490.0], [197.0, 531.0], [196.0, 378.0], [195.0, 533.0], [193.0, 470.0], [192.0, 530.0], [200.0, 370.0], [1.0, 3199.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[100.61000000000006, 1732.3399999999995]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[3.0, 4050.5], [5.0, 4026.5], [6.0, 4027.0], [7.0, 4017.0], [9.0, 4006.5], [10.0, 4074.0], [11.0, 4084.0], [12.0, 4085.0], [13.0, 4020.0], [14.0, 4054.0], [15.0, 4041.0], [16.0, 3957.0], [17.0, 4005.0], [18.0, 3953.0], [19.0, 3963.0], [20.0, 3948.0], [21.0, 4001.0], [22.0, 3969.0], [23.0, 3993.0], [24.0, 3897.0], [26.0, 4020.0], [27.0, 4008.0], [28.0, 4061.0], [29.0, 4025.0], [30.0, 3931.0], [31.0, 3904.0], [33.0, 4014.0], [32.0, 4027.0], [35.0, 3961.0], [34.0, 3974.0], [37.0, 3959.0], [36.0, 3887.0], [39.0, 3897.0], [38.0, 3897.0], [41.0, 3759.0], [40.0, 3789.0], [43.0, 3743.0], [42.0, 3742.0], [45.0, 3661.0], [44.0, 3717.0], [47.0, 3681.0], [49.0, 3601.0], [48.0, 3601.0], [51.0, 3534.0], [50.0, 3503.0], [53.0, 3551.0], [52.0, 3546.0], [55.0, 3428.0], [54.0, 3434.0], [57.0, 3510.5], [59.0, 3474.0], [58.0, 3457.0], [61.0, 3348.0], [60.0, 3371.0], [63.0, 3394.0], [62.0, 3360.0], [67.0, 3337.0], [66.0, 3417.0], [65.0, 3386.0], [64.0, 3344.0], [71.0, 3262.0], [70.0, 3353.0], [69.0, 3279.0], [68.0, 3368.0], [75.0, 3280.0], [74.0, 3333.0], [73.0, 3218.0], [72.0, 3359.0], [79.0, 3284.0], [78.0, 3231.0], [77.0, 3283.0], [76.0, 3189.0], [83.0, 3321.0], [82.0, 3223.0], [81.0, 3325.0], [80.0, 3359.0], [87.0, 3249.0], [86.0, 3223.0], [85.0, 3219.0], [91.0, 3171.0], [89.0, 3148.0], [88.0, 3178.0], [95.0, 3131.0], [94.0, 3163.0], [93.0, 3204.0], [92.0, 3100.0], [99.0, 2909.0], [98.0, 2949.0], [97.0, 2997.0], [96.0, 2997.0], [103.0, 2649.0], [102.0, 2776.0], [101.0, 2871.0], [100.0, 2861.0], [107.0, 2623.0], [106.0, 2591.0], [105.0, 2558.0], [104.0, 2539.0], [111.0, 2529.0], [110.0, 2516.0], [109.0, 2531.0], [108.0, 2519.0], [114.0, 2444.0], [113.0, 2442.0], [112.0, 2532.0], [119.0, 2393.0], [118.0, 2450.0], [117.0, 2475.0], [116.0, 2439.5], [123.0, 2355.0], [122.0, 2421.0], [121.0, 2337.0], [120.0, 2449.0], [127.0, 2398.0], [126.0, 2352.0], [125.0, 2285.0], [124.0, 2363.0], [135.0, 2323.6666666666665], [132.0, 2309.0], [131.0, 2296.0], [130.0, 2614.0], [129.0, 2291.0], [128.0, 2395.0], [143.0, 2204.0], [142.0, 2247.0], [141.0, 2198.0], [140.0, 2325.5], [138.0, 2204.0], [137.0, 2302.0], [136.0, 2246.0], [151.0, 2379.0], [150.0, 2374.0], [149.0, 2139.0], [148.0, 2138.0], [147.0, 2306.5], [145.0, 2399.0], [144.0, 2445.0], [159.0, 1635.5], [157.0, 1640.0], [156.0, 1794.0], [155.0, 1613.0], [154.0, 1855.0], [153.0, 1807.0], [152.0, 2256.0], [167.0, 1525.0], [166.0, 1482.0], [165.0, 1631.0], [164.0, 1686.0], [163.0, 1513.5], [161.0, 1669.0], [160.0, 1640.0], [175.0, 1451.5], [173.0, 1555.5], [171.0, 1546.0], [170.0, 1431.0], [169.0, 1571.0], [168.0, 1572.0], [183.0, 1450.0], [182.0, 1389.0], [181.0, 1486.0], [180.0, 1526.3333333333333], [177.0, 1613.0], [176.0, 1431.0], [191.0, 1397.0], [190.0, 1442.0], [189.0, 1303.0], [188.0, 1456.0], [187.0, 1418.0], [186.0, 1410.0], [185.0, 1286.0], [184.0, 1419.0], [199.0, 1126.0], [198.0, 1323.0], [197.0, 1376.0], [196.0, 1213.0], [195.0, 1405.0], [193.0, 1349.0], [192.0, 1425.0], [200.0, 1096.0], [1.0, 4039.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[100.61000000000006, 2784.17]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2793.3333333333335, "minX": 1.70191872E12, "maxY": 44472.73333333333, "series": [{"data": [[1.70191872E12, 44472.73333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70191872E12, 2793.3333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191872E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 509.335, "minX": 1.70191872E12, "maxY": 2784.17, "series": [{"data": [[1.70191872E12, 509.335]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191872E12, 541.7599999999999]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191872E12, 1732.3399999999995]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191872E12, 2784.17]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191872E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 496.24000000000007, "minX": 1.70191872E12, "maxY": 1731.7350000000006, "series": [{"data": [[1.70191872E12, 496.24000000000007]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191872E12, 526.325]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191872E12, 1731.7350000000006]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191872E12, 1731.7350000000006]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191872E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70191872E12, "maxY": 1698.4950000000001, "series": [{"data": [[1.70191872E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191872E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191872E12, 1698.4950000000001]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191872E12, 1698.4950000000001]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191872E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 256.0, "minX": 1.70191872E12, "maxY": 4085.0, "series": [{"data": [[1.70191872E12, 4085.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70191872E12, 256.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70191872E12, 3247.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70191872E12, 4040.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70191872E12, 645.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70191872E12, 3787.499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191872E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 430.0, "minX": 26.0, "maxY": 2217.0, "series": [{"data": [[171.0, 722.0], [178.0, 697.5], [188.0, 702.0], [189.0, 633.0], [48.0, 430.0], [26.0, 2217.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 189.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 425.5, "minX": 26.0, "maxY": 1718.5, "series": [{"data": [[171.0, 702.0], [178.0, 643.0], [188.0, 536.5], [189.0, 631.0], [48.0, 425.5], [26.0, 1718.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 189.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.70191872E12, "maxY": 13.333333333333334, "series": [{"data": [[1.70191872E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191872E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.70191872E12, "maxY": 6.666666666666667, "series": [{"data": [[1.70191872E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70191872E12, 3.3333333333333335]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70191872E12, 3.3333333333333335]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191872E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.70191872E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.70191872E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70191872E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70191872E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.70191872E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191872E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.70191872E12, "maxY": 13.333333333333334, "series": [{"data": [[1.70191872E12, 13.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191872E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

