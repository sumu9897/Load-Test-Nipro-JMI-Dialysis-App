/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "maxY": 2214.0, "series": [{"data": [[0.0, 188.0], [0.1, 188.0], [0.2, 188.0], [0.3, 188.0], [0.4, 188.0], [0.5, 188.0], [0.6, 188.0], [0.7, 188.0], [0.8, 188.0], [0.9, 188.0], [1.0, 264.0], [1.1, 264.0], [1.2, 264.0], [1.3, 264.0], [1.4, 264.0], [1.5, 264.0], [1.6, 264.0], [1.7, 264.0], [1.8, 264.0], [1.9, 264.0], [2.0, 270.0], [2.1, 270.0], [2.2, 270.0], [2.3, 270.0], [2.4, 270.0], [2.5, 270.0], [2.6, 270.0], [2.7, 270.0], [2.8, 270.0], [2.9, 270.0], [3.0, 295.0], [3.1, 295.0], [3.2, 295.0], [3.3, 295.0], [3.4, 295.0], [3.5, 295.0], [3.6, 295.0], [3.7, 295.0], [3.8, 295.0], [3.9, 295.0], [4.0, 312.0], [4.1, 312.0], [4.2, 312.0], [4.3, 312.0], [4.4, 312.0], [4.5, 312.0], [4.6, 312.0], [4.7, 312.0], [4.8, 312.0], [4.9, 312.0], [5.0, 313.0], [5.1, 313.0], [5.2, 313.0], [5.3, 313.0], [5.4, 313.0], [5.5, 313.0], [5.6, 313.0], [5.7, 313.0], [5.8, 313.0], [5.9, 313.0], [6.0, 342.0], [6.1, 342.0], [6.2, 342.0], [6.3, 342.0], [6.4, 342.0], [6.5, 342.0], [6.6, 342.0], [6.7, 342.0], [6.8, 342.0], [6.9, 342.0], [7.0, 351.0], [7.1, 351.0], [7.2, 351.0], [7.3, 351.0], [7.4, 351.0], [7.5, 351.0], [7.6, 351.0], [7.7, 351.0], [7.8, 351.0], [7.9, 351.0], [8.0, 403.0], [8.1, 403.0], [8.2, 403.0], [8.3, 403.0], [8.4, 403.0], [8.5, 403.0], [8.6, 403.0], [8.7, 403.0], [8.8, 403.0], [8.9, 403.0], [9.0, 411.0], [9.1, 411.0], [9.2, 411.0], [9.3, 411.0], [9.4, 411.0], [9.5, 411.0], [9.6, 411.0], [9.7, 411.0], [9.8, 411.0], [9.9, 411.0], [10.0, 416.0], [10.1, 416.0], [10.2, 416.0], [10.3, 416.0], [10.4, 416.0], [10.5, 416.0], [10.6, 416.0], [10.7, 416.0], [10.8, 416.0], [10.9, 416.0], [11.0, 437.0], [11.1, 437.0], [11.2, 437.0], [11.3, 437.0], [11.4, 437.0], [11.5, 437.0], [11.6, 437.0], [11.7, 437.0], [11.8, 437.0], [11.9, 437.0], [12.0, 447.0], [12.1, 447.0], [12.2, 447.0], [12.3, 447.0], [12.4, 447.0], [12.5, 447.0], [12.6, 447.0], [12.7, 447.0], [12.8, 447.0], [12.9, 447.0], [13.0, 451.0], [13.1, 451.0], [13.2, 451.0], [13.3, 451.0], [13.4, 451.0], [13.5, 451.0], [13.6, 451.0], [13.7, 451.0], [13.8, 451.0], [13.9, 451.0], [14.0, 451.0], [14.1, 451.0], [14.2, 451.0], [14.3, 451.0], [14.4, 451.0], [14.5, 451.0], [14.6, 451.0], [14.7, 451.0], [14.8, 451.0], [14.9, 451.0], [15.0, 465.0], [15.1, 465.0], [15.2, 465.0], [15.3, 465.0], [15.4, 465.0], [15.5, 465.0], [15.6, 465.0], [15.7, 465.0], [15.8, 465.0], [15.9, 465.0], [16.0, 466.0], [16.1, 466.0], [16.2, 466.0], [16.3, 466.0], [16.4, 466.0], [16.5, 466.0], [16.6, 466.0], [16.7, 466.0], [16.8, 466.0], [16.9, 466.0], [17.0, 505.0], [17.1, 505.0], [17.2, 505.0], [17.3, 505.0], [17.4, 505.0], [17.5, 505.0], [17.6, 505.0], [17.7, 505.0], [17.8, 505.0], [17.9, 505.0], [18.0, 505.0], [18.1, 505.0], [18.2, 505.0], [18.3, 505.0], [18.4, 505.0], [18.5, 505.0], [18.6, 505.0], [18.7, 505.0], [18.8, 505.0], [18.9, 505.0], [19.0, 514.0], [19.1, 514.0], [19.2, 514.0], [19.3, 514.0], [19.4, 514.0], [19.5, 514.0], [19.6, 514.0], [19.7, 514.0], [19.8, 514.0], [19.9, 514.0], [20.0, 517.0], [20.1, 517.0], [20.2, 517.0], [20.3, 517.0], [20.4, 517.0], [20.5, 517.0], [20.6, 517.0], [20.7, 517.0], [20.8, 517.0], [20.9, 517.0], [21.0, 527.0], [21.1, 527.0], [21.2, 527.0], [21.3, 527.0], [21.4, 527.0], [21.5, 527.0], [21.6, 527.0], [21.7, 527.0], [21.8, 527.0], [21.9, 527.0], [22.0, 540.0], [22.1, 540.0], [22.2, 540.0], [22.3, 540.0], [22.4, 540.0], [22.5, 540.0], [22.6, 540.0], [22.7, 540.0], [22.8, 540.0], [22.9, 540.0], [23.0, 544.0], [23.1, 544.0], [23.2, 544.0], [23.3, 544.0], [23.4, 544.0], [23.5, 544.0], [23.6, 544.0], [23.7, 544.0], [23.8, 544.0], [23.9, 544.0], [24.0, 546.0], [24.1, 546.0], [24.2, 546.0], [24.3, 546.0], [24.4, 546.0], [24.5, 546.0], [24.6, 546.0], [24.7, 546.0], [24.8, 546.0], [24.9, 546.0], [25.0, 550.0], [25.1, 550.0], [25.2, 550.0], [25.3, 550.0], [25.4, 550.0], [25.5, 550.0], [25.6, 550.0], [25.7, 550.0], [25.8, 550.0], [25.9, 550.0], [26.0, 557.0], [26.1, 557.0], [26.2, 557.0], [26.3, 557.0], [26.4, 557.0], [26.5, 557.0], [26.6, 557.0], [26.7, 557.0], [26.8, 557.0], [26.9, 557.0], [27.0, 573.0], [27.1, 573.0], [27.2, 573.0], [27.3, 573.0], [27.4, 573.0], [27.5, 573.0], [27.6, 573.0], [27.7, 573.0], [27.8, 573.0], [27.9, 573.0], [28.0, 656.0], [28.1, 656.0], [28.2, 656.0], [28.3, 656.0], [28.4, 656.0], [28.5, 656.0], [28.6, 656.0], [28.7, 656.0], [28.8, 656.0], [28.9, 656.0], [29.0, 671.0], [29.1, 671.0], [29.2, 671.0], [29.3, 671.0], [29.4, 671.0], [29.5, 671.0], [29.6, 671.0], [29.7, 671.0], [29.8, 671.0], [29.9, 671.0], [30.0, 685.0], [30.1, 685.0], [30.2, 685.0], [30.3, 685.0], [30.4, 685.0], [30.5, 685.0], [30.6, 685.0], [30.7, 685.0], [30.8, 685.0], [30.9, 685.0], [31.0, 699.0], [31.1, 699.0], [31.2, 699.0], [31.3, 699.0], [31.4, 699.0], [31.5, 699.0], [31.6, 699.0], [31.7, 699.0], [31.8, 699.0], [31.9, 699.0], [32.0, 700.0], [32.1, 700.0], [32.2, 700.0], [32.3, 700.0], [32.4, 700.0], [32.5, 700.0], [32.6, 700.0], [32.7, 700.0], [32.8, 700.0], [32.9, 700.0], [33.0, 715.0], [33.1, 715.0], [33.2, 715.0], [33.3, 715.0], [33.4, 715.0], [33.5, 715.0], [33.6, 715.0], [33.7, 715.0], [33.8, 715.0], [33.9, 715.0], [34.0, 717.0], [34.1, 717.0], [34.2, 717.0], [34.3, 717.0], [34.4, 717.0], [34.5, 717.0], [34.6, 717.0], [34.7, 717.0], [34.8, 717.0], [34.9, 717.0], [35.0, 729.0], [35.1, 729.0], [35.2, 729.0], [35.3, 729.0], [35.4, 729.0], [35.5, 729.0], [35.6, 729.0], [35.7, 729.0], [35.8, 729.0], [35.9, 729.0], [36.0, 737.0], [36.1, 737.0], [36.2, 737.0], [36.3, 737.0], [36.4, 737.0], [36.5, 737.0], [36.6, 737.0], [36.7, 737.0], [36.8, 737.0], [36.9, 737.0], [37.0, 744.0], [37.1, 744.0], [37.2, 744.0], [37.3, 744.0], [37.4, 744.0], [37.5, 744.0], [37.6, 744.0], [37.7, 744.0], [37.8, 744.0], [37.9, 744.0], [38.0, 754.0], [38.1, 754.0], [38.2, 754.0], [38.3, 754.0], [38.4, 754.0], [38.5, 754.0], [38.6, 754.0], [38.7, 754.0], [38.8, 754.0], [38.9, 754.0], [39.0, 756.0], [39.1, 756.0], [39.2, 756.0], [39.3, 756.0], [39.4, 756.0], [39.5, 756.0], [39.6, 756.0], [39.7, 756.0], [39.8, 756.0], [39.9, 756.0], [40.0, 764.0], [40.1, 764.0], [40.2, 764.0], [40.3, 764.0], [40.4, 764.0], [40.5, 764.0], [40.6, 764.0], [40.7, 764.0], [40.8, 764.0], [40.9, 764.0], [41.0, 769.0], [41.1, 769.0], [41.2, 769.0], [41.3, 769.0], [41.4, 769.0], [41.5, 769.0], [41.6, 769.0], [41.7, 769.0], [41.8, 769.0], [41.9, 769.0], [42.0, 772.0], [42.1, 772.0], [42.2, 772.0], [42.3, 772.0], [42.4, 772.0], [42.5, 772.0], [42.6, 772.0], [42.7, 772.0], [42.8, 772.0], [42.9, 772.0], [43.0, 797.0], [43.1, 797.0], [43.2, 797.0], [43.3, 797.0], [43.4, 797.0], [43.5, 797.0], [43.6, 797.0], [43.7, 797.0], [43.8, 797.0], [43.9, 797.0], [44.0, 808.0], [44.1, 808.0], [44.2, 808.0], [44.3, 808.0], [44.4, 808.0], [44.5, 808.0], [44.6, 808.0], [44.7, 808.0], [44.8, 808.0], [44.9, 808.0], [45.0, 842.0], [45.1, 842.0], [45.2, 842.0], [45.3, 842.0], [45.4, 842.0], [45.5, 842.0], [45.6, 842.0], [45.7, 842.0], [45.8, 842.0], [45.9, 842.0], [46.0, 842.0], [46.1, 842.0], [46.2, 842.0], [46.3, 842.0], [46.4, 842.0], [46.5, 842.0], [46.6, 842.0], [46.7, 842.0], [46.8, 842.0], [46.9, 842.0], [47.0, 843.0], [47.1, 843.0], [47.2, 843.0], [47.3, 843.0], [47.4, 843.0], [47.5, 843.0], [47.6, 843.0], [47.7, 843.0], [47.8, 843.0], [47.9, 843.0], [48.0, 871.0], [48.1, 871.0], [48.2, 871.0], [48.3, 871.0], [48.4, 871.0], [48.5, 871.0], [48.6, 871.0], [48.7, 871.0], [48.8, 871.0], [48.9, 871.0], [49.0, 874.0], [49.1, 874.0], [49.2, 874.0], [49.3, 874.0], [49.4, 874.0], [49.5, 874.0], [49.6, 874.0], [49.7, 874.0], [49.8, 874.0], [49.9, 874.0], [50.0, 875.0], [50.1, 875.0], [50.2, 875.0], [50.3, 875.0], [50.4, 875.0], [50.5, 875.0], [50.6, 875.0], [50.7, 875.0], [50.8, 875.0], [50.9, 875.0], [51.0, 876.0], [51.1, 876.0], [51.2, 876.0], [51.3, 876.0], [51.4, 876.0], [51.5, 876.0], [51.6, 876.0], [51.7, 876.0], [51.8, 876.0], [51.9, 876.0], [52.0, 878.0], [52.1, 878.0], [52.2, 878.0], [52.3, 878.0], [52.4, 878.0], [52.5, 878.0], [52.6, 878.0], [52.7, 878.0], [52.8, 878.0], [52.9, 878.0], [53.0, 881.0], [53.1, 881.0], [53.2, 881.0], [53.3, 881.0], [53.4, 881.0], [53.5, 881.0], [53.6, 881.0], [53.7, 881.0], [53.8, 881.0], [53.9, 881.0], [54.0, 885.0], [54.1, 885.0], [54.2, 885.0], [54.3, 885.0], [54.4, 885.0], [54.5, 885.0], [54.6, 885.0], [54.7, 885.0], [54.8, 885.0], [54.9, 885.0], [55.0, 890.0], [55.1, 890.0], [55.2, 890.0], [55.3, 890.0], [55.4, 890.0], [55.5, 890.0], [55.6, 890.0], [55.7, 890.0], [55.8, 890.0], [55.9, 890.0], [56.0, 892.0], [56.1, 892.0], [56.2, 892.0], [56.3, 892.0], [56.4, 892.0], [56.5, 892.0], [56.6, 892.0], [56.7, 892.0], [56.8, 892.0], [56.9, 892.0], [57.0, 895.0], [57.1, 895.0], [57.2, 895.0], [57.3, 895.0], [57.4, 895.0], [57.5, 895.0], [57.6, 895.0], [57.7, 895.0], [57.8, 895.0], [57.9, 895.0], [58.0, 913.0], [58.1, 913.0], [58.2, 913.0], [58.3, 913.0], [58.4, 913.0], [58.5, 913.0], [58.6, 913.0], [58.7, 913.0], [58.8, 913.0], [58.9, 913.0], [59.0, 920.0], [59.1, 920.0], [59.2, 920.0], [59.3, 920.0], [59.4, 920.0], [59.5, 920.0], [59.6, 920.0], [59.7, 920.0], [59.8, 920.0], [59.9, 920.0], [60.0, 923.0], [60.1, 923.0], [60.2, 923.0], [60.3, 923.0], [60.4, 923.0], [60.5, 923.0], [60.6, 923.0], [60.7, 923.0], [60.8, 923.0], [60.9, 923.0], [61.0, 927.0], [61.1, 927.0], [61.2, 927.0], [61.3, 927.0], [61.4, 927.0], [61.5, 927.0], [61.6, 927.0], [61.7, 927.0], [61.8, 927.0], [61.9, 927.0], [62.0, 930.0], [62.1, 930.0], [62.2, 930.0], [62.3, 930.0], [62.4, 930.0], [62.5, 930.0], [62.6, 930.0], [62.7, 930.0], [62.8, 930.0], [62.9, 930.0], [63.0, 931.0], [63.1, 931.0], [63.2, 931.0], [63.3, 931.0], [63.4, 931.0], [63.5, 931.0], [63.6, 931.0], [63.7, 931.0], [63.8, 931.0], [63.9, 931.0], [64.0, 938.0], [64.1, 938.0], [64.2, 938.0], [64.3, 938.0], [64.4, 938.0], [64.5, 938.0], [64.6, 938.0], [64.7, 938.0], [64.8, 938.0], [64.9, 938.0], [65.0, 944.0], [65.1, 944.0], [65.2, 944.0], [65.3, 944.0], [65.4, 944.0], [65.5, 944.0], [65.6, 944.0], [65.7, 944.0], [65.8, 944.0], [65.9, 944.0], [66.0, 953.0], [66.1, 953.0], [66.2, 953.0], [66.3, 953.0], [66.4, 953.0], [66.5, 953.0], [66.6, 953.0], [66.7, 953.0], [66.8, 953.0], [66.9, 953.0], [67.0, 957.0], [67.1, 957.0], [67.2, 957.0], [67.3, 957.0], [67.4, 957.0], [67.5, 957.0], [67.6, 957.0], [67.7, 957.0], [67.8, 957.0], [67.9, 957.0], [68.0, 964.0], [68.1, 964.0], [68.2, 964.0], [68.3, 964.0], [68.4, 964.0], [68.5, 964.0], [68.6, 964.0], [68.7, 964.0], [68.8, 964.0], [68.9, 964.0], [69.0, 965.0], [69.1, 965.0], [69.2, 965.0], [69.3, 965.0], [69.4, 965.0], [69.5, 965.0], [69.6, 965.0], [69.7, 965.0], [69.8, 965.0], [69.9, 965.0], [70.0, 969.0], [70.1, 969.0], [70.2, 969.0], [70.3, 969.0], [70.4, 969.0], [70.5, 969.0], [70.6, 969.0], [70.7, 969.0], [70.8, 969.0], [70.9, 969.0], [71.0, 979.0], [71.1, 979.0], [71.2, 979.0], [71.3, 979.0], [71.4, 979.0], [71.5, 979.0], [71.6, 979.0], [71.7, 979.0], [71.8, 979.0], [71.9, 979.0], [72.0, 984.0], [72.1, 984.0], [72.2, 984.0], [72.3, 984.0], [72.4, 984.0], [72.5, 984.0], [72.6, 984.0], [72.7, 984.0], [72.8, 984.0], [72.9, 984.0], [73.0, 986.0], [73.1, 986.0], [73.2, 986.0], [73.3, 986.0], [73.4, 986.0], [73.5, 986.0], [73.6, 986.0], [73.7, 986.0], [73.8, 986.0], [73.9, 986.0], [74.0, 990.0], [74.1, 990.0], [74.2, 990.0], [74.3, 990.0], [74.4, 990.0], [74.5, 990.0], [74.6, 990.0], [74.7, 990.0], [74.8, 990.0], [74.9, 990.0], [75.0, 992.0], [75.1, 992.0], [75.2, 992.0], [75.3, 992.0], [75.4, 992.0], [75.5, 992.0], [75.6, 992.0], [75.7, 992.0], [75.8, 992.0], [75.9, 992.0], [76.0, 997.0], [76.1, 997.0], [76.2, 997.0], [76.3, 997.0], [76.4, 997.0], [76.5, 997.0], [76.6, 997.0], [76.7, 997.0], [76.8, 997.0], [76.9, 997.0], [77.0, 1001.0], [77.1, 1001.0], [77.2, 1001.0], [77.3, 1001.0], [77.4, 1001.0], [77.5, 1001.0], [77.6, 1001.0], [77.7, 1001.0], [77.8, 1001.0], [77.9, 1001.0], [78.0, 1001.0], [78.1, 1001.0], [78.2, 1001.0], [78.3, 1001.0], [78.4, 1001.0], [78.5, 1001.0], [78.6, 1001.0], [78.7, 1001.0], [78.8, 1001.0], [78.9, 1001.0], [79.0, 1005.0], [79.1, 1005.0], [79.2, 1005.0], [79.3, 1005.0], [79.4, 1005.0], [79.5, 1005.0], [79.6, 1005.0], [79.7, 1005.0], [79.8, 1005.0], [79.9, 1005.0], [80.0, 1009.0], [80.1, 1009.0], [80.2, 1009.0], [80.3, 1009.0], [80.4, 1009.0], [80.5, 1009.0], [80.6, 1009.0], [80.7, 1009.0], [80.8, 1009.0], [80.9, 1009.0], [81.0, 1010.0], [81.1, 1010.0], [81.2, 1010.0], [81.3, 1010.0], [81.4, 1010.0], [81.5, 1010.0], [81.6, 1010.0], [81.7, 1010.0], [81.8, 1010.0], [81.9, 1010.0], [82.0, 1013.0], [82.1, 1013.0], [82.2, 1013.0], [82.3, 1013.0], [82.4, 1013.0], [82.5, 1013.0], [82.6, 1013.0], [82.7, 1013.0], [82.8, 1013.0], [82.9, 1013.0], [83.0, 1020.0], [83.1, 1020.0], [83.2, 1020.0], [83.3, 1020.0], [83.4, 1020.0], [83.5, 1020.0], [83.6, 1020.0], [83.7, 1020.0], [83.8, 1020.0], [83.9, 1020.0], [84.0, 1020.0], [84.1, 1020.0], [84.2, 1020.0], [84.3, 1020.0], [84.4, 1020.0], [84.5, 1020.0], [84.6, 1020.0], [84.7, 1020.0], [84.8, 1020.0], [84.9, 1020.0], [85.0, 1023.0], [85.1, 1023.0], [85.2, 1023.0], [85.3, 1023.0], [85.4, 1023.0], [85.5, 1023.0], [85.6, 1023.0], [85.7, 1023.0], [85.8, 1023.0], [85.9, 1023.0], [86.0, 1034.0], [86.1, 1034.0], [86.2, 1034.0], [86.3, 1034.0], [86.4, 1034.0], [86.5, 1034.0], [86.6, 1034.0], [86.7, 1034.0], [86.8, 1034.0], [86.9, 1034.0], [87.0, 1054.0], [87.1, 1054.0], [87.2, 1054.0], [87.3, 1054.0], [87.4, 1054.0], [87.5, 1054.0], [87.6, 1054.0], [87.7, 1054.0], [87.8, 1054.0], [87.9, 1054.0], [88.0, 1055.0], [88.1, 1055.0], [88.2, 1055.0], [88.3, 1055.0], [88.4, 1055.0], [88.5, 1055.0], [88.6, 1055.0], [88.7, 1055.0], [88.8, 1055.0], [88.9, 1055.0], [89.0, 1060.0], [89.1, 1060.0], [89.2, 1060.0], [89.3, 1060.0], [89.4, 1060.0], [89.5, 1060.0], [89.6, 1060.0], [89.7, 1060.0], [89.8, 1060.0], [89.9, 1060.0], [90.0, 1065.0], [90.1, 1065.0], [90.2, 1065.0], [90.3, 1065.0], [90.4, 1065.0], [90.5, 1065.0], [90.6, 1065.0], [90.7, 1065.0], [90.8, 1065.0], [90.9, 1065.0], [91.0, 1067.0], [91.1, 1067.0], [91.2, 1067.0], [91.3, 1067.0], [91.4, 1067.0], [91.5, 1067.0], [91.6, 1067.0], [91.7, 1067.0], [91.8, 1067.0], [91.9, 1067.0], [92.0, 1076.0], [92.1, 1076.0], [92.2, 1076.0], [92.3, 1076.0], [92.4, 1076.0], [92.5, 1076.0], [92.6, 1076.0], [92.7, 1076.0], [92.8, 1076.0], [92.9, 1076.0], [93.0, 1080.0], [93.1, 1080.0], [93.2, 1080.0], [93.3, 1080.0], [93.4, 1080.0], [93.5, 1080.0], [93.6, 1080.0], [93.7, 1080.0], [93.8, 1080.0], [93.9, 1080.0], [94.0, 1092.0], [94.1, 1092.0], [94.2, 1092.0], [94.3, 1092.0], [94.4, 1092.0], [94.5, 1092.0], [94.6, 1092.0], [94.7, 1092.0], [94.8, 1092.0], [94.9, 1092.0], [95.0, 1107.0], [95.1, 1107.0], [95.2, 1107.0], [95.3, 1107.0], [95.4, 1107.0], [95.5, 1107.0], [95.6, 1107.0], [95.7, 1107.0], [95.8, 1107.0], [95.9, 1107.0], [96.0, 1137.0], [96.1, 1137.0], [96.2, 1137.0], [96.3, 1137.0], [96.4, 1137.0], [96.5, 1137.0], [96.6, 1137.0], [96.7, 1137.0], [96.8, 1137.0], [96.9, 1137.0], [97.0, 1192.0], [97.1, 1192.0], [97.2, 1192.0], [97.3, 1192.0], [97.4, 1192.0], [97.5, 1192.0], [97.6, 1192.0], [97.7, 1192.0], [97.8, 1192.0], [97.9, 1192.0], [98.0, 1195.0], [98.1, 1195.0], [98.2, 1195.0], [98.3, 1195.0], [98.4, 1195.0], [98.5, 1195.0], [98.6, 1195.0], [98.7, 1195.0], [98.8, 1195.0], [98.9, 1195.0], [99.0, 1261.0], [99.1, 1261.0], [99.2, 1261.0], [99.3, 1261.0], [99.4, 1261.0], [99.5, 1261.0], [99.6, 1261.0], [99.7, 1261.0], [99.8, 1261.0], [99.9, 1261.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 374.0], [0.1, 374.0], [0.2, 374.0], [0.3, 374.0], [0.4, 374.0], [0.5, 374.0], [0.6, 374.0], [0.7, 374.0], [0.8, 374.0], [0.9, 374.0], [1.0, 389.0], [1.1, 389.0], [1.2, 389.0], [1.3, 389.0], [1.4, 389.0], [1.5, 389.0], [1.6, 389.0], [1.7, 389.0], [1.8, 389.0], [1.9, 389.0], [2.0, 415.0], [2.1, 415.0], [2.2, 415.0], [2.3, 415.0], [2.4, 415.0], [2.5, 415.0], [2.6, 415.0], [2.7, 415.0], [2.8, 415.0], [2.9, 415.0], [3.0, 415.0], [3.1, 415.0], [3.2, 415.0], [3.3, 415.0], [3.4, 415.0], [3.5, 415.0], [3.6, 415.0], [3.7, 415.0], [3.8, 415.0], [3.9, 415.0], [4.0, 451.0], [4.1, 451.0], [4.2, 451.0], [4.3, 451.0], [4.4, 451.0], [4.5, 451.0], [4.6, 451.0], [4.7, 451.0], [4.8, 451.0], [4.9, 451.0], [5.0, 455.0], [5.1, 455.0], [5.2, 455.0], [5.3, 455.0], [5.4, 455.0], [5.5, 455.0], [5.6, 455.0], [5.7, 455.0], [5.8, 455.0], [5.9, 455.0], [6.0, 467.0], [6.1, 467.0], [6.2, 467.0], [6.3, 467.0], [6.4, 467.0], [6.5, 467.0], [6.6, 467.0], [6.7, 467.0], [6.8, 467.0], [6.9, 467.0], [7.0, 520.0], [7.1, 520.0], [7.2, 520.0], [7.3, 520.0], [7.4, 520.0], [7.5, 520.0], [7.6, 520.0], [7.7, 520.0], [7.8, 520.0], [7.9, 520.0], [8.0, 525.0], [8.1, 525.0], [8.2, 525.0], [8.3, 525.0], [8.4, 525.0], [8.5, 525.0], [8.6, 525.0], [8.7, 525.0], [8.8, 525.0], [8.9, 525.0], [9.0, 529.0], [9.1, 529.0], [9.2, 529.0], [9.3, 529.0], [9.4, 529.0], [9.5, 529.0], [9.6, 529.0], [9.7, 529.0], [9.8, 529.0], [9.9, 529.0], [10.0, 536.0], [10.1, 536.0], [10.2, 536.0], [10.3, 536.0], [10.4, 536.0], [10.5, 536.0], [10.6, 536.0], [10.7, 536.0], [10.8, 536.0], [10.9, 536.0], [11.0, 547.0], [11.1, 547.0], [11.2, 547.0], [11.3, 547.0], [11.4, 547.0], [11.5, 547.0], [11.6, 547.0], [11.7, 547.0], [11.8, 547.0], [11.9, 547.0], [12.0, 549.0], [12.1, 549.0], [12.2, 549.0], [12.3, 549.0], [12.4, 549.0], [12.5, 549.0], [12.6, 549.0], [12.7, 549.0], [12.8, 549.0], [12.9, 549.0], [13.0, 549.0], [13.1, 549.0], [13.2, 549.0], [13.3, 549.0], [13.4, 549.0], [13.5, 549.0], [13.6, 549.0], [13.7, 549.0], [13.8, 549.0], [13.9, 549.0], [14.0, 579.0], [14.1, 579.0], [14.2, 579.0], [14.3, 579.0], [14.4, 579.0], [14.5, 579.0], [14.6, 579.0], [14.7, 579.0], [14.8, 579.0], [14.9, 579.0], [15.0, 589.0], [15.1, 589.0], [15.2, 589.0], [15.3, 589.0], [15.4, 589.0], [15.5, 589.0], [15.6, 589.0], [15.7, 589.0], [15.8, 589.0], [15.9, 589.0], [16.0, 595.0], [16.1, 595.0], [16.2, 595.0], [16.3, 595.0], [16.4, 595.0], [16.5, 595.0], [16.6, 595.0], [16.7, 595.0], [16.8, 595.0], [16.9, 595.0], [17.0, 598.0], [17.1, 598.0], [17.2, 598.0], [17.3, 598.0], [17.4, 598.0], [17.5, 598.0], [17.6, 598.0], [17.7, 598.0], [17.8, 598.0], [17.9, 598.0], [18.0, 600.0], [18.1, 600.0], [18.2, 600.0], [18.3, 600.0], [18.4, 600.0], [18.5, 600.0], [18.6, 600.0], [18.7, 600.0], [18.8, 600.0], [18.9, 600.0], [19.0, 604.0], [19.1, 604.0], [19.2, 604.0], [19.3, 604.0], [19.4, 604.0], [19.5, 604.0], [19.6, 604.0], [19.7, 604.0], [19.8, 604.0], [19.9, 604.0], [20.0, 604.0], [20.1, 604.0], [20.2, 604.0], [20.3, 604.0], [20.4, 604.0], [20.5, 604.0], [20.6, 604.0], [20.7, 604.0], [20.8, 604.0], [20.9, 604.0], [21.0, 610.0], [21.1, 610.0], [21.2, 610.0], [21.3, 610.0], [21.4, 610.0], [21.5, 610.0], [21.6, 610.0], [21.7, 610.0], [21.8, 610.0], [21.9, 610.0], [22.0, 617.0], [22.1, 617.0], [22.2, 617.0], [22.3, 617.0], [22.4, 617.0], [22.5, 617.0], [22.6, 617.0], [22.7, 617.0], [22.8, 617.0], [22.9, 617.0], [23.0, 624.0], [23.1, 624.0], [23.2, 624.0], [23.3, 624.0], [23.4, 624.0], [23.5, 624.0], [23.6, 624.0], [23.7, 624.0], [23.8, 624.0], [23.9, 624.0], [24.0, 626.0], [24.1, 626.0], [24.2, 626.0], [24.3, 626.0], [24.4, 626.0], [24.5, 626.0], [24.6, 626.0], [24.7, 626.0], [24.8, 626.0], [24.9, 626.0], [25.0, 628.0], [25.1, 628.0], [25.2, 628.0], [25.3, 628.0], [25.4, 628.0], [25.5, 628.0], [25.6, 628.0], [25.7, 628.0], [25.8, 628.0], [25.9, 628.0], [26.0, 636.0], [26.1, 636.0], [26.2, 636.0], [26.3, 636.0], [26.4, 636.0], [26.5, 636.0], [26.6, 636.0], [26.7, 636.0], [26.8, 636.0], [26.9, 636.0], [27.0, 652.0], [27.1, 652.0], [27.2, 652.0], [27.3, 652.0], [27.4, 652.0], [27.5, 652.0], [27.6, 652.0], [27.7, 652.0], [27.8, 652.0], [27.9, 652.0], [28.0, 652.0], [28.1, 652.0], [28.2, 652.0], [28.3, 652.0], [28.4, 652.0], [28.5, 652.0], [28.6, 652.0], [28.7, 652.0], [28.8, 652.0], [28.9, 652.0], [29.0, 663.0], [29.1, 663.0], [29.2, 663.0], [29.3, 663.0], [29.4, 663.0], [29.5, 663.0], [29.6, 663.0], [29.7, 663.0], [29.8, 663.0], [29.9, 663.0], [30.0, 665.0], [30.1, 665.0], [30.2, 665.0], [30.3, 665.0], [30.4, 665.0], [30.5, 665.0], [30.6, 665.0], [30.7, 665.0], [30.8, 665.0], [30.9, 665.0], [31.0, 708.0], [31.1, 708.0], [31.2, 708.0], [31.3, 708.0], [31.4, 708.0], [31.5, 708.0], [31.6, 708.0], [31.7, 708.0], [31.8, 708.0], [31.9, 708.0], [32.0, 717.0], [32.1, 717.0], [32.2, 717.0], [32.3, 717.0], [32.4, 717.0], [32.5, 717.0], [32.6, 717.0], [32.7, 717.0], [32.8, 717.0], [32.9, 717.0], [33.0, 722.0], [33.1, 722.0], [33.2, 722.0], [33.3, 722.0], [33.4, 722.0], [33.5, 722.0], [33.6, 722.0], [33.7, 722.0], [33.8, 722.0], [33.9, 722.0], [34.0, 732.0], [34.1, 732.0], [34.2, 732.0], [34.3, 732.0], [34.4, 732.0], [34.5, 732.0], [34.6, 732.0], [34.7, 732.0], [34.8, 732.0], [34.9, 732.0], [35.0, 743.0], [35.1, 743.0], [35.2, 743.0], [35.3, 743.0], [35.4, 743.0], [35.5, 743.0], [35.6, 743.0], [35.7, 743.0], [35.8, 743.0], [35.9, 743.0], [36.0, 747.0], [36.1, 747.0], [36.2, 747.0], [36.3, 747.0], [36.4, 747.0], [36.5, 747.0], [36.6, 747.0], [36.7, 747.0], [36.8, 747.0], [36.9, 747.0], [37.0, 756.0], [37.1, 756.0], [37.2, 756.0], [37.3, 756.0], [37.4, 756.0], [37.5, 756.0], [37.6, 756.0], [37.7, 756.0], [37.8, 756.0], [37.9, 756.0], [38.0, 764.0], [38.1, 764.0], [38.2, 764.0], [38.3, 764.0], [38.4, 764.0], [38.5, 764.0], [38.6, 764.0], [38.7, 764.0], [38.8, 764.0], [38.9, 764.0], [39.0, 770.0], [39.1, 770.0], [39.2, 770.0], [39.3, 770.0], [39.4, 770.0], [39.5, 770.0], [39.6, 770.0], [39.7, 770.0], [39.8, 770.0], [39.9, 770.0], [40.0, 772.0], [40.1, 772.0], [40.2, 772.0], [40.3, 772.0], [40.4, 772.0], [40.5, 772.0], [40.6, 772.0], [40.7, 772.0], [40.8, 772.0], [40.9, 772.0], [41.0, 785.0], [41.1, 785.0], [41.2, 785.0], [41.3, 785.0], [41.4, 785.0], [41.5, 785.0], [41.6, 785.0], [41.7, 785.0], [41.8, 785.0], [41.9, 785.0], [42.0, 786.0], [42.1, 786.0], [42.2, 786.0], [42.3, 786.0], [42.4, 786.0], [42.5, 786.0], [42.6, 786.0], [42.7, 786.0], [42.8, 786.0], [42.9, 786.0], [43.0, 802.0], [43.1, 802.0], [43.2, 802.0], [43.3, 802.0], [43.4, 802.0], [43.5, 802.0], [43.6, 802.0], [43.7, 802.0], [43.8, 802.0], [43.9, 802.0], [44.0, 822.0], [44.1, 822.0], [44.2, 822.0], [44.3, 822.0], [44.4, 822.0], [44.5, 822.0], [44.6, 822.0], [44.7, 822.0], [44.8, 822.0], [44.9, 822.0], [45.0, 833.0], [45.1, 833.0], [45.2, 833.0], [45.3, 833.0], [45.4, 833.0], [45.5, 833.0], [45.6, 833.0], [45.7, 833.0], [45.8, 833.0], [45.9, 833.0], [46.0, 835.0], [46.1, 835.0], [46.2, 835.0], [46.3, 835.0], [46.4, 835.0], [46.5, 835.0], [46.6, 835.0], [46.7, 835.0], [46.8, 835.0], [46.9, 835.0], [47.0, 839.0], [47.1, 839.0], [47.2, 839.0], [47.3, 839.0], [47.4, 839.0], [47.5, 839.0], [47.6, 839.0], [47.7, 839.0], [47.8, 839.0], [47.9, 839.0], [48.0, 842.0], [48.1, 842.0], [48.2, 842.0], [48.3, 842.0], [48.4, 842.0], [48.5, 842.0], [48.6, 842.0], [48.7, 842.0], [48.8, 842.0], [48.9, 842.0], [49.0, 843.0], [49.1, 843.0], [49.2, 843.0], [49.3, 843.0], [49.4, 843.0], [49.5, 843.0], [49.6, 843.0], [49.7, 843.0], [49.8, 843.0], [49.9, 843.0], [50.0, 845.0], [50.1, 845.0], [50.2, 845.0], [50.3, 845.0], [50.4, 845.0], [50.5, 845.0], [50.6, 845.0], [50.7, 845.0], [50.8, 845.0], [50.9, 845.0], [51.0, 852.0], [51.1, 852.0], [51.2, 852.0], [51.3, 852.0], [51.4, 852.0], [51.5, 852.0], [51.6, 852.0], [51.7, 852.0], [51.8, 852.0], [51.9, 852.0], [52.0, 865.0], [52.1, 865.0], [52.2, 865.0], [52.3, 865.0], [52.4, 865.0], [52.5, 865.0], [52.6, 865.0], [52.7, 865.0], [52.8, 865.0], [52.9, 865.0], [53.0, 867.0], [53.1, 867.0], [53.2, 867.0], [53.3, 867.0], [53.4, 867.0], [53.5, 867.0], [53.6, 867.0], [53.7, 867.0], [53.8, 867.0], [53.9, 867.0], [54.0, 871.0], [54.1, 871.0], [54.2, 871.0], [54.3, 871.0], [54.4, 871.0], [54.5, 871.0], [54.6, 871.0], [54.7, 871.0], [54.8, 871.0], [54.9, 871.0], [55.0, 881.0], [55.1, 881.0], [55.2, 881.0], [55.3, 881.0], [55.4, 881.0], [55.5, 881.0], [55.6, 881.0], [55.7, 881.0], [55.8, 881.0], [55.9, 881.0], [56.0, 891.0], [56.1, 891.0], [56.2, 891.0], [56.3, 891.0], [56.4, 891.0], [56.5, 891.0], [56.6, 891.0], [56.7, 891.0], [56.8, 891.0], [56.9, 891.0], [57.0, 908.0], [57.1, 908.0], [57.2, 908.0], [57.3, 908.0], [57.4, 908.0], [57.5, 908.0], [57.6, 908.0], [57.7, 908.0], [57.8, 908.0], [57.9, 908.0], [58.0, 913.0], [58.1, 913.0], [58.2, 913.0], [58.3, 913.0], [58.4, 913.0], [58.5, 913.0], [58.6, 913.0], [58.7, 913.0], [58.8, 913.0], [58.9, 913.0], [59.0, 916.0], [59.1, 916.0], [59.2, 916.0], [59.3, 916.0], [59.4, 916.0], [59.5, 916.0], [59.6, 916.0], [59.7, 916.0], [59.8, 916.0], [59.9, 916.0], [60.0, 917.0], [60.1, 917.0], [60.2, 917.0], [60.3, 917.0], [60.4, 917.0], [60.5, 917.0], [60.6, 917.0], [60.7, 917.0], [60.8, 917.0], [60.9, 917.0], [61.0, 918.0], [61.1, 918.0], [61.2, 918.0], [61.3, 918.0], [61.4, 918.0], [61.5, 918.0], [61.6, 918.0], [61.7, 918.0], [61.8, 918.0], [61.9, 918.0], [62.0, 918.0], [62.1, 918.0], [62.2, 918.0], [62.3, 918.0], [62.4, 918.0], [62.5, 918.0], [62.6, 918.0], [62.7, 918.0], [62.8, 918.0], [62.9, 918.0], [63.0, 932.0], [63.1, 932.0], [63.2, 932.0], [63.3, 932.0], [63.4, 932.0], [63.5, 932.0], [63.6, 932.0], [63.7, 932.0], [63.8, 932.0], [63.9, 932.0], [64.0, 936.0], [64.1, 936.0], [64.2, 936.0], [64.3, 936.0], [64.4, 936.0], [64.5, 936.0], [64.6, 936.0], [64.7, 936.0], [64.8, 936.0], [64.9, 936.0], [65.0, 938.0], [65.1, 938.0], [65.2, 938.0], [65.3, 938.0], [65.4, 938.0], [65.5, 938.0], [65.6, 938.0], [65.7, 938.0], [65.8, 938.0], [65.9, 938.0], [66.0, 941.0], [66.1, 941.0], [66.2, 941.0], [66.3, 941.0], [66.4, 941.0], [66.5, 941.0], [66.6, 941.0], [66.7, 941.0], [66.8, 941.0], [66.9, 941.0], [67.0, 944.0], [67.1, 944.0], [67.2, 944.0], [67.3, 944.0], [67.4, 944.0], [67.5, 944.0], [67.6, 944.0], [67.7, 944.0], [67.8, 944.0], [67.9, 944.0], [68.0, 946.0], [68.1, 946.0], [68.2, 946.0], [68.3, 946.0], [68.4, 946.0], [68.5, 946.0], [68.6, 946.0], [68.7, 946.0], [68.8, 946.0], [68.9, 946.0], [69.0, 961.0], [69.1, 961.0], [69.2, 961.0], [69.3, 961.0], [69.4, 961.0], [69.5, 961.0], [69.6, 961.0], [69.7, 961.0], [69.8, 961.0], [69.9, 961.0], [70.0, 965.0], [70.1, 965.0], [70.2, 965.0], [70.3, 965.0], [70.4, 965.0], [70.5, 965.0], [70.6, 965.0], [70.7, 965.0], [70.8, 965.0], [70.9, 965.0], [71.0, 968.0], [71.1, 968.0], [71.2, 968.0], [71.3, 968.0], [71.4, 968.0], [71.5, 968.0], [71.6, 968.0], [71.7, 968.0], [71.8, 968.0], [71.9, 968.0], [72.0, 976.0], [72.1, 976.0], [72.2, 976.0], [72.3, 976.0], [72.4, 976.0], [72.5, 976.0], [72.6, 976.0], [72.7, 976.0], [72.8, 976.0], [72.9, 976.0], [73.0, 977.0], [73.1, 977.0], [73.2, 977.0], [73.3, 977.0], [73.4, 977.0], [73.5, 977.0], [73.6, 977.0], [73.7, 977.0], [73.8, 977.0], [73.9, 977.0], [74.0, 991.0], [74.1, 991.0], [74.2, 991.0], [74.3, 991.0], [74.4, 991.0], [74.5, 991.0], [74.6, 991.0], [74.7, 991.0], [74.8, 991.0], [74.9, 991.0], [75.0, 993.0], [75.1, 993.0], [75.2, 993.0], [75.3, 993.0], [75.4, 993.0], [75.5, 993.0], [75.6, 993.0], [75.7, 993.0], [75.8, 993.0], [75.9, 993.0], [76.0, 995.0], [76.1, 995.0], [76.2, 995.0], [76.3, 995.0], [76.4, 995.0], [76.5, 995.0], [76.6, 995.0], [76.7, 995.0], [76.8, 995.0], [76.9, 995.0], [77.0, 1002.0], [77.1, 1002.0], [77.2, 1002.0], [77.3, 1002.0], [77.4, 1002.0], [77.5, 1002.0], [77.6, 1002.0], [77.7, 1002.0], [77.8, 1002.0], [77.9, 1002.0], [78.0, 1016.0], [78.1, 1016.0], [78.2, 1016.0], [78.3, 1016.0], [78.4, 1016.0], [78.5, 1016.0], [78.6, 1016.0], [78.7, 1016.0], [78.8, 1016.0], [78.9, 1016.0], [79.0, 1043.0], [79.1, 1043.0], [79.2, 1043.0], [79.3, 1043.0], [79.4, 1043.0], [79.5, 1043.0], [79.6, 1043.0], [79.7, 1043.0], [79.8, 1043.0], [79.9, 1043.0], [80.0, 1062.0], [80.1, 1062.0], [80.2, 1062.0], [80.3, 1062.0], [80.4, 1062.0], [80.5, 1062.0], [80.6, 1062.0], [80.7, 1062.0], [80.8, 1062.0], [80.9, 1062.0], [81.0, 1071.0], [81.1, 1071.0], [81.2, 1071.0], [81.3, 1071.0], [81.4, 1071.0], [81.5, 1071.0], [81.6, 1071.0], [81.7, 1071.0], [81.8, 1071.0], [81.9, 1071.0], [82.0, 1071.0], [82.1, 1071.0], [82.2, 1071.0], [82.3, 1071.0], [82.4, 1071.0], [82.5, 1071.0], [82.6, 1071.0], [82.7, 1071.0], [82.8, 1071.0], [82.9, 1071.0], [83.0, 1077.0], [83.1, 1077.0], [83.2, 1077.0], [83.3, 1077.0], [83.4, 1077.0], [83.5, 1077.0], [83.6, 1077.0], [83.7, 1077.0], [83.8, 1077.0], [83.9, 1077.0], [84.0, 1094.0], [84.1, 1094.0], [84.2, 1094.0], [84.3, 1094.0], [84.4, 1094.0], [84.5, 1094.0], [84.6, 1094.0], [84.7, 1094.0], [84.8, 1094.0], [84.9, 1094.0], [85.0, 1107.0], [85.1, 1107.0], [85.2, 1107.0], [85.3, 1107.0], [85.4, 1107.0], [85.5, 1107.0], [85.6, 1107.0], [85.7, 1107.0], [85.8, 1107.0], [85.9, 1107.0], [86.0, 1108.0], [86.1, 1108.0], [86.2, 1108.0], [86.3, 1108.0], [86.4, 1108.0], [86.5, 1108.0], [86.6, 1108.0], [86.7, 1108.0], [86.8, 1108.0], [86.9, 1108.0], [87.0, 1108.0], [87.1, 1108.0], [87.2, 1108.0], [87.3, 1108.0], [87.4, 1108.0], [87.5, 1108.0], [87.6, 1108.0], [87.7, 1108.0], [87.8, 1108.0], [87.9, 1108.0], [88.0, 1110.0], [88.1, 1110.0], [88.2, 1110.0], [88.3, 1110.0], [88.4, 1110.0], [88.5, 1110.0], [88.6, 1110.0], [88.7, 1110.0], [88.8, 1110.0], [88.9, 1110.0], [89.0, 1113.0], [89.1, 1113.0], [89.2, 1113.0], [89.3, 1113.0], [89.4, 1113.0], [89.5, 1113.0], [89.6, 1113.0], [89.7, 1113.0], [89.8, 1113.0], [89.9, 1113.0], [90.0, 1114.0], [90.1, 1114.0], [90.2, 1114.0], [90.3, 1114.0], [90.4, 1114.0], [90.5, 1114.0], [90.6, 1114.0], [90.7, 1114.0], [90.8, 1114.0], [90.9, 1114.0], [91.0, 1121.0], [91.1, 1121.0], [91.2, 1121.0], [91.3, 1121.0], [91.4, 1121.0], [91.5, 1121.0], [91.6, 1121.0], [91.7, 1121.0], [91.8, 1121.0], [91.9, 1121.0], [92.0, 1146.0], [92.1, 1146.0], [92.2, 1146.0], [92.3, 1146.0], [92.4, 1146.0], [92.5, 1146.0], [92.6, 1146.0], [92.7, 1146.0], [92.8, 1146.0], [92.9, 1146.0], [93.0, 1151.0], [93.1, 1151.0], [93.2, 1151.0], [93.3, 1151.0], [93.4, 1151.0], [93.5, 1151.0], [93.6, 1151.0], [93.7, 1151.0], [93.8, 1151.0], [93.9, 1151.0], [94.0, 1237.0], [94.1, 1237.0], [94.2, 1237.0], [94.3, 1237.0], [94.4, 1237.0], [94.5, 1237.0], [94.6, 1237.0], [94.7, 1237.0], [94.8, 1237.0], [94.9, 1237.0], [95.0, 1264.0], [95.1, 1264.0], [95.2, 1264.0], [95.3, 1264.0], [95.4, 1264.0], [95.5, 1264.0], [95.6, 1264.0], [95.7, 1264.0], [95.8, 1264.0], [95.9, 1264.0], [96.0, 1306.0], [96.1, 1306.0], [96.2, 1306.0], [96.3, 1306.0], [96.4, 1306.0], [96.5, 1306.0], [96.6, 1306.0], [96.7, 1306.0], [96.8, 1306.0], [96.9, 1306.0], [97.0, 1324.0], [97.1, 1324.0], [97.2, 1324.0], [97.3, 1324.0], [97.4, 1324.0], [97.5, 1324.0], [97.6, 1324.0], [97.7, 1324.0], [97.8, 1324.0], [97.9, 1324.0], [98.0, 1354.0], [98.1, 1354.0], [98.2, 1354.0], [98.3, 1354.0], [98.4, 1354.0], [98.5, 1354.0], [98.6, 1354.0], [98.7, 1354.0], [98.8, 1354.0], [98.9, 1354.0], [99.0, 1397.0], [99.1, 1397.0], [99.2, 1397.0], [99.3, 1397.0], [99.4, 1397.0], [99.5, 1397.0], [99.6, 1397.0], [99.7, 1397.0], [99.8, 1397.0], [99.9, 1397.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 20.0], [0.1, 20.0], [0.2, 20.0], [0.3, 20.0], [0.4, 20.0], [0.5, 20.0], [0.6, 20.0], [0.7, 20.0], [0.8, 20.0], [0.9, 20.0], [1.0, 23.0], [1.1, 23.0], [1.2, 23.0], [1.3, 23.0], [1.4, 23.0], [1.5, 23.0], [1.6, 23.0], [1.7, 23.0], [1.8, 23.0], [1.9, 23.0], [2.0, 24.0], [2.1, 24.0], [2.2, 24.0], [2.3, 24.0], [2.4, 24.0], [2.5, 24.0], [2.6, 24.0], [2.7, 24.0], [2.8, 24.0], [2.9, 24.0], [3.0, 24.0], [3.1, 24.0], [3.2, 24.0], [3.3, 24.0], [3.4, 24.0], [3.5, 24.0], [3.6, 24.0], [3.7, 24.0], [3.8, 24.0], [3.9, 24.0], [4.0, 24.0], [4.1, 24.0], [4.2, 24.0], [4.3, 24.0], [4.4, 24.0], [4.5, 24.0], [4.6, 24.0], [4.7, 24.0], [4.8, 24.0], [4.9, 24.0], [5.0, 25.0], [5.1, 25.0], [5.2, 25.0], [5.3, 25.0], [5.4, 25.0], [5.5, 25.0], [5.6, 25.0], [5.7, 25.0], [5.8, 25.0], [5.9, 25.0], [6.0, 26.0], [6.1, 26.0], [6.2, 26.0], [6.3, 26.0], [6.4, 26.0], [6.5, 26.0], [6.6, 26.0], [6.7, 26.0], [6.8, 26.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 26.0], [7.3, 26.0], [7.4, 26.0], [7.5, 26.0], [7.6, 26.0], [7.7, 26.0], [7.8, 26.0], [7.9, 26.0], [8.0, 26.0], [8.1, 26.0], [8.2, 26.0], [8.3, 26.0], [8.4, 26.0], [8.5, 26.0], [8.6, 26.0], [8.7, 26.0], [8.8, 26.0], [8.9, 26.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 28.0], [10.1, 28.0], [10.2, 28.0], [10.3, 28.0], [10.4, 28.0], [10.5, 28.0], [10.6, 28.0], [10.7, 28.0], [10.8, 28.0], [10.9, 28.0], [11.0, 28.0], [11.1, 28.0], [11.2, 28.0], [11.3, 28.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 29.0], [12.1, 29.0], [12.2, 29.0], [12.3, 29.0], [12.4, 29.0], [12.5, 29.0], [12.6, 29.0], [12.7, 29.0], [12.8, 29.0], [12.9, 29.0], [13.0, 30.0], [13.1, 30.0], [13.2, 30.0], [13.3, 30.0], [13.4, 30.0], [13.5, 30.0], [13.6, 30.0], [13.7, 30.0], [13.8, 30.0], [13.9, 30.0], [14.0, 31.0], [14.1, 31.0], [14.2, 31.0], [14.3, 31.0], [14.4, 31.0], [14.5, 31.0], [14.6, 31.0], [14.7, 31.0], [14.8, 31.0], [14.9, 31.0], [15.0, 31.0], [15.1, 31.0], [15.2, 31.0], [15.3, 31.0], [15.4, 31.0], [15.5, 31.0], [15.6, 31.0], [15.7, 31.0], [15.8, 31.0], [15.9, 31.0], [16.0, 31.0], [16.1, 31.0], [16.2, 31.0], [16.3, 31.0], [16.4, 31.0], [16.5, 31.0], [16.6, 31.0], [16.7, 31.0], [16.8, 31.0], [16.9, 31.0], [17.0, 31.0], [17.1, 31.0], [17.2, 31.0], [17.3, 31.0], [17.4, 31.0], [17.5, 31.0], [17.6, 31.0], [17.7, 31.0], [17.8, 31.0], [17.9, 31.0], [18.0, 31.0], [18.1, 31.0], [18.2, 31.0], [18.3, 31.0], [18.4, 31.0], [18.5, 31.0], [18.6, 31.0], [18.7, 31.0], [18.8, 31.0], [18.9, 31.0], [19.0, 32.0], [19.1, 32.0], [19.2, 32.0], [19.3, 32.0], [19.4, 32.0], [19.5, 32.0], [19.6, 32.0], [19.7, 32.0], [19.8, 32.0], [19.9, 32.0], [20.0, 32.0], [20.1, 32.0], [20.2, 32.0], [20.3, 32.0], [20.4, 32.0], [20.5, 32.0], [20.6, 32.0], [20.7, 32.0], [20.8, 32.0], [20.9, 32.0], [21.0, 32.0], [21.1, 32.0], [21.2, 32.0], [21.3, 32.0], [21.4, 32.0], [21.5, 32.0], [21.6, 32.0], [21.7, 32.0], [21.8, 32.0], [21.9, 32.0], [22.0, 32.0], [22.1, 32.0], [22.2, 32.0], [22.3, 32.0], [22.4, 32.0], [22.5, 32.0], [22.6, 32.0], [22.7, 32.0], [22.8, 32.0], [22.9, 32.0], [23.0, 33.0], [23.1, 33.0], [23.2, 33.0], [23.3, 33.0], [23.4, 33.0], [23.5, 33.0], [23.6, 33.0], [23.7, 33.0], [23.8, 33.0], [23.9, 33.0], [24.0, 33.0], [24.1, 33.0], [24.2, 33.0], [24.3, 33.0], [24.4, 33.0], [24.5, 33.0], [24.6, 33.0], [24.7, 33.0], [24.8, 33.0], [24.9, 33.0], [25.0, 34.0], [25.1, 34.0], [25.2, 34.0], [25.3, 34.0], [25.4, 34.0], [25.5, 34.0], [25.6, 34.0], [25.7, 34.0], [25.8, 34.0], [25.9, 34.0], [26.0, 34.0], [26.1, 34.0], [26.2, 34.0], [26.3, 34.0], [26.4, 34.0], [26.5, 34.0], [26.6, 34.0], [26.7, 34.0], [26.8, 34.0], [26.9, 34.0], [27.0, 34.0], [27.1, 34.0], [27.2, 34.0], [27.3, 34.0], [27.4, 34.0], [27.5, 34.0], [27.6, 34.0], [27.7, 34.0], [27.8, 34.0], [27.9, 34.0], [28.0, 34.0], [28.1, 34.0], [28.2, 34.0], [28.3, 34.0], [28.4, 34.0], [28.5, 34.0], [28.6, 34.0], [28.7, 34.0], [28.8, 34.0], [28.9, 34.0], [29.0, 35.0], [29.1, 35.0], [29.2, 35.0], [29.3, 35.0], [29.4, 35.0], [29.5, 35.0], [29.6, 35.0], [29.7, 35.0], [29.8, 35.0], [29.9, 35.0], [30.0, 37.0], [30.1, 37.0], [30.2, 37.0], [30.3, 37.0], [30.4, 37.0], [30.5, 37.0], [30.6, 37.0], [30.7, 37.0], [30.8, 37.0], [30.9, 37.0], [31.0, 37.0], [31.1, 37.0], [31.2, 37.0], [31.3, 37.0], [31.4, 37.0], [31.5, 37.0], [31.6, 37.0], [31.7, 37.0], [31.8, 37.0], [31.9, 37.0], [32.0, 38.0], [32.1, 38.0], [32.2, 38.0], [32.3, 38.0], [32.4, 38.0], [32.5, 38.0], [32.6, 38.0], [32.7, 38.0], [32.8, 38.0], [32.9, 38.0], [33.0, 41.0], [33.1, 41.0], [33.2, 41.0], [33.3, 41.0], [33.4, 41.0], [33.5, 41.0], [33.6, 41.0], [33.7, 41.0], [33.8, 41.0], [33.9, 41.0], [34.0, 41.0], [34.1, 41.0], [34.2, 41.0], [34.3, 41.0], [34.4, 41.0], [34.5, 41.0], [34.6, 41.0], [34.7, 41.0], [34.8, 41.0], [34.9, 41.0], [35.0, 41.0], [35.1, 41.0], [35.2, 41.0], [35.3, 41.0], [35.4, 41.0], [35.5, 41.0], [35.6, 41.0], [35.7, 41.0], [35.8, 41.0], [35.9, 41.0], [36.0, 41.0], [36.1, 41.0], [36.2, 41.0], [36.3, 41.0], [36.4, 41.0], [36.5, 41.0], [36.6, 41.0], [36.7, 41.0], [36.8, 41.0], [36.9, 41.0], [37.0, 42.0], [37.1, 42.0], [37.2, 42.0], [37.3, 42.0], [37.4, 42.0], [37.5, 42.0], [37.6, 42.0], [37.7, 42.0], [37.8, 42.0], [37.9, 42.0], [38.0, 42.0], [38.1, 42.0], [38.2, 42.0], [38.3, 42.0], [38.4, 42.0], [38.5, 42.0], [38.6, 42.0], [38.7, 42.0], [38.8, 42.0], [38.9, 42.0], [39.0, 42.0], [39.1, 42.0], [39.2, 42.0], [39.3, 42.0], [39.4, 42.0], [39.5, 42.0], [39.6, 42.0], [39.7, 42.0], [39.8, 42.0], [39.9, 42.0], [40.0, 42.0], [40.1, 42.0], [40.2, 42.0], [40.3, 42.0], [40.4, 42.0], [40.5, 42.0], [40.6, 42.0], [40.7, 42.0], [40.8, 42.0], [40.9, 42.0], [41.0, 43.0], [41.1, 43.0], [41.2, 43.0], [41.3, 43.0], [41.4, 43.0], [41.5, 43.0], [41.6, 43.0], [41.7, 43.0], [41.8, 43.0], [41.9, 43.0], [42.0, 43.0], [42.1, 43.0], [42.2, 43.0], [42.3, 43.0], [42.4, 43.0], [42.5, 43.0], [42.6, 43.0], [42.7, 43.0], [42.8, 43.0], [42.9, 43.0], [43.0, 43.0], [43.1, 43.0], [43.2, 43.0], [43.3, 43.0], [43.4, 43.0], [43.5, 43.0], [43.6, 43.0], [43.7, 43.0], [43.8, 43.0], [43.9, 43.0], [44.0, 47.0], [44.1, 47.0], [44.2, 47.0], [44.3, 47.0], [44.4, 47.0], [44.5, 47.0], [44.6, 47.0], [44.7, 47.0], [44.8, 47.0], [44.9, 47.0], [45.0, 47.0], [45.1, 47.0], [45.2, 47.0], [45.3, 47.0], [45.4, 47.0], [45.5, 47.0], [45.6, 47.0], [45.7, 47.0], [45.8, 47.0], [45.9, 47.0], [46.0, 49.0], [46.1, 49.0], [46.2, 49.0], [46.3, 49.0], [46.4, 49.0], [46.5, 49.0], [46.6, 49.0], [46.7, 49.0], [46.8, 49.0], [46.9, 49.0], [47.0, 51.0], [47.1, 51.0], [47.2, 51.0], [47.3, 51.0], [47.4, 51.0], [47.5, 51.0], [47.6, 51.0], [47.7, 51.0], [47.8, 51.0], [47.9, 51.0], [48.0, 51.0], [48.1, 51.0], [48.2, 51.0], [48.3, 51.0], [48.4, 51.0], [48.5, 51.0], [48.6, 51.0], [48.7, 51.0], [48.8, 51.0], [48.9, 51.0], [49.0, 55.0], [49.1, 55.0], [49.2, 55.0], [49.3, 55.0], [49.4, 55.0], [49.5, 55.0], [49.6, 55.0], [49.7, 55.0], [49.8, 55.0], [49.9, 55.0], [50.0, 56.0], [50.1, 56.0], [50.2, 56.0], [50.3, 56.0], [50.4, 56.0], [50.5, 56.0], [50.6, 56.0], [50.7, 56.0], [50.8, 56.0], [50.9, 56.0], [51.0, 57.0], [51.1, 57.0], [51.2, 57.0], [51.3, 57.0], [51.4, 57.0], [51.5, 57.0], [51.6, 57.0], [51.7, 57.0], [51.8, 57.0], [51.9, 57.0], [52.0, 57.0], [52.1, 57.0], [52.2, 57.0], [52.3, 57.0], [52.4, 57.0], [52.5, 57.0], [52.6, 57.0], [52.7, 57.0], [52.8, 57.0], [52.9, 57.0], [53.0, 57.0], [53.1, 57.0], [53.2, 57.0], [53.3, 57.0], [53.4, 57.0], [53.5, 57.0], [53.6, 57.0], [53.7, 57.0], [53.8, 57.0], [53.9, 57.0], [54.0, 60.0], [54.1, 60.0], [54.2, 60.0], [54.3, 60.0], [54.4, 60.0], [54.5, 60.0], [54.6, 60.0], [54.7, 60.0], [54.8, 60.0], [54.9, 60.0], [55.0, 64.0], [55.1, 64.0], [55.2, 64.0], [55.3, 64.0], [55.4, 64.0], [55.5, 64.0], [55.6, 64.0], [55.7, 64.0], [55.8, 64.0], [55.9, 64.0], [56.0, 66.0], [56.1, 66.0], [56.2, 66.0], [56.3, 66.0], [56.4, 66.0], [56.5, 66.0], [56.6, 66.0], [56.7, 66.0], [56.8, 66.0], [56.9, 66.0], [57.0, 68.0], [57.1, 68.0], [57.2, 68.0], [57.3, 68.0], [57.4, 68.0], [57.5, 68.0], [57.6, 68.0], [57.7, 68.0], [57.8, 68.0], [57.9, 68.0], [58.0, 69.0], [58.1, 69.0], [58.2, 69.0], [58.3, 69.0], [58.4, 69.0], [58.5, 69.0], [58.6, 69.0], [58.7, 69.0], [58.8, 69.0], [58.9, 69.0], [59.0, 70.0], [59.1, 70.0], [59.2, 70.0], [59.3, 70.0], [59.4, 70.0], [59.5, 70.0], [59.6, 70.0], [59.7, 70.0], [59.8, 70.0], [59.9, 70.0], [60.0, 72.0], [60.1, 72.0], [60.2, 72.0], [60.3, 72.0], [60.4, 72.0], [60.5, 72.0], [60.6, 72.0], [60.7, 72.0], [60.8, 72.0], [60.9, 72.0], [61.0, 74.0], [61.1, 74.0], [61.2, 74.0], [61.3, 74.0], [61.4, 74.0], [61.5, 74.0], [61.6, 74.0], [61.7, 74.0], [61.8, 74.0], [61.9, 74.0], [62.0, 76.0], [62.1, 76.0], [62.2, 76.0], [62.3, 76.0], [62.4, 76.0], [62.5, 76.0], [62.6, 76.0], [62.7, 76.0], [62.8, 76.0], [62.9, 76.0], [63.0, 82.0], [63.1, 82.0], [63.2, 82.0], [63.3, 82.0], [63.4, 82.0], [63.5, 82.0], [63.6, 82.0], [63.7, 82.0], [63.8, 82.0], [63.9, 82.0], [64.0, 83.0], [64.1, 83.0], [64.2, 83.0], [64.3, 83.0], [64.4, 83.0], [64.5, 83.0], [64.6, 83.0], [64.7, 83.0], [64.8, 83.0], [64.9, 83.0], [65.0, 87.0], [65.1, 87.0], [65.2, 87.0], [65.3, 87.0], [65.4, 87.0], [65.5, 87.0], [65.6, 87.0], [65.7, 87.0], [65.8, 87.0], [65.9, 87.0], [66.0, 89.0], [66.1, 89.0], [66.2, 89.0], [66.3, 89.0], [66.4, 89.0], [66.5, 89.0], [66.6, 89.0], [66.7, 89.0], [66.8, 89.0], [66.9, 89.0], [67.0, 96.0], [67.1, 96.0], [67.2, 96.0], [67.3, 96.0], [67.4, 96.0], [67.5, 96.0], [67.6, 96.0], [67.7, 96.0], [67.8, 96.0], [67.9, 96.0], [68.0, 98.0], [68.1, 98.0], [68.2, 98.0], [68.3, 98.0], [68.4, 98.0], [68.5, 98.0], [68.6, 98.0], [68.7, 98.0], [68.8, 98.0], [68.9, 98.0], [69.0, 105.0], [69.1, 105.0], [69.2, 105.0], [69.3, 105.0], [69.4, 105.0], [69.5, 105.0], [69.6, 105.0], [69.7, 105.0], [69.8, 105.0], [69.9, 105.0], [70.0, 107.0], [70.1, 107.0], [70.2, 107.0], [70.3, 107.0], [70.4, 107.0], [70.5, 107.0], [70.6, 107.0], [70.7, 107.0], [70.8, 107.0], [70.9, 107.0], [71.0, 109.0], [71.1, 109.0], [71.2, 109.0], [71.3, 109.0], [71.4, 109.0], [71.5, 109.0], [71.6, 109.0], [71.7, 109.0], [71.8, 109.0], [71.9, 109.0], [72.0, 114.0], [72.1, 114.0], [72.2, 114.0], [72.3, 114.0], [72.4, 114.0], [72.5, 114.0], [72.6, 114.0], [72.7, 114.0], [72.8, 114.0], [72.9, 114.0], [73.0, 115.0], [73.1, 115.0], [73.2, 115.0], [73.3, 115.0], [73.4, 115.0], [73.5, 115.0], [73.6, 115.0], [73.7, 115.0], [73.8, 115.0], [73.9, 115.0], [74.0, 125.0], [74.1, 125.0], [74.2, 125.0], [74.3, 125.0], [74.4, 125.0], [74.5, 125.0], [74.6, 125.0], [74.7, 125.0], [74.8, 125.0], [74.9, 125.0], [75.0, 126.0], [75.1, 126.0], [75.2, 126.0], [75.3, 126.0], [75.4, 126.0], [75.5, 126.0], [75.6, 126.0], [75.7, 126.0], [75.8, 126.0], [75.9, 126.0], [76.0, 126.0], [76.1, 126.0], [76.2, 126.0], [76.3, 126.0], [76.4, 126.0], [76.5, 126.0], [76.6, 126.0], [76.7, 126.0], [76.8, 126.0], [76.9, 126.0], [77.0, 130.0], [77.1, 130.0], [77.2, 130.0], [77.3, 130.0], [77.4, 130.0], [77.5, 130.0], [77.6, 130.0], [77.7, 130.0], [77.8, 130.0], [77.9, 130.0], [78.0, 144.0], [78.1, 144.0], [78.2, 144.0], [78.3, 144.0], [78.4, 144.0], [78.5, 144.0], [78.6, 144.0], [78.7, 144.0], [78.8, 144.0], [78.9, 144.0], [79.0, 156.0], [79.1, 156.0], [79.2, 156.0], [79.3, 156.0], [79.4, 156.0], [79.5, 156.0], [79.6, 156.0], [79.7, 156.0], [79.8, 156.0], [79.9, 156.0], [80.0, 168.0], [80.1, 168.0], [80.2, 168.0], [80.3, 168.0], [80.4, 168.0], [80.5, 168.0], [80.6, 168.0], [80.7, 168.0], [80.8, 168.0], [80.9, 168.0], [81.0, 173.0], [81.1, 173.0], [81.2, 173.0], [81.3, 173.0], [81.4, 173.0], [81.5, 173.0], [81.6, 173.0], [81.7, 173.0], [81.8, 173.0], [81.9, 173.0], [82.0, 183.0], [82.1, 183.0], [82.2, 183.0], [82.3, 183.0], [82.4, 183.0], [82.5, 183.0], [82.6, 183.0], [82.7, 183.0], [82.8, 183.0], [82.9, 183.0], [83.0, 193.0], [83.1, 193.0], [83.2, 193.0], [83.3, 193.0], [83.4, 193.0], [83.5, 193.0], [83.6, 193.0], [83.7, 193.0], [83.8, 193.0], [83.9, 193.0], [84.0, 207.0], [84.1, 207.0], [84.2, 207.0], [84.3, 207.0], [84.4, 207.0], [84.5, 207.0], [84.6, 207.0], [84.7, 207.0], [84.8, 207.0], [84.9, 207.0], [85.0, 214.0], [85.1, 214.0], [85.2, 214.0], [85.3, 214.0], [85.4, 214.0], [85.5, 214.0], [85.6, 214.0], [85.7, 214.0], [85.8, 214.0], [85.9, 214.0], [86.0, 224.0], [86.1, 224.0], [86.2, 224.0], [86.3, 224.0], [86.4, 224.0], [86.5, 224.0], [86.6, 224.0], [86.7, 224.0], [86.8, 224.0], [86.9, 224.0], [87.0, 238.0], [87.1, 238.0], [87.2, 238.0], [87.3, 238.0], [87.4, 238.0], [87.5, 238.0], [87.6, 238.0], [87.7, 238.0], [87.8, 238.0], [87.9, 238.0], [88.0, 249.0], [88.1, 249.0], [88.2, 249.0], [88.3, 249.0], [88.4, 249.0], [88.5, 249.0], [88.6, 249.0], [88.7, 249.0], [88.8, 249.0], [88.9, 249.0], [89.0, 253.0], [89.1, 253.0], [89.2, 253.0], [89.3, 253.0], [89.4, 253.0], [89.5, 253.0], [89.6, 253.0], [89.7, 253.0], [89.8, 253.0], [89.9, 253.0], [90.0, 259.0], [90.1, 259.0], [90.2, 259.0], [90.3, 259.0], [90.4, 259.0], [90.5, 259.0], [90.6, 259.0], [90.7, 259.0], [90.8, 259.0], [90.9, 259.0], [91.0, 264.0], [91.1, 264.0], [91.2, 264.0], [91.3, 264.0], [91.4, 264.0], [91.5, 264.0], [91.6, 264.0], [91.7, 264.0], [91.8, 264.0], [91.9, 264.0], [92.0, 275.0], [92.1, 275.0], [92.2, 275.0], [92.3, 275.0], [92.4, 275.0], [92.5, 275.0], [92.6, 275.0], [92.7, 275.0], [92.8, 275.0], [92.9, 275.0], [93.0, 283.0], [93.1, 283.0], [93.2, 283.0], [93.3, 283.0], [93.4, 283.0], [93.5, 283.0], [93.6, 283.0], [93.7, 283.0], [93.8, 283.0], [93.9, 283.0], [94.0, 283.0], [94.1, 283.0], [94.2, 283.0], [94.3, 283.0], [94.4, 283.0], [94.5, 283.0], [94.6, 283.0], [94.7, 283.0], [94.8, 283.0], [94.9, 283.0], [95.0, 283.0], [95.1, 283.0], [95.2, 283.0], [95.3, 283.0], [95.4, 283.0], [95.5, 283.0], [95.6, 283.0], [95.7, 283.0], [95.8, 283.0], [95.9, 283.0], [96.0, 285.0], [96.1, 285.0], [96.2, 285.0], [96.3, 285.0], [96.4, 285.0], [96.5, 285.0], [96.6, 285.0], [96.7, 285.0], [96.8, 285.0], [96.9, 285.0], [97.0, 285.0], [97.1, 285.0], [97.2, 285.0], [97.3, 285.0], [97.4, 285.0], [97.5, 285.0], [97.6, 285.0], [97.7, 285.0], [97.8, 285.0], [97.9, 285.0], [98.0, 286.0], [98.1, 286.0], [98.2, 286.0], [98.3, 286.0], [98.4, 286.0], [98.5, 286.0], [98.6, 286.0], [98.7, 286.0], [98.8, 286.0], [98.9, 286.0], [99.0, 1028.0], [99.1, 1028.0], [99.2, 1028.0], [99.3, 1028.0], [99.4, 1028.0], [99.5, 1028.0], [99.6, 1028.0], [99.7, 1028.0], [99.8, 1028.0], [99.9, 1028.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 1310.0], [0.1, 1310.0], [0.2, 1310.0], [0.3, 1310.0], [0.4, 1310.0], [0.5, 1310.0], [0.6, 1310.0], [0.7, 1310.0], [0.8, 1310.0], [0.9, 1310.0], [1.0, 1352.0], [1.1, 1352.0], [1.2, 1352.0], [1.3, 1352.0], [1.4, 1352.0], [1.5, 1352.0], [1.6, 1352.0], [1.7, 1352.0], [1.8, 1352.0], [1.9, 1352.0], [2.0, 1441.0], [2.1, 1441.0], [2.2, 1441.0], [2.3, 1441.0], [2.4, 1441.0], [2.5, 1441.0], [2.6, 1441.0], [2.7, 1441.0], [2.8, 1441.0], [2.9, 1441.0], [3.0, 1445.0], [3.1, 1445.0], [3.2, 1445.0], [3.3, 1445.0], [3.4, 1445.0], [3.5, 1445.0], [3.6, 1445.0], [3.7, 1445.0], [3.8, 1445.0], [3.9, 1445.0], [4.0, 1450.0], [4.1, 1450.0], [4.2, 1450.0], [4.3, 1450.0], [4.4, 1450.0], [4.5, 1450.0], [4.6, 1450.0], [4.7, 1450.0], [4.8, 1450.0], [4.9, 1450.0], [5.0, 1451.0], [5.1, 1451.0], [5.2, 1451.0], [5.3, 1451.0], [5.4, 1451.0], [5.5, 1451.0], [5.6, 1451.0], [5.7, 1451.0], [5.8, 1451.0], [5.9, 1451.0], [6.0, 1475.0], [6.1, 1475.0], [6.2, 1475.0], [6.3, 1475.0], [6.4, 1475.0], [6.5, 1475.0], [6.6, 1475.0], [6.7, 1475.0], [6.8, 1475.0], [6.9, 1475.0], [7.0, 1488.0], [7.1, 1488.0], [7.2, 1488.0], [7.3, 1488.0], [7.4, 1488.0], [7.5, 1488.0], [7.6, 1488.0], [7.7, 1488.0], [7.8, 1488.0], [7.9, 1488.0], [8.0, 1490.0], [8.1, 1490.0], [8.2, 1490.0], [8.3, 1490.0], [8.4, 1490.0], [8.5, 1490.0], [8.6, 1490.0], [8.7, 1490.0], [8.8, 1490.0], [8.9, 1490.0], [9.0, 1490.0], [9.1, 1490.0], [9.2, 1490.0], [9.3, 1490.0], [9.4, 1490.0], [9.5, 1490.0], [9.6, 1490.0], [9.7, 1490.0], [9.8, 1490.0], [9.9, 1490.0], [10.0, 1510.0], [10.1, 1510.0], [10.2, 1510.0], [10.3, 1510.0], [10.4, 1510.0], [10.5, 1510.0], [10.6, 1510.0], [10.7, 1510.0], [10.8, 1510.0], [10.9, 1510.0], [11.0, 1512.0], [11.1, 1512.0], [11.2, 1512.0], [11.3, 1512.0], [11.4, 1512.0], [11.5, 1512.0], [11.6, 1512.0], [11.7, 1512.0], [11.8, 1512.0], [11.9, 1512.0], [12.0, 1531.0], [12.1, 1531.0], [12.2, 1531.0], [12.3, 1531.0], [12.4, 1531.0], [12.5, 1531.0], [12.6, 1531.0], [12.7, 1531.0], [12.8, 1531.0], [12.9, 1531.0], [13.0, 1536.0], [13.1, 1536.0], [13.2, 1536.0], [13.3, 1536.0], [13.4, 1536.0], [13.5, 1536.0], [13.6, 1536.0], [13.7, 1536.0], [13.8, 1536.0], [13.9, 1536.0], [14.0, 1544.0], [14.1, 1544.0], [14.2, 1544.0], [14.3, 1544.0], [14.4, 1544.0], [14.5, 1544.0], [14.6, 1544.0], [14.7, 1544.0], [14.8, 1544.0], [14.9, 1544.0], [15.0, 1554.0], [15.1, 1554.0], [15.2, 1554.0], [15.3, 1554.0], [15.4, 1554.0], [15.5, 1554.0], [15.6, 1554.0], [15.7, 1554.0], [15.8, 1554.0], [15.9, 1554.0], [16.0, 1556.0], [16.1, 1556.0], [16.2, 1556.0], [16.3, 1556.0], [16.4, 1556.0], [16.5, 1556.0], [16.6, 1556.0], [16.7, 1556.0], [16.8, 1556.0], [16.9, 1556.0], [17.0, 1566.0], [17.1, 1566.0], [17.2, 1566.0], [17.3, 1566.0], [17.4, 1566.0], [17.5, 1566.0], [17.6, 1566.0], [17.7, 1566.0], [17.8, 1566.0], [17.9, 1566.0], [18.0, 1582.0], [18.1, 1582.0], [18.2, 1582.0], [18.3, 1582.0], [18.4, 1582.0], [18.5, 1582.0], [18.6, 1582.0], [18.7, 1582.0], [18.8, 1582.0], [18.9, 1582.0], [19.0, 1596.0], [19.1, 1596.0], [19.2, 1596.0], [19.3, 1596.0], [19.4, 1596.0], [19.5, 1596.0], [19.6, 1596.0], [19.7, 1596.0], [19.8, 1596.0], [19.9, 1596.0], [20.0, 1597.0], [20.1, 1597.0], [20.2, 1597.0], [20.3, 1597.0], [20.4, 1597.0], [20.5, 1597.0], [20.6, 1597.0], [20.7, 1597.0], [20.8, 1597.0], [20.9, 1597.0], [21.0, 1605.0], [21.1, 1605.0], [21.2, 1605.0], [21.3, 1605.0], [21.4, 1605.0], [21.5, 1605.0], [21.6, 1605.0], [21.7, 1605.0], [21.8, 1605.0], [21.9, 1605.0], [22.0, 1617.0], [22.1, 1617.0], [22.2, 1617.0], [22.3, 1617.0], [22.4, 1617.0], [22.5, 1617.0], [22.6, 1617.0], [22.7, 1617.0], [22.8, 1617.0], [22.9, 1617.0], [23.0, 1617.0], [23.1, 1617.0], [23.2, 1617.0], [23.3, 1617.0], [23.4, 1617.0], [23.5, 1617.0], [23.6, 1617.0], [23.7, 1617.0], [23.8, 1617.0], [23.9, 1617.0], [24.0, 1619.0], [24.1, 1619.0], [24.2, 1619.0], [24.3, 1619.0], [24.4, 1619.0], [24.5, 1619.0], [24.6, 1619.0], [24.7, 1619.0], [24.8, 1619.0], [24.9, 1619.0], [25.0, 1620.0], [25.1, 1620.0], [25.2, 1620.0], [25.3, 1620.0], [25.4, 1620.0], [25.5, 1620.0], [25.6, 1620.0], [25.7, 1620.0], [25.8, 1620.0], [25.9, 1620.0], [26.0, 1629.0], [26.1, 1629.0], [26.2, 1629.0], [26.3, 1629.0], [26.4, 1629.0], [26.5, 1629.0], [26.6, 1629.0], [26.7, 1629.0], [26.8, 1629.0], [26.9, 1629.0], [27.0, 1632.0], [27.1, 1632.0], [27.2, 1632.0], [27.3, 1632.0], [27.4, 1632.0], [27.5, 1632.0], [27.6, 1632.0], [27.7, 1632.0], [27.8, 1632.0], [27.9, 1632.0], [28.0, 1634.0], [28.1, 1634.0], [28.2, 1634.0], [28.3, 1634.0], [28.4, 1634.0], [28.5, 1634.0], [28.6, 1634.0], [28.7, 1634.0], [28.8, 1634.0], [28.9, 1634.0], [29.0, 1634.0], [29.1, 1634.0], [29.2, 1634.0], [29.3, 1634.0], [29.4, 1634.0], [29.5, 1634.0], [29.6, 1634.0], [29.7, 1634.0], [29.8, 1634.0], [29.9, 1634.0], [30.0, 1640.0], [30.1, 1640.0], [30.2, 1640.0], [30.3, 1640.0], [30.4, 1640.0], [30.5, 1640.0], [30.6, 1640.0], [30.7, 1640.0], [30.8, 1640.0], [30.9, 1640.0], [31.0, 1643.0], [31.1, 1643.0], [31.2, 1643.0], [31.3, 1643.0], [31.4, 1643.0], [31.5, 1643.0], [31.6, 1643.0], [31.7, 1643.0], [31.8, 1643.0], [31.9, 1643.0], [32.0, 1656.0], [32.1, 1656.0], [32.2, 1656.0], [32.3, 1656.0], [32.4, 1656.0], [32.5, 1656.0], [32.6, 1656.0], [32.7, 1656.0], [32.8, 1656.0], [32.9, 1656.0], [33.0, 1660.0], [33.1, 1660.0], [33.2, 1660.0], [33.3, 1660.0], [33.4, 1660.0], [33.5, 1660.0], [33.6, 1660.0], [33.7, 1660.0], [33.8, 1660.0], [33.9, 1660.0], [34.0, 1664.0], [34.1, 1664.0], [34.2, 1664.0], [34.3, 1664.0], [34.4, 1664.0], [34.5, 1664.0], [34.6, 1664.0], [34.7, 1664.0], [34.8, 1664.0], [34.9, 1664.0], [35.0, 1668.0], [35.1, 1668.0], [35.2, 1668.0], [35.3, 1668.0], [35.4, 1668.0], [35.5, 1668.0], [35.6, 1668.0], [35.7, 1668.0], [35.8, 1668.0], [35.9, 1668.0], [36.0, 1675.0], [36.1, 1675.0], [36.2, 1675.0], [36.3, 1675.0], [36.4, 1675.0], [36.5, 1675.0], [36.6, 1675.0], [36.7, 1675.0], [36.8, 1675.0], [36.9, 1675.0], [37.0, 1675.0], [37.1, 1675.0], [37.2, 1675.0], [37.3, 1675.0], [37.4, 1675.0], [37.5, 1675.0], [37.6, 1675.0], [37.7, 1675.0], [37.8, 1675.0], [37.9, 1675.0], [38.0, 1691.0], [38.1, 1691.0], [38.2, 1691.0], [38.3, 1691.0], [38.4, 1691.0], [38.5, 1691.0], [38.6, 1691.0], [38.7, 1691.0], [38.8, 1691.0], [38.9, 1691.0], [39.0, 1692.0], [39.1, 1692.0], [39.2, 1692.0], [39.3, 1692.0], [39.4, 1692.0], [39.5, 1692.0], [39.6, 1692.0], [39.7, 1692.0], [39.8, 1692.0], [39.9, 1692.0], [40.0, 1692.0], [40.1, 1692.0], [40.2, 1692.0], [40.3, 1692.0], [40.4, 1692.0], [40.5, 1692.0], [40.6, 1692.0], [40.7, 1692.0], [40.8, 1692.0], [40.9, 1692.0], [41.0, 1692.0], [41.1, 1692.0], [41.2, 1692.0], [41.3, 1692.0], [41.4, 1692.0], [41.5, 1692.0], [41.6, 1692.0], [41.7, 1692.0], [41.8, 1692.0], [41.9, 1692.0], [42.0, 1695.0], [42.1, 1695.0], [42.2, 1695.0], [42.3, 1695.0], [42.4, 1695.0], [42.5, 1695.0], [42.6, 1695.0], [42.7, 1695.0], [42.8, 1695.0], [42.9, 1695.0], [43.0, 1698.0], [43.1, 1698.0], [43.2, 1698.0], [43.3, 1698.0], [43.4, 1698.0], [43.5, 1698.0], [43.6, 1698.0], [43.7, 1698.0], [43.8, 1698.0], [43.9, 1698.0], [44.0, 1708.0], [44.1, 1708.0], [44.2, 1708.0], [44.3, 1708.0], [44.4, 1708.0], [44.5, 1708.0], [44.6, 1708.0], [44.7, 1708.0], [44.8, 1708.0], [44.9, 1708.0], [45.0, 1709.0], [45.1, 1709.0], [45.2, 1709.0], [45.3, 1709.0], [45.4, 1709.0], [45.5, 1709.0], [45.6, 1709.0], [45.7, 1709.0], [45.8, 1709.0], [45.9, 1709.0], [46.0, 1715.0], [46.1, 1715.0], [46.2, 1715.0], [46.3, 1715.0], [46.4, 1715.0], [46.5, 1715.0], [46.6, 1715.0], [46.7, 1715.0], [46.8, 1715.0], [46.9, 1715.0], [47.0, 1716.0], [47.1, 1716.0], [47.2, 1716.0], [47.3, 1716.0], [47.4, 1716.0], [47.5, 1716.0], [47.6, 1716.0], [47.7, 1716.0], [47.8, 1716.0], [47.9, 1716.0], [48.0, 1718.0], [48.1, 1718.0], [48.2, 1718.0], [48.3, 1718.0], [48.4, 1718.0], [48.5, 1718.0], [48.6, 1718.0], [48.7, 1718.0], [48.8, 1718.0], [48.9, 1718.0], [49.0, 1728.0], [49.1, 1728.0], [49.2, 1728.0], [49.3, 1728.0], [49.4, 1728.0], [49.5, 1728.0], [49.6, 1728.0], [49.7, 1728.0], [49.8, 1728.0], [49.9, 1728.0], [50.0, 1735.0], [50.1, 1735.0], [50.2, 1735.0], [50.3, 1735.0], [50.4, 1735.0], [50.5, 1735.0], [50.6, 1735.0], [50.7, 1735.0], [50.8, 1735.0], [50.9, 1735.0], [51.0, 1737.0], [51.1, 1737.0], [51.2, 1737.0], [51.3, 1737.0], [51.4, 1737.0], [51.5, 1737.0], [51.6, 1737.0], [51.7, 1737.0], [51.8, 1737.0], [51.9, 1737.0], [52.0, 1741.0], [52.1, 1741.0], [52.2, 1741.0], [52.3, 1741.0], [52.4, 1741.0], [52.5, 1741.0], [52.6, 1741.0], [52.7, 1741.0], [52.8, 1741.0], [52.9, 1741.0], [53.0, 1744.0], [53.1, 1744.0], [53.2, 1744.0], [53.3, 1744.0], [53.4, 1744.0], [53.5, 1744.0], [53.6, 1744.0], [53.7, 1744.0], [53.8, 1744.0], [53.9, 1744.0], [54.0, 1744.0], [54.1, 1744.0], [54.2, 1744.0], [54.3, 1744.0], [54.4, 1744.0], [54.5, 1744.0], [54.6, 1744.0], [54.7, 1744.0], [54.8, 1744.0], [54.9, 1744.0], [55.0, 1754.0], [55.1, 1754.0], [55.2, 1754.0], [55.3, 1754.0], [55.4, 1754.0], [55.5, 1754.0], [55.6, 1754.0], [55.7, 1754.0], [55.8, 1754.0], [55.9, 1754.0], [56.0, 1759.0], [56.1, 1759.0], [56.2, 1759.0], [56.3, 1759.0], [56.4, 1759.0], [56.5, 1759.0], [56.6, 1759.0], [56.7, 1759.0], [56.8, 1759.0], [56.9, 1759.0], [57.0, 1759.0], [57.1, 1759.0], [57.2, 1759.0], [57.3, 1759.0], [57.4, 1759.0], [57.5, 1759.0], [57.6, 1759.0], [57.7, 1759.0], [57.8, 1759.0], [57.9, 1759.0], [58.0, 1764.0], [58.1, 1764.0], [58.2, 1764.0], [58.3, 1764.0], [58.4, 1764.0], [58.5, 1764.0], [58.6, 1764.0], [58.7, 1764.0], [58.8, 1764.0], [58.9, 1764.0], [59.0, 1764.0], [59.1, 1764.0], [59.2, 1764.0], [59.3, 1764.0], [59.4, 1764.0], [59.5, 1764.0], [59.6, 1764.0], [59.7, 1764.0], [59.8, 1764.0], [59.9, 1764.0], [60.0, 1771.0], [60.1, 1771.0], [60.2, 1771.0], [60.3, 1771.0], [60.4, 1771.0], [60.5, 1771.0], [60.6, 1771.0], [60.7, 1771.0], [60.8, 1771.0], [60.9, 1771.0], [61.0, 1778.0], [61.1, 1778.0], [61.2, 1778.0], [61.3, 1778.0], [61.4, 1778.0], [61.5, 1778.0], [61.6, 1778.0], [61.7, 1778.0], [61.8, 1778.0], [61.9, 1778.0], [62.0, 1780.0], [62.1, 1780.0], [62.2, 1780.0], [62.3, 1780.0], [62.4, 1780.0], [62.5, 1780.0], [62.6, 1780.0], [62.7, 1780.0], [62.8, 1780.0], [62.9, 1780.0], [63.0, 1782.0], [63.1, 1782.0], [63.2, 1782.0], [63.3, 1782.0], [63.4, 1782.0], [63.5, 1782.0], [63.6, 1782.0], [63.7, 1782.0], [63.8, 1782.0], [63.9, 1782.0], [64.0, 1789.0], [64.1, 1789.0], [64.2, 1789.0], [64.3, 1789.0], [64.4, 1789.0], [64.5, 1789.0], [64.6, 1789.0], [64.7, 1789.0], [64.8, 1789.0], [64.9, 1789.0], [65.0, 1794.0], [65.1, 1794.0], [65.2, 1794.0], [65.3, 1794.0], [65.4, 1794.0], [65.5, 1794.0], [65.6, 1794.0], [65.7, 1794.0], [65.8, 1794.0], [65.9, 1794.0], [66.0, 1795.0], [66.1, 1795.0], [66.2, 1795.0], [66.3, 1795.0], [66.4, 1795.0], [66.5, 1795.0], [66.6, 1795.0], [66.7, 1795.0], [66.8, 1795.0], [66.9, 1795.0], [67.0, 1795.0], [67.1, 1795.0], [67.2, 1795.0], [67.3, 1795.0], [67.4, 1795.0], [67.5, 1795.0], [67.6, 1795.0], [67.7, 1795.0], [67.8, 1795.0], [67.9, 1795.0], [68.0, 1803.0], [68.1, 1803.0], [68.2, 1803.0], [68.3, 1803.0], [68.4, 1803.0], [68.5, 1803.0], [68.6, 1803.0], [68.7, 1803.0], [68.8, 1803.0], [68.9, 1803.0], [69.0, 1803.0], [69.1, 1803.0], [69.2, 1803.0], [69.3, 1803.0], [69.4, 1803.0], [69.5, 1803.0], [69.6, 1803.0], [69.7, 1803.0], [69.8, 1803.0], [69.9, 1803.0], [70.0, 1804.0], [70.1, 1804.0], [70.2, 1804.0], [70.3, 1804.0], [70.4, 1804.0], [70.5, 1804.0], [70.6, 1804.0], [70.7, 1804.0], [70.8, 1804.0], [70.9, 1804.0], [71.0, 1817.0], [71.1, 1817.0], [71.2, 1817.0], [71.3, 1817.0], [71.4, 1817.0], [71.5, 1817.0], [71.6, 1817.0], [71.7, 1817.0], [71.8, 1817.0], [71.9, 1817.0], [72.0, 1826.0], [72.1, 1826.0], [72.2, 1826.0], [72.3, 1826.0], [72.4, 1826.0], [72.5, 1826.0], [72.6, 1826.0], [72.7, 1826.0], [72.8, 1826.0], [72.9, 1826.0], [73.0, 1834.0], [73.1, 1834.0], [73.2, 1834.0], [73.3, 1834.0], [73.4, 1834.0], [73.5, 1834.0], [73.6, 1834.0], [73.7, 1834.0], [73.8, 1834.0], [73.9, 1834.0], [74.0, 1839.0], [74.1, 1839.0], [74.2, 1839.0], [74.3, 1839.0], [74.4, 1839.0], [74.5, 1839.0], [74.6, 1839.0], [74.7, 1839.0], [74.8, 1839.0], [74.9, 1839.0], [75.0, 1840.0], [75.1, 1840.0], [75.2, 1840.0], [75.3, 1840.0], [75.4, 1840.0], [75.5, 1840.0], [75.6, 1840.0], [75.7, 1840.0], [75.8, 1840.0], [75.9, 1840.0], [76.0, 1844.0], [76.1, 1844.0], [76.2, 1844.0], [76.3, 1844.0], [76.4, 1844.0], [76.5, 1844.0], [76.6, 1844.0], [76.7, 1844.0], [76.8, 1844.0], [76.9, 1844.0], [77.0, 1846.0], [77.1, 1846.0], [77.2, 1846.0], [77.3, 1846.0], [77.4, 1846.0], [77.5, 1846.0], [77.6, 1846.0], [77.7, 1846.0], [77.8, 1846.0], [77.9, 1846.0], [78.0, 1847.0], [78.1, 1847.0], [78.2, 1847.0], [78.3, 1847.0], [78.4, 1847.0], [78.5, 1847.0], [78.6, 1847.0], [78.7, 1847.0], [78.8, 1847.0], [78.9, 1847.0], [79.0, 1859.0], [79.1, 1859.0], [79.2, 1859.0], [79.3, 1859.0], [79.4, 1859.0], [79.5, 1859.0], [79.6, 1859.0], [79.7, 1859.0], [79.8, 1859.0], [79.9, 1859.0], [80.0, 1865.0], [80.1, 1865.0], [80.2, 1865.0], [80.3, 1865.0], [80.4, 1865.0], [80.5, 1865.0], [80.6, 1865.0], [80.7, 1865.0], [80.8, 1865.0], [80.9, 1865.0], [81.0, 1867.0], [81.1, 1867.0], [81.2, 1867.0], [81.3, 1867.0], [81.4, 1867.0], [81.5, 1867.0], [81.6, 1867.0], [81.7, 1867.0], [81.8, 1867.0], [81.9, 1867.0], [82.0, 1868.0], [82.1, 1868.0], [82.2, 1868.0], [82.3, 1868.0], [82.4, 1868.0], [82.5, 1868.0], [82.6, 1868.0], [82.7, 1868.0], [82.8, 1868.0], [82.9, 1868.0], [83.0, 1871.0], [83.1, 1871.0], [83.2, 1871.0], [83.3, 1871.0], [83.4, 1871.0], [83.5, 1871.0], [83.6, 1871.0], [83.7, 1871.0], [83.8, 1871.0], [83.9, 1871.0], [84.0, 1872.0], [84.1, 1872.0], [84.2, 1872.0], [84.3, 1872.0], [84.4, 1872.0], [84.5, 1872.0], [84.6, 1872.0], [84.7, 1872.0], [84.8, 1872.0], [84.9, 1872.0], [85.0, 1896.0], [85.1, 1896.0], [85.2, 1896.0], [85.3, 1896.0], [85.4, 1896.0], [85.5, 1896.0], [85.6, 1896.0], [85.7, 1896.0], [85.8, 1896.0], [85.9, 1896.0], [86.0, 1899.0], [86.1, 1899.0], [86.2, 1899.0], [86.3, 1899.0], [86.4, 1899.0], [86.5, 1899.0], [86.6, 1899.0], [86.7, 1899.0], [86.8, 1899.0], [86.9, 1899.0], [87.0, 1902.0], [87.1, 1902.0], [87.2, 1902.0], [87.3, 1902.0], [87.4, 1902.0], [87.5, 1902.0], [87.6, 1902.0], [87.7, 1902.0], [87.8, 1902.0], [87.9, 1902.0], [88.0, 1902.0], [88.1, 1902.0], [88.2, 1902.0], [88.3, 1902.0], [88.4, 1902.0], [88.5, 1902.0], [88.6, 1902.0], [88.7, 1902.0], [88.8, 1902.0], [88.9, 1902.0], [89.0, 1910.0], [89.1, 1910.0], [89.2, 1910.0], [89.3, 1910.0], [89.4, 1910.0], [89.5, 1910.0], [89.6, 1910.0], [89.7, 1910.0], [89.8, 1910.0], [89.9, 1910.0], [90.0, 1915.0], [90.1, 1915.0], [90.2, 1915.0], [90.3, 1915.0], [90.4, 1915.0], [90.5, 1915.0], [90.6, 1915.0], [90.7, 1915.0], [90.8, 1915.0], [90.9, 1915.0], [91.0, 1924.0], [91.1, 1924.0], [91.2, 1924.0], [91.3, 1924.0], [91.4, 1924.0], [91.5, 1924.0], [91.6, 1924.0], [91.7, 1924.0], [91.8, 1924.0], [91.9, 1924.0], [92.0, 1925.0], [92.1, 1925.0], [92.2, 1925.0], [92.3, 1925.0], [92.4, 1925.0], [92.5, 1925.0], [92.6, 1925.0], [92.7, 1925.0], [92.8, 1925.0], [92.9, 1925.0], [93.0, 1938.0], [93.1, 1938.0], [93.2, 1938.0], [93.3, 1938.0], [93.4, 1938.0], [93.5, 1938.0], [93.6, 1938.0], [93.7, 1938.0], [93.8, 1938.0], [93.9, 1938.0], [94.0, 1965.0], [94.1, 1965.0], [94.2, 1965.0], [94.3, 1965.0], [94.4, 1965.0], [94.5, 1965.0], [94.6, 1965.0], [94.7, 1965.0], [94.8, 1965.0], [94.9, 1965.0], [95.0, 1985.0], [95.1, 1985.0], [95.2, 1985.0], [95.3, 1985.0], [95.4, 1985.0], [95.5, 1985.0], [95.6, 1985.0], [95.7, 1985.0], [95.8, 1985.0], [95.9, 1985.0], [96.0, 1995.0], [96.1, 1995.0], [96.2, 1995.0], [96.3, 1995.0], [96.4, 1995.0], [96.5, 1995.0], [96.6, 1995.0], [96.7, 1995.0], [96.8, 1995.0], [96.9, 1995.0], [97.0, 2037.0], [97.1, 2037.0], [97.2, 2037.0], [97.3, 2037.0], [97.4, 2037.0], [97.5, 2037.0], [97.6, 2037.0], [97.7, 2037.0], [97.8, 2037.0], [97.9, 2037.0], [98.0, 2063.0], [98.1, 2063.0], [98.2, 2063.0], [98.3, 2063.0], [98.4, 2063.0], [98.5, 2063.0], [98.6, 2063.0], [98.7, 2063.0], [98.8, 2063.0], [98.9, 2063.0], [99.0, 2214.0], [99.1, 2214.0], [99.2, 2214.0], [99.3, 2214.0], [99.4, 2214.0], [99.5, 2214.0], [99.6, 2214.0], [99.7, 2214.0], [99.8, 2214.0], [99.9, 2214.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 69.0, "series": [{"data": [[1100.0, 4.0], [1200.0, 1.0], [300.0, 4.0], [600.0, 4.0], [700.0, 12.0], [800.0, 14.0], [200.0, 3.0], [400.0, 9.0], [100.0, 1.0], [900.0, 19.0], [1000.0, 18.0], [500.0, 11.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1100.0, 9.0], [300.0, 2.0], [600.0, 13.0], [1200.0, 2.0], [1300.0, 4.0], [700.0, 12.0], [400.0, 5.0], [800.0, 14.0], [900.0, 20.0], [500.0, 11.0], [1000.0, 8.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 69.0], [200.0, 15.0], [100.0, 15.0], [1000.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[2200.0, 1.0], [1300.0, 2.0], [1400.0, 8.0], [1500.0, 11.0], [1600.0, 23.0], [1700.0, 24.0], [1800.0, 19.0], [1900.0, 10.0], [2000.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 90.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 187.0, "series": [{"data": [[0.0, 123.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 187.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 90.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 50.79000000000002, "minX": 1.7019186E12, "maxY": 50.79000000000002, "series": [{"data": [[1.7019186E12, 50.79000000000002]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019186E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.0, "maxY": 2037.0, "series": [{"data": [[2.0, 505.0], [5.0, 520.6666666666666], [6.0, 451.0], [7.0, 447.0], [8.0, 557.0], [10.0, 489.0], [11.0, 514.0], [12.0, 769.0], [13.0, 729.0], [15.0, 553.5], [16.0, 671.0], [17.0, 797.0], [18.0, 700.0], [21.0, 716.6666666666666], [22.0, 992.0], [23.0, 403.0], [24.0, 715.0], [25.0, 685.0], [26.0, 699.0], [29.0, 499.3333333333333], [30.0, 737.0], [33.0, 957.0], [32.0, 741.0], [34.0, 264.0], [37.0, 931.0], [36.0, 566.5], [41.0, 842.0], [40.0, 931.6666666666666], [45.0, 550.0], [44.0, 903.3333333333334], [47.0, 656.0], [46.0, 1092.0], [48.0, 466.0], [51.0, 697.5], [53.0, 437.0], [52.0, 970.0], [55.0, 1065.0], [54.0, 744.0], [57.0, 270.0], [56.0, 1034.0], [59.0, 342.0], [58.0, 1001.0], [60.0, 1001.0], [63.0, 312.0], [62.0, 877.5], [67.0, 1123.5], [65.0, 1107.0], [64.0, 1009.0], [71.0, 1076.0], [70.0, 800.5], [68.0, 573.0], [75.0, 1164.5], [73.0, 1067.0], [72.0, 969.0], [79.0, 1020.0], [78.0, 858.5], [76.0, 772.0], [83.0, 979.0], [82.0, 1010.0], [81.0, 1195.0], [80.0, 965.0], [87.0, 1013.0], [86.0, 875.0], [85.0, 1028.5], [91.0, 913.0], [90.0, 808.0], [89.0, 1005.0], [88.0, 930.0], [95.0, 1023.0], [94.0, 885.0], [93.0, 1080.0], [92.0, 1054.0], [99.0, 944.0], [98.0, 754.0], [97.0, 876.0], [96.0, 964.0], [100.0, 871.0], [1.0, 188.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[50.79000000000003, 787.16]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 1306.0], [5.0, 1128.3333333333333], [6.0, 1107.0], [7.0, 1110.0], [8.0, 843.0], [10.0, 1044.5], [11.0, 1043.0], [12.0, 1146.0], [13.0, 932.0], [15.0, 915.0], [16.0, 965.0], [17.0, 917.0], [18.0, 1113.0], [21.0, 965.0], [22.0, 786.0], [23.0, 1324.0], [24.0, 968.0], [25.0, 1002.0], [26.0, 918.0], [29.0, 1045.0], [30.0, 908.0], [33.0, 871.0], [32.0, 950.5], [34.0, 1121.0], [37.0, 865.0], [36.0, 961.5], [41.0, 891.0], [40.0, 860.0], [45.0, 1354.0], [44.0, 864.3333333333334], [47.0, 936.0], [46.0, 732.0], [48.0, 1397.0], [51.0, 969.5], [53.0, 1151.0], [52.0, 779.0], [55.0, 743.0], [54.0, 717.0], [57.0, 1264.0], [56.0, 835.0], [59.0, 976.0], [58.0, 833.0], [60.0, 772.0], [63.0, 941.0], [62.0, 883.0], [67.0, 646.5], [65.0, 652.0], [64.0, 665.0], [71.0, 636.0], [70.0, 787.5], [68.0, 916.0], [75.0, 575.5], [73.0, 610.0], [72.0, 785.0], [79.0, 600.0], [78.0, 739.0], [76.0, 938.0], [83.0, 617.0], [82.0, 579.0], [81.0, 455.0], [80.0, 663.0], [87.0, 549.0], [86.0, 626.0], [85.0, 557.0], [91.0, 604.0], [90.0, 624.0], [89.0, 536.0], [88.0, 628.0], [95.0, 415.0], [94.0, 595.0], [93.0, 415.0], [92.0, 451.0], [99.0, 389.0], [98.0, 652.0], [97.0, 549.0], [96.0, 467.0], [100.0, 374.0], [1.0, 520.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[50.79000000000003, 835.0200000000003]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 33.0], [5.0, 79.0], [6.0, 47.0], [7.0, 60.0], [8.0, 259.0], [10.0, 60.5], [11.0, 83.0], [12.0, 70.0], [13.0, 31.0], [15.0, 31.5], [16.0, 27.0], [17.0, 30.0], [18.0, 34.0], [21.0, 36.333333333333336], [22.0, 24.0], [23.0, 31.0], [24.0, 32.0], [25.0, 41.0], [26.0, 26.0], [29.0, 49.333333333333336], [30.0, 29.0], [33.0, 74.0], [32.0, 26.5], [34.0, 56.0], [37.0, 76.0], [36.0, 37.5], [41.0, 31.0], [40.0, 48.0], [45.0, 34.0], [44.0, 54.666666666666664], [47.0, 37.0], [46.0, 43.0], [48.0, 38.0], [51.0, 162.0], [53.0, 28.0], [52.0, 56.5], [55.0, 51.0], [54.0, 26.0], [57.0, 31.0], [56.0, 168.0], [59.0, 34.0], [58.0, 130.0], [60.0, 98.0], [63.0, 57.0], [62.0, 68.5], [67.0, 120.0], [65.0, 107.0], [64.0, 35.0], [71.0, 68.0], [70.0, 37.5], [68.0, 23.0], [75.0, 169.5], [73.0, 64.0], [72.0, 144.0], [79.0, 55.0], [78.0, 52.0], [76.0, 285.0], [83.0, 96.0], [82.0, 42.0], [81.0, 109.0], [80.0, 126.0], [87.0, 283.0], [86.0, 43.0], [85.0, 228.0], [91.0, 173.0], [90.0, 43.0], [89.0, 114.0], [88.0, 224.0], [95.0, 253.0], [94.0, 283.0], [93.0, 275.0], [92.0, 238.0], [99.0, 264.0], [98.0, 214.0], [97.0, 193.0], [96.0, 285.0], [100.0, 286.0], [1.0, 1028.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[50.79000000000003, 101.24000000000001]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 1844.0], [5.0, 1728.0], [6.0, 1605.0], [7.0, 1617.0], [8.0, 1660.0], [10.0, 1594.0], [11.0, 1640.0], [12.0, 1985.0], [13.0, 1692.0], [15.0, 1500.0], [16.0, 1664.0], [17.0, 1744.0], [18.0, 1847.0], [21.0, 1718.3333333333333], [22.0, 1803.0], [23.0, 1759.0], [24.0, 1715.0], [25.0, 1728.0], [26.0, 1643.0], [29.0, 1593.6666666666667], [30.0, 1675.0], [33.0, 1902.0], [32.0, 1718.5], [34.0, 1441.0], [37.0, 1872.0], [36.0, 1566.0], [41.0, 1764.0], [40.0, 1840.0], [45.0, 1938.0], [44.0, 1823.0], [47.0, 1629.0], [46.0, 1868.0], [48.0, 1902.0], [51.0, 1829.5], [53.0, 1617.0], [52.0, 1806.0], [55.0, 1859.0], [54.0, 1488.0], [57.0, 1566.0], [56.0, 2037.0], [59.0, 1352.0], [58.0, 1965.0], [60.0, 1871.0], [63.0, 1310.0], [62.0, 1829.5], [67.0, 1890.0], [65.0, 1867.0], [64.0, 1709.0], [71.0, 1780.0], [70.0, 1625.5], [68.0, 1512.0], [75.0, 1910.5], [73.0, 1741.0], [72.0, 1899.0], [79.0, 1675.0], [78.0, 1650.0], [76.0, 1995.0], [83.0, 1692.0], [82.0, 1632.0], [81.0, 1759.0], [80.0, 1754.0], [87.0, 1846.0], [86.0, 1544.0], [85.0, 1814.0], [91.0, 1691.0], [90.0, 1475.0], [89.0, 1656.0], [88.0, 1782.0], [95.0, 1692.0], [94.0, 1764.0], [93.0, 1771.0], [92.0, 1744.0], [99.0, 1597.0], [98.0, 1620.0], [97.0, 1619.0], [96.0, 1716.0], [100.0, 1531.0], [1.0, 1737.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[50.79000000000003, 1723.7799999999995]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1396.6666666666667, "minX": 1.7019186E12, "maxY": 22236.066666666666, "series": [{"data": [[1.7019186E12, 22236.066666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7019186E12, 1396.6666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019186E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 101.24000000000001, "minX": 1.7019186E12, "maxY": 1723.7799999999995, "series": [{"data": [[1.7019186E12, 787.16]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7019186E12, 835.0200000000003]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7019186E12, 101.24000000000001]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7019186E12, 1723.7799999999995]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019186E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 100.69999999999996, "minX": 1.7019186E12, "maxY": 806.27, "series": [{"data": [[1.7019186E12, 772.9300000000003]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7019186E12, 806.27]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7019186E12, 100.69999999999996]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7019186E12, 100.69999999999996]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019186E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7019186E12, "maxY": 82.54999999999998, "series": [{"data": [[1.7019186E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7019186E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7019186E12, 82.54999999999998]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7019186E12, 82.54999999999998]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019186E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.7019186E12, "maxY": 2214.0, "series": [{"data": [[1.7019186E12, 2214.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7019186E12, 20.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7019186E12, 1770.3000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7019186E12, 1994.9]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7019186E12, 866.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7019186E12, 1864.6999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019186E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 114.0, "maxY": 1121.0, "series": [{"data": [[159.0, 1121.0], [114.0, 972.0], [127.0, 82.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 159.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 82.0, "minX": 114.0, "maxY": 869.0, "series": [{"data": [[159.0, 309.0], [114.0, 869.0], [127.0, 82.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 159.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.7019186E12, "maxY": 6.666666666666667, "series": [{"data": [[1.7019186E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019186E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.7019186E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.7019186E12, 3.3333333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7019186E12, 1.6666666666666667]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.7019186E12, 1.6666666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7019186E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.7019186E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.7019186E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.7019186E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.7019186E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.7019186E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019186E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.7019186E12, "maxY": 6.666666666666667, "series": [{"data": [[1.7019186E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7019186E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

