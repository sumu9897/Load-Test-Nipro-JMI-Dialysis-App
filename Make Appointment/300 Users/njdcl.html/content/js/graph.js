/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 153.0, "minX": 0.0, "maxY": 7455.0, "series": [{"data": [[0.0, 153.0], [0.1, 153.0], [0.2, 153.0], [0.3, 153.0], [0.4, 158.0], [0.5, 158.0], [0.6, 158.0], [0.7, 159.0], [0.8, 159.0], [0.9, 159.0], [1.0, 166.0], [1.1, 166.0], [1.2, 166.0], [1.3, 166.0], [1.4, 175.0], [1.5, 175.0], [1.6, 175.0], [1.7, 177.0], [1.8, 177.0], [1.9, 177.0], [2.0, 179.0], [2.1, 179.0], [2.2, 179.0], [2.3, 179.0], [2.4, 181.0], [2.5, 181.0], [2.6, 181.0], [2.7, 183.0], [2.8, 183.0], [2.9, 183.0], [3.0, 184.0], [3.1, 184.0], [3.2, 184.0], [3.3, 184.0], [3.4, 184.0], [3.5, 184.0], [3.6, 184.0], [3.7, 185.0], [3.8, 185.0], [3.9, 185.0], [4.0, 186.0], [4.1, 186.0], [4.2, 186.0], [4.3, 186.0], [4.4, 187.0], [4.5, 187.0], [4.6, 187.0], [4.7, 188.0], [4.8, 188.0], [4.9, 188.0], [5.0, 190.0], [5.1, 190.0], [5.2, 190.0], [5.3, 190.0], [5.4, 192.0], [5.5, 192.0], [5.6, 192.0], [5.7, 192.0], [5.8, 192.0], [5.9, 192.0], [6.0, 193.0], [6.1, 193.0], [6.2, 193.0], [6.3, 193.0], [6.4, 193.0], [6.5, 193.0], [6.6, 193.0], [6.7, 193.0], [6.8, 193.0], [6.9, 193.0], [7.0, 193.0], [7.1, 193.0], [7.2, 193.0], [7.3, 193.0], [7.4, 194.0], [7.5, 194.0], [7.6, 194.0], [7.7, 195.0], [7.8, 195.0], [7.9, 195.0], [8.0, 197.0], [8.1, 197.0], [8.2, 197.0], [8.3, 197.0], [8.4, 197.0], [8.5, 197.0], [8.6, 197.0], [8.7, 200.0], [8.8, 200.0], [8.9, 200.0], [9.0, 202.0], [9.1, 202.0], [9.2, 202.0], [9.3, 202.0], [9.4, 202.0], [9.5, 202.0], [9.6, 202.0], [9.7, 202.0], [9.8, 202.0], [9.9, 202.0], [10.0, 205.0], [10.1, 205.0], [10.2, 205.0], [10.3, 205.0], [10.4, 205.0], [10.5, 205.0], [10.6, 205.0], [10.7, 206.0], [10.8, 206.0], [10.9, 206.0], [11.0, 207.0], [11.1, 207.0], [11.2, 207.0], [11.3, 207.0], [11.4, 208.0], [11.5, 208.0], [11.6, 208.0], [11.7, 209.0], [11.8, 209.0], [11.9, 209.0], [12.0, 210.0], [12.1, 210.0], [12.2, 210.0], [12.3, 210.0], [12.4, 212.0], [12.5, 212.0], [12.6, 212.0], [12.7, 212.0], [12.8, 212.0], [12.9, 212.0], [13.0, 212.0], [13.1, 212.0], [13.2, 212.0], [13.3, 212.0], [13.4, 213.0], [13.5, 213.0], [13.6, 213.0], [13.7, 213.0], [13.8, 213.0], [13.9, 213.0], [14.0, 213.0], [14.1, 213.0], [14.2, 213.0], [14.3, 213.0], [14.4, 214.0], [14.5, 214.0], [14.6, 214.0], [14.7, 214.0], [14.8, 214.0], [14.9, 214.0], [15.0, 215.0], [15.1, 215.0], [15.2, 215.0], [15.3, 215.0], [15.4, 215.0], [15.5, 215.0], [15.6, 215.0], [15.7, 216.0], [15.8, 216.0], [15.9, 216.0], [16.0, 216.0], [16.1, 216.0], [16.2, 216.0], [16.3, 216.0], [16.4, 217.0], [16.5, 217.0], [16.6, 217.0], [16.7, 217.0], [16.8, 217.0], [16.9, 217.0], [17.0, 217.0], [17.1, 217.0], [17.2, 217.0], [17.3, 217.0], [17.4, 217.0], [17.5, 217.0], [17.6, 217.0], [17.7, 217.0], [17.8, 217.0], [17.9, 217.0], [18.0, 218.0], [18.1, 218.0], [18.2, 218.0], [18.3, 218.0], [18.4, 219.0], [18.5, 219.0], [18.6, 219.0], [18.7, 219.0], [18.8, 219.0], [18.9, 219.0], [19.0, 219.0], [19.1, 219.0], [19.2, 219.0], [19.3, 219.0], [19.4, 219.0], [19.5, 219.0], [19.6, 219.0], [19.7, 219.0], [19.8, 219.0], [19.9, 219.0], [20.0, 219.0], [20.1, 219.0], [20.2, 219.0], [20.3, 219.0], [20.4, 220.0], [20.5, 220.0], [20.6, 220.0], [20.7, 221.0], [20.8, 221.0], [20.9, 221.0], [21.0, 221.0], [21.1, 221.0], [21.2, 221.0], [21.3, 221.0], [21.4, 221.0], [21.5, 221.0], [21.6, 221.0], [21.7, 222.0], [21.8, 222.0], [21.9, 222.0], [22.0, 222.0], [22.1, 222.0], [22.2, 222.0], [22.3, 222.0], [22.4, 222.0], [22.5, 222.0], [22.6, 222.0], [22.7, 223.0], [22.8, 223.0], [22.9, 223.0], [23.0, 224.0], [23.1, 224.0], [23.2, 224.0], [23.3, 224.0], [23.4, 224.0], [23.5, 224.0], [23.6, 224.0], [23.7, 224.0], [23.8, 224.0], [23.9, 224.0], [24.0, 225.0], [24.1, 225.0], [24.2, 225.0], [24.3, 225.0], [24.4, 226.0], [24.5, 226.0], [24.6, 226.0], [24.7, 226.0], [24.8, 226.0], [24.9, 226.0], [25.0, 227.0], [25.1, 227.0], [25.2, 227.0], [25.3, 227.0], [25.4, 227.0], [25.5, 227.0], [25.6, 227.0], [25.7, 228.0], [25.8, 228.0], [25.9, 228.0], [26.0, 229.0], [26.1, 229.0], [26.2, 229.0], [26.3, 229.0], [26.4, 231.0], [26.5, 231.0], [26.6, 231.0], [26.7, 231.0], [26.8, 231.0], [26.9, 231.0], [27.0, 231.0], [27.1, 231.0], [27.2, 231.0], [27.3, 231.0], [27.4, 233.0], [27.5, 233.0], [27.6, 233.0], [27.7, 233.0], [27.8, 233.0], [27.9, 233.0], [28.0, 233.0], [28.1, 233.0], [28.2, 233.0], [28.3, 233.0], [28.4, 234.0], [28.5, 234.0], [28.6, 234.0], [28.7, 236.0], [28.8, 236.0], [28.9, 236.0], [29.0, 236.0], [29.1, 236.0], [29.2, 236.0], [29.3, 236.0], [29.4, 237.0], [29.5, 237.0], [29.6, 237.0], [29.7, 237.0], [29.8, 237.0], [29.9, 237.0], [30.0, 238.0], [30.1, 238.0], [30.2, 238.0], [30.3, 238.0], [30.4, 240.0], [30.5, 240.0], [30.6, 240.0], [30.7, 241.0], [30.8, 241.0], [30.9, 241.0], [31.0, 242.0], [31.1, 242.0], [31.2, 242.0], [31.3, 242.0], [31.4, 243.0], [31.5, 243.0], [31.6, 243.0], [31.7, 243.0], [31.8, 243.0], [31.9, 243.0], [32.0, 243.0], [32.1, 243.0], [32.2, 243.0], [32.3, 243.0], [32.4, 247.0], [32.5, 247.0], [32.6, 247.0], [32.7, 248.0], [32.8, 248.0], [32.9, 248.0], [33.0, 250.0], [33.1, 250.0], [33.2, 250.0], [33.3, 250.0], [33.4, 251.0], [33.5, 251.0], [33.6, 251.0], [33.7, 254.0], [33.8, 254.0], [33.9, 254.0], [34.0, 254.0], [34.1, 262.0], [34.2, 262.0], [34.3, 262.0], [34.4, 263.0], [34.5, 263.0], [34.6, 263.0], [34.7, 266.0], [34.8, 266.0], [34.9, 266.0], [35.0, 266.0], [35.1, 270.0], [35.2, 270.0], [35.3, 270.0], [35.4, 270.0], [35.5, 270.0], [35.6, 270.0], [35.7, 270.0], [35.8, 270.0], [35.9, 270.0], [36.0, 270.0], [36.1, 271.0], [36.2, 271.0], [36.3, 271.0], [36.4, 272.0], [36.5, 272.0], [36.6, 272.0], [36.7, 272.0], [36.8, 272.0], [36.9, 272.0], [37.0, 272.0], [37.1, 276.0], [37.2, 276.0], [37.3, 276.0], [37.4, 276.0], [37.5, 276.0], [37.6, 276.0], [37.7, 285.0], [37.8, 285.0], [37.9, 285.0], [38.0, 285.0], [38.1, 286.0], [38.2, 286.0], [38.3, 286.0], [38.4, 287.0], [38.5, 287.0], [38.6, 287.0], [38.7, 289.0], [38.8, 289.0], [38.9, 289.0], [39.0, 289.0], [39.1, 290.0], [39.2, 290.0], [39.3, 290.0], [39.4, 291.0], [39.5, 291.0], [39.6, 291.0], [39.7, 291.0], [39.8, 291.0], [39.9, 291.0], [40.0, 291.0], [40.1, 294.0], [40.2, 294.0], [40.3, 294.0], [40.4, 294.0], [40.5, 294.0], [40.6, 294.0], [40.7, 296.0], [40.8, 296.0], [40.9, 296.0], [41.0, 296.0], [41.1, 298.0], [41.2, 298.0], [41.3, 298.0], [41.4, 301.0], [41.5, 301.0], [41.6, 301.0], [41.7, 305.0], [41.8, 305.0], [41.9, 305.0], [42.0, 305.0], [42.1, 305.0], [42.2, 305.0], [42.3, 305.0], [42.4, 305.0], [42.5, 305.0], [42.6, 305.0], [42.7, 306.0], [42.8, 306.0], [42.9, 306.0], [43.0, 306.0], [43.1, 308.0], [43.2, 308.0], [43.3, 308.0], [43.4, 311.0], [43.5, 311.0], [43.6, 311.0], [43.7, 317.0], [43.8, 317.0], [43.9, 317.0], [44.0, 317.0], [44.1, 318.0], [44.2, 318.0], [44.3, 318.0], [44.4, 321.0], [44.5, 321.0], [44.6, 321.0], [44.7, 323.0], [44.8, 323.0], [44.9, 323.0], [45.0, 323.0], [45.1, 327.0], [45.2, 327.0], [45.3, 327.0], [45.4, 331.0], [45.5, 331.0], [45.6, 331.0], [45.7, 332.0], [45.8, 332.0], [45.9, 332.0], [46.0, 332.0], [46.1, 333.0], [46.2, 333.0], [46.3, 333.0], [46.4, 336.0], [46.5, 336.0], [46.6, 336.0], [46.7, 337.0], [46.8, 337.0], [46.9, 337.0], [47.0, 337.0], [47.1, 337.0], [47.2, 337.0], [47.3, 337.0], [47.4, 346.0], [47.5, 346.0], [47.6, 346.0], [47.7, 346.0], [47.8, 346.0], [47.9, 346.0], [48.0, 346.0], [48.1, 348.0], [48.2, 348.0], [48.3, 348.0], [48.4, 350.0], [48.5, 350.0], [48.6, 350.0], [48.7, 350.0], [48.8, 350.0], [48.9, 350.0], [49.0, 350.0], [49.1, 354.0], [49.2, 354.0], [49.3, 354.0], [49.4, 356.0], [49.5, 356.0], [49.6, 356.0], [49.7, 360.0], [49.8, 360.0], [49.9, 360.0], [50.0, 360.0], [50.1, 363.0], [50.2, 363.0], [50.3, 363.0], [50.4, 364.0], [50.5, 364.0], [50.6, 364.0], [50.7, 364.0], [50.8, 364.0], [50.9, 364.0], [51.0, 364.0], [51.1, 371.0], [51.2, 371.0], [51.3, 371.0], [51.4, 375.0], [51.5, 375.0], [51.6, 375.0], [51.7, 376.0], [51.8, 376.0], [51.9, 376.0], [52.0, 376.0], [52.1, 379.0], [52.2, 379.0], [52.3, 379.0], [52.4, 379.0], [52.5, 379.0], [52.6, 379.0], [52.7, 380.0], [52.8, 380.0], [52.9, 380.0], [53.0, 380.0], [53.1, 383.0], [53.2, 383.0], [53.3, 383.0], [53.4, 385.0], [53.5, 385.0], [53.6, 385.0], [53.7, 386.0], [53.8, 386.0], [53.9, 386.0], [54.0, 386.0], [54.1, 386.0], [54.2, 386.0], [54.3, 386.0], [54.4, 389.0], [54.5, 389.0], [54.6, 389.0], [54.7, 389.0], [54.8, 389.0], [54.9, 389.0], [55.0, 389.0], [55.1, 390.0], [55.2, 390.0], [55.3, 390.0], [55.4, 390.0], [55.5, 390.0], [55.6, 390.0], [55.7, 391.0], [55.8, 391.0], [55.9, 391.0], [56.0, 391.0], [56.1, 391.0], [56.2, 391.0], [56.3, 391.0], [56.4, 408.0], [56.5, 408.0], [56.6, 408.0], [56.7, 415.0], [56.8, 415.0], [56.9, 415.0], [57.0, 415.0], [57.1, 417.0], [57.2, 417.0], [57.3, 417.0], [57.4, 417.0], [57.5, 417.0], [57.6, 417.0], [57.7, 418.0], [57.8, 418.0], [57.9, 418.0], [58.0, 418.0], [58.1, 426.0], [58.2, 426.0], [58.3, 426.0], [58.4, 427.0], [58.5, 427.0], [58.6, 427.0], [58.7, 427.0], [58.8, 427.0], [58.9, 427.0], [59.0, 427.0], [59.1, 428.0], [59.2, 428.0], [59.3, 428.0], [59.4, 429.0], [59.5, 429.0], [59.6, 429.0], [59.7, 430.0], [59.8, 430.0], [59.9, 430.0], [60.0, 430.0], [60.1, 432.0], [60.2, 432.0], [60.3, 432.0], [60.4, 435.0], [60.5, 435.0], [60.6, 435.0], [60.7, 437.0], [60.8, 437.0], [60.9, 437.0], [61.0, 437.0], [61.1, 441.0], [61.2, 441.0], [61.3, 441.0], [61.4, 444.0], [61.5, 444.0], [61.6, 444.0], [61.7, 444.0], [61.8, 444.0], [61.9, 444.0], [62.0, 444.0], [62.1, 445.0], [62.2, 445.0], [62.3, 445.0], [62.4, 448.0], [62.5, 448.0], [62.6, 448.0], [62.7, 449.0], [62.8, 449.0], [62.9, 449.0], [63.0, 449.0], [63.1, 449.0], [63.2, 449.0], [63.3, 449.0], [63.4, 453.0], [63.5, 453.0], [63.6, 453.0], [63.7, 454.0], [63.8, 454.0], [63.9, 454.0], [64.0, 454.0], [64.1, 457.0], [64.2, 457.0], [64.3, 457.0], [64.4, 460.0], [64.5, 460.0], [64.6, 460.0], [64.7, 460.0], [64.8, 460.0], [64.9, 460.0], [65.0, 460.0], [65.1, 460.0], [65.2, 460.0], [65.3, 460.0], [65.4, 462.0], [65.5, 462.0], [65.6, 462.0], [65.7, 463.0], [65.8, 463.0], [65.9, 463.0], [66.0, 463.0], [66.1, 465.0], [66.2, 465.0], [66.3, 465.0], [66.4, 466.0], [66.5, 466.0], [66.6, 466.0], [66.7, 469.0], [66.8, 469.0], [66.9, 469.0], [67.0, 469.0], [67.1, 471.0], [67.2, 471.0], [67.3, 471.0], [67.4, 472.0], [67.5, 472.0], [67.6, 472.0], [67.7, 472.0], [67.8, 472.0], [67.9, 472.0], [68.0, 472.0], [68.1, 473.0], [68.2, 473.0], [68.3, 473.0], [68.4, 473.0], [68.5, 473.0], [68.6, 473.0], [68.7, 473.0], [68.8, 473.0], [68.9, 473.0], [69.0, 473.0], [69.1, 475.0], [69.2, 475.0], [69.3, 475.0], [69.4, 477.0], [69.5, 477.0], [69.6, 477.0], [69.7, 480.0], [69.8, 480.0], [69.9, 480.0], [70.0, 480.0], [70.1, 481.0], [70.2, 481.0], [70.3, 481.0], [70.4, 485.0], [70.5, 485.0], [70.6, 485.0], [70.7, 494.0], [70.8, 494.0], [70.9, 494.0], [71.0, 494.0], [71.1, 500.0], [71.2, 500.0], [71.3, 500.0], [71.4, 503.0], [71.5, 503.0], [71.6, 503.0], [71.7, 503.0], [71.8, 503.0], [71.9, 503.0], [72.0, 503.0], [72.1, 506.0], [72.2, 506.0], [72.3, 506.0], [72.4, 509.0], [72.5, 509.0], [72.6, 509.0], [72.7, 514.0], [72.8, 514.0], [72.9, 514.0], [73.0, 514.0], [73.1, 515.0], [73.2, 515.0], [73.3, 515.0], [73.4, 523.0], [73.5, 523.0], [73.6, 523.0], [73.7, 524.0], [73.8, 524.0], [73.9, 524.0], [74.0, 527.0], [74.1, 527.0], [74.2, 527.0], [74.3, 527.0], [74.4, 529.0], [74.5, 529.0], [74.6, 529.0], [74.7, 531.0], [74.8, 531.0], [74.9, 531.0], [75.0, 539.0], [75.1, 539.0], [75.2, 539.0], [75.3, 539.0], [75.4, 544.0], [75.5, 544.0], [75.6, 544.0], [75.7, 545.0], [75.8, 545.0], [75.9, 545.0], [76.0, 550.0], [76.1, 550.0], [76.2, 550.0], [76.3, 550.0], [76.4, 560.0], [76.5, 560.0], [76.6, 560.0], [76.7, 561.0], [76.8, 561.0], [76.9, 561.0], [77.0, 565.0], [77.1, 565.0], [77.2, 565.0], [77.3, 565.0], [77.4, 568.0], [77.5, 568.0], [77.6, 568.0], [77.7, 576.0], [77.8, 576.0], [77.9, 576.0], [78.0, 576.0], [78.1, 576.0], [78.2, 576.0], [78.3, 576.0], [78.4, 582.0], [78.5, 582.0], [78.6, 582.0], [78.7, 587.0], [78.8, 587.0], [78.9, 587.0], [79.0, 588.0], [79.1, 588.0], [79.2, 588.0], [79.3, 588.0], [79.4, 588.0], [79.5, 588.0], [79.6, 588.0], [79.7, 593.0], [79.8, 593.0], [79.9, 593.0], [80.0, 595.0], [80.1, 595.0], [80.2, 595.0], [80.3, 595.0], [80.4, 600.0], [80.5, 600.0], [80.6, 600.0], [80.7, 602.0], [80.8, 602.0], [80.9, 602.0], [81.0, 603.0], [81.1, 603.0], [81.2, 603.0], [81.3, 603.0], [81.4, 604.0], [81.5, 604.0], [81.6, 604.0], [81.7, 608.0], [81.8, 608.0], [81.9, 608.0], [82.0, 610.0], [82.1, 610.0], [82.2, 610.0], [82.3, 610.0], [82.4, 612.0], [82.5, 612.0], [82.6, 612.0], [82.7, 618.0], [82.8, 618.0], [82.9, 618.0], [83.0, 618.0], [83.1, 618.0], [83.2, 618.0], [83.3, 618.0], [83.4, 624.0], [83.5, 624.0], [83.6, 624.0], [83.7, 628.0], [83.8, 628.0], [83.9, 628.0], [84.0, 629.0], [84.1, 629.0], [84.2, 629.0], [84.3, 629.0], [84.4, 632.0], [84.5, 632.0], [84.6, 632.0], [84.7, 635.0], [84.8, 635.0], [84.9, 635.0], [85.0, 635.0], [85.1, 635.0], [85.2, 635.0], [85.3, 635.0], [85.4, 642.0], [85.5, 642.0], [85.6, 642.0], [85.7, 642.0], [85.8, 642.0], [85.9, 642.0], [86.0, 650.0], [86.1, 650.0], [86.2, 650.0], [86.3, 650.0], [86.4, 651.0], [86.5, 651.0], [86.6, 651.0], [86.7, 654.0], [86.8, 654.0], [86.9, 654.0], [87.0, 659.0], [87.1, 659.0], [87.2, 659.0], [87.3, 659.0], [87.4, 663.0], [87.5, 663.0], [87.6, 663.0], [87.7, 665.0], [87.8, 665.0], [87.9, 665.0], [88.0, 666.0], [88.1, 666.0], [88.2, 666.0], [88.3, 666.0], [88.4, 672.0], [88.5, 672.0], [88.6, 672.0], [88.7, 673.0], [88.8, 673.0], [88.9, 673.0], [89.0, 676.0], [89.1, 676.0], [89.2, 676.0], [89.3, 676.0], [89.4, 677.0], [89.5, 677.0], [89.6, 677.0], [89.7, 677.0], [89.8, 677.0], [89.9, 677.0], [90.0, 678.0], [90.1, 678.0], [90.2, 678.0], [90.3, 678.0], [90.4, 679.0], [90.5, 679.0], [90.6, 679.0], [90.7, 680.0], [90.8, 680.0], [90.9, 680.0], [91.0, 681.0], [91.1, 681.0], [91.2, 681.0], [91.3, 681.0], [91.4, 685.0], [91.5, 685.0], [91.6, 685.0], [91.7, 687.0], [91.8, 687.0], [91.9, 687.0], [92.0, 688.0], [92.1, 688.0], [92.2, 688.0], [92.3, 688.0], [92.4, 694.0], [92.5, 694.0], [92.6, 694.0], [92.7, 699.0], [92.8, 699.0], [92.9, 699.0], [93.0, 702.0], [93.1, 702.0], [93.2, 702.0], [93.3, 702.0], [93.4, 703.0], [93.5, 703.0], [93.6, 703.0], [93.7, 704.0], [93.8, 704.0], [93.9, 704.0], [94.0, 707.0], [94.1, 707.0], [94.2, 707.0], [94.3, 707.0], [94.4, 717.0], [94.5, 717.0], [94.6, 717.0], [94.7, 719.0], [94.8, 719.0], [94.9, 719.0], [95.0, 719.0], [95.1, 719.0], [95.2, 719.0], [95.3, 719.0], [95.4, 722.0], [95.5, 722.0], [95.6, 722.0], [95.7, 730.0], [95.8, 730.0], [95.9, 730.0], [96.0, 735.0], [96.1, 735.0], [96.2, 735.0], [96.3, 735.0], [96.4, 737.0], [96.5, 737.0], [96.6, 737.0], [96.7, 737.0], [96.8, 737.0], [96.9, 737.0], [97.0, 743.0], [97.1, 743.0], [97.2, 743.0], [97.3, 743.0], [97.4, 765.0], [97.5, 765.0], [97.6, 765.0], [97.7, 780.0], [97.8, 780.0], [97.9, 780.0], [98.0, 784.0], [98.1, 784.0], [98.2, 784.0], [98.3, 784.0], [98.4, 786.0], [98.5, 786.0], [98.6, 786.0], [98.7, 802.0], [98.8, 802.0], [98.9, 802.0], [99.0, 849.0], [99.1, 849.0], [99.2, 849.0], [99.3, 849.0], [99.4, 907.0], [99.5, 907.0], [99.6, 907.0], [99.7, 976.0], [99.8, 976.0], [99.9, 976.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 164.0], [0.1, 164.0], [0.2, 164.0], [0.3, 164.0], [0.4, 166.0], [0.5, 166.0], [0.6, 166.0], [0.7, 174.0], [0.8, 174.0], [0.9, 174.0], [1.0, 178.0], [1.1, 178.0], [1.2, 178.0], [1.3, 178.0], [1.4, 184.0], [1.5, 184.0], [1.6, 184.0], [1.7, 184.0], [1.8, 184.0], [1.9, 184.0], [2.0, 186.0], [2.1, 186.0], [2.2, 186.0], [2.3, 186.0], [2.4, 187.0], [2.5, 187.0], [2.6, 187.0], [2.7, 189.0], [2.8, 189.0], [2.9, 189.0], [3.0, 189.0], [3.1, 189.0], [3.2, 189.0], [3.3, 189.0], [3.4, 190.0], [3.5, 190.0], [3.6, 190.0], [3.7, 191.0], [3.8, 191.0], [3.9, 191.0], [4.0, 192.0], [4.1, 192.0], [4.2, 192.0], [4.3, 192.0], [4.4, 194.0], [4.5, 194.0], [4.6, 194.0], [4.7, 194.0], [4.8, 194.0], [4.9, 194.0], [5.0, 194.0], [5.1, 194.0], [5.2, 194.0], [5.3, 194.0], [5.4, 195.0], [5.5, 195.0], [5.6, 195.0], [5.7, 195.0], [5.8, 195.0], [5.9, 195.0], [6.0, 195.0], [6.1, 195.0], [6.2, 195.0], [6.3, 195.0], [6.4, 196.0], [6.5, 196.0], [6.6, 196.0], [6.7, 196.0], [6.8, 196.0], [6.9, 196.0], [7.0, 196.0], [7.1, 196.0], [7.2, 196.0], [7.3, 196.0], [7.4, 199.0], [7.5, 199.0], [7.6, 199.0], [7.7, 200.0], [7.8, 200.0], [7.9, 200.0], [8.0, 200.0], [8.1, 200.0], [8.2, 200.0], [8.3, 200.0], [8.4, 201.0], [8.5, 201.0], [8.6, 201.0], [8.7, 201.0], [8.8, 201.0], [8.9, 201.0], [9.0, 202.0], [9.1, 202.0], [9.2, 202.0], [9.3, 202.0], [9.4, 202.0], [9.5, 202.0], [9.6, 202.0], [9.7, 203.0], [9.8, 203.0], [9.9, 203.0], [10.0, 203.0], [10.1, 203.0], [10.2, 203.0], [10.3, 203.0], [10.4, 204.0], [10.5, 204.0], [10.6, 204.0], [10.7, 204.0], [10.8, 204.0], [10.9, 204.0], [11.0, 205.0], [11.1, 205.0], [11.2, 205.0], [11.3, 205.0], [11.4, 205.0], [11.5, 205.0], [11.6, 205.0], [11.7, 206.0], [11.8, 206.0], [11.9, 206.0], [12.0, 206.0], [12.1, 206.0], [12.2, 206.0], [12.3, 206.0], [12.4, 206.0], [12.5, 206.0], [12.6, 206.0], [12.7, 207.0], [12.8, 207.0], [12.9, 207.0], [13.0, 207.0], [13.1, 207.0], [13.2, 207.0], [13.3, 207.0], [13.4, 207.0], [13.5, 207.0], [13.6, 207.0], [13.7, 207.0], [13.8, 207.0], [13.9, 207.0], [14.0, 208.0], [14.1, 208.0], [14.2, 208.0], [14.3, 208.0], [14.4, 209.0], [14.5, 209.0], [14.6, 209.0], [14.7, 210.0], [14.8, 210.0], [14.9, 210.0], [15.0, 210.0], [15.1, 210.0], [15.2, 210.0], [15.3, 210.0], [15.4, 211.0], [15.5, 211.0], [15.6, 211.0], [15.7, 211.0], [15.8, 211.0], [15.9, 211.0], [16.0, 211.0], [16.1, 211.0], [16.2, 211.0], [16.3, 211.0], [16.4, 212.0], [16.5, 212.0], [16.6, 212.0], [16.7, 213.0], [16.8, 213.0], [16.9, 213.0], [17.0, 213.0], [17.1, 213.0], [17.2, 213.0], [17.3, 213.0], [17.4, 213.0], [17.5, 213.0], [17.6, 213.0], [17.7, 214.0], [17.8, 214.0], [17.9, 214.0], [18.0, 216.0], [18.1, 216.0], [18.2, 216.0], [18.3, 216.0], [18.4, 216.0], [18.5, 216.0], [18.6, 216.0], [18.7, 216.0], [18.8, 216.0], [18.9, 216.0], [19.0, 216.0], [19.1, 216.0], [19.2, 216.0], [19.3, 216.0], [19.4, 216.0], [19.5, 216.0], [19.6, 216.0], [19.7, 216.0], [19.8, 216.0], [19.9, 216.0], [20.0, 216.0], [20.1, 216.0], [20.2, 216.0], [20.3, 216.0], [20.4, 217.0], [20.5, 217.0], [20.6, 217.0], [20.7, 217.0], [20.8, 217.0], [20.9, 217.0], [21.0, 217.0], [21.1, 217.0], [21.2, 217.0], [21.3, 217.0], [21.4, 218.0], [21.5, 218.0], [21.6, 218.0], [21.7, 218.0], [21.8, 218.0], [21.9, 218.0], [22.0, 219.0], [22.1, 219.0], [22.2, 219.0], [22.3, 219.0], [22.4, 219.0], [22.5, 219.0], [22.6, 219.0], [22.7, 219.0], [22.8, 219.0], [22.9, 219.0], [23.0, 219.0], [23.1, 219.0], [23.2, 219.0], [23.3, 219.0], [23.4, 220.0], [23.5, 220.0], [23.6, 220.0], [23.7, 220.0], [23.8, 220.0], [23.9, 220.0], [24.0, 221.0], [24.1, 221.0], [24.2, 221.0], [24.3, 221.0], [24.4, 221.0], [24.5, 221.0], [24.6, 221.0], [24.7, 221.0], [24.8, 221.0], [24.9, 221.0], [25.0, 222.0], [25.1, 222.0], [25.2, 222.0], [25.3, 222.0], [25.4, 222.0], [25.5, 222.0], [25.6, 222.0], [25.7, 222.0], [25.8, 222.0], [25.9, 222.0], [26.0, 222.0], [26.1, 222.0], [26.2, 222.0], [26.3, 222.0], [26.4, 222.0], [26.5, 222.0], [26.6, 222.0], [26.7, 223.0], [26.8, 223.0], [26.9, 223.0], [27.0, 223.0], [27.1, 223.0], [27.2, 223.0], [27.3, 223.0], [27.4, 223.0], [27.5, 223.0], [27.6, 223.0], [27.7, 224.0], [27.8, 224.0], [27.9, 224.0], [28.0, 224.0], [28.1, 224.0], [28.2, 224.0], [28.3, 224.0], [28.4, 225.0], [28.5, 225.0], [28.6, 225.0], [28.7, 225.0], [28.8, 225.0], [28.9, 225.0], [29.0, 225.0], [29.1, 225.0], [29.2, 225.0], [29.3, 225.0], [29.4, 226.0], [29.5, 226.0], [29.6, 226.0], [29.7, 226.0], [29.8, 226.0], [29.9, 226.0], [30.0, 226.0], [30.1, 226.0], [30.2, 226.0], [30.3, 226.0], [30.4, 227.0], [30.5, 227.0], [30.6, 227.0], [30.7, 228.0], [30.8, 228.0], [30.9, 228.0], [31.0, 228.0], [31.1, 228.0], [31.2, 228.0], [31.3, 228.0], [31.4, 228.0], [31.5, 228.0], [31.6, 228.0], [31.7, 229.0], [31.8, 229.0], [31.9, 229.0], [32.0, 230.0], [32.1, 230.0], [32.2, 230.0], [32.3, 230.0], [32.4, 230.0], [32.5, 230.0], [32.6, 230.0], [32.7, 230.0], [32.8, 230.0], [32.9, 230.0], [33.0, 231.0], [33.1, 231.0], [33.2, 231.0], [33.3, 231.0], [33.4, 232.0], [33.5, 232.0], [33.6, 232.0], [33.7, 233.0], [33.8, 233.0], [33.9, 233.0], [34.0, 234.0], [34.1, 234.0], [34.2, 234.0], [34.3, 234.0], [34.4, 234.0], [34.5, 234.0], [34.6, 234.0], [34.7, 235.0], [34.8, 235.0], [34.9, 235.0], [35.0, 235.0], [35.1, 235.0], [35.2, 235.0], [35.3, 235.0], [35.4, 237.0], [35.5, 237.0], [35.6, 237.0], [35.7, 238.0], [35.8, 238.0], [35.9, 238.0], [36.0, 240.0], [36.1, 240.0], [36.2, 240.0], [36.3, 240.0], [36.4, 242.0], [36.5, 242.0], [36.6, 242.0], [36.7, 244.0], [36.8, 244.0], [36.9, 244.0], [37.0, 244.0], [37.1, 245.0], [37.2, 245.0], [37.3, 245.0], [37.4, 245.0], [37.5, 245.0], [37.6, 245.0], [37.7, 246.0], [37.8, 246.0], [37.9, 246.0], [38.0, 246.0], [38.1, 254.0], [38.2, 254.0], [38.3, 254.0], [38.4, 259.0], [38.5, 259.0], [38.6, 259.0], [38.7, 259.0], [38.8, 259.0], [38.9, 259.0], [39.0, 259.0], [39.1, 269.0], [39.2, 269.0], [39.3, 269.0], [39.4, 270.0], [39.5, 270.0], [39.6, 270.0], [39.7, 271.0], [39.8, 271.0], [39.9, 271.0], [40.0, 271.0], [40.1, 272.0], [40.2, 272.0], [40.3, 272.0], [40.4, 273.0], [40.5, 273.0], [40.6, 273.0], [40.7, 275.0], [40.8, 275.0], [40.9, 275.0], [41.0, 275.0], [41.1, 278.0], [41.2, 278.0], [41.3, 278.0], [41.4, 284.0], [41.5, 284.0], [41.6, 284.0], [41.7, 285.0], [41.8, 285.0], [41.9, 285.0], [42.0, 285.0], [42.1, 293.0], [42.2, 293.0], [42.3, 293.0], [42.4, 293.0], [42.5, 293.0], [42.6, 293.0], [42.7, 293.0], [42.8, 293.0], [42.9, 293.0], [43.0, 293.0], [43.1, 294.0], [43.2, 294.0], [43.3, 294.0], [43.4, 296.0], [43.5, 296.0], [43.6, 296.0], [43.7, 297.0], [43.8, 297.0], [43.9, 297.0], [44.0, 297.0], [44.1, 297.0], [44.2, 297.0], [44.3, 297.0], [44.4, 297.0], [44.5, 297.0], [44.6, 297.0], [44.7, 298.0], [44.8, 298.0], [44.9, 298.0], [45.0, 298.0], [45.1, 298.0], [45.2, 298.0], [45.3, 298.0], [45.4, 305.0], [45.5, 305.0], [45.6, 305.0], [45.7, 306.0], [45.8, 306.0], [45.9, 306.0], [46.0, 306.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 310.0], [46.5, 310.0], [46.6, 310.0], [46.7, 311.0], [46.8, 311.0], [46.9, 311.0], [47.0, 311.0], [47.1, 313.0], [47.2, 313.0], [47.3, 313.0], [47.4, 315.0], [47.5, 315.0], [47.6, 315.0], [47.7, 315.0], [47.8, 315.0], [47.9, 315.0], [48.0, 315.0], [48.1, 315.0], [48.2, 315.0], [48.3, 315.0], [48.4, 317.0], [48.5, 317.0], [48.6, 317.0], [48.7, 320.0], [48.8, 320.0], [48.9, 320.0], [49.0, 320.0], [49.1, 320.0], [49.2, 320.0], [49.3, 320.0], [49.4, 325.0], [49.5, 325.0], [49.6, 325.0], [49.7, 325.0], [49.8, 325.0], [49.9, 325.0], [50.0, 325.0], [50.1, 327.0], [50.2, 327.0], [50.3, 327.0], [50.4, 328.0], [50.5, 328.0], [50.6, 328.0], [50.7, 328.0], [50.8, 328.0], [50.9, 328.0], [51.0, 328.0], [51.1, 330.0], [51.2, 330.0], [51.3, 330.0], [51.4, 331.0], [51.5, 331.0], [51.6, 331.0], [51.7, 331.0], [51.8, 331.0], [51.9, 331.0], [52.0, 331.0], [52.1, 334.0], [52.2, 334.0], [52.3, 334.0], [52.4, 339.0], [52.5, 339.0], [52.6, 339.0], [52.7, 343.0], [52.8, 343.0], [52.9, 343.0], [53.0, 343.0], [53.1, 343.0], [53.2, 343.0], [53.3, 343.0], [53.4, 350.0], [53.5, 350.0], [53.6, 350.0], [53.7, 359.0], [53.8, 359.0], [53.9, 359.0], [54.0, 359.0], [54.1, 369.0], [54.2, 369.0], [54.3, 369.0], [54.4, 369.0], [54.5, 369.0], [54.6, 369.0], [54.7, 371.0], [54.8, 371.0], [54.9, 371.0], [55.0, 371.0], [55.1, 387.0], [55.2, 387.0], [55.3, 387.0], [55.4, 387.0], [55.5, 387.0], [55.6, 387.0], [55.7, 388.0], [55.8, 388.0], [55.9, 388.0], [56.0, 388.0], [56.1, 391.0], [56.2, 391.0], [56.3, 391.0], [56.4, 392.0], [56.5, 392.0], [56.6, 392.0], [56.7, 392.0], [56.8, 392.0], [56.9, 392.0], [57.0, 392.0], [57.1, 394.0], [57.2, 394.0], [57.3, 394.0], [57.4, 400.0], [57.5, 400.0], [57.6, 400.0], [57.7, 406.0], [57.8, 406.0], [57.9, 406.0], [58.0, 406.0], [58.1, 408.0], [58.2, 408.0], [58.3, 408.0], [58.4, 409.0], [58.5, 409.0], [58.6, 409.0], [58.7, 409.0], [58.8, 409.0], [58.9, 409.0], [59.0, 409.0], [59.1, 414.0], [59.2, 414.0], [59.3, 414.0], [59.4, 419.0], [59.5, 419.0], [59.6, 419.0], [59.7, 420.0], [59.8, 420.0], [59.9, 420.0], [60.0, 420.0], [60.1, 421.0], [60.2, 421.0], [60.3, 421.0], [60.4, 423.0], [60.5, 423.0], [60.6, 423.0], [60.7, 425.0], [60.8, 425.0], [60.9, 425.0], [61.0, 425.0], [61.1, 428.0], [61.2, 428.0], [61.3, 428.0], [61.4, 430.0], [61.5, 430.0], [61.6, 430.0], [61.7, 430.0], [61.8, 430.0], [61.9, 430.0], [62.0, 430.0], [62.1, 430.0], [62.2, 430.0], [62.3, 430.0], [62.4, 433.0], [62.5, 433.0], [62.6, 433.0], [62.7, 435.0], [62.8, 435.0], [62.9, 435.0], [63.0, 435.0], [63.1, 435.0], [63.2, 435.0], [63.3, 435.0], [63.4, 438.0], [63.5, 438.0], [63.6, 438.0], [63.7, 440.0], [63.8, 440.0], [63.9, 440.0], [64.0, 440.0], [64.1, 442.0], [64.2, 442.0], [64.3, 442.0], [64.4, 444.0], [64.5, 444.0], [64.6, 444.0], [64.7, 444.0], [64.8, 444.0], [64.9, 444.0], [65.0, 444.0], [65.1, 444.0], [65.2, 444.0], [65.3, 444.0], [65.4, 446.0], [65.5, 446.0], [65.6, 446.0], [65.7, 447.0], [65.8, 447.0], [65.9, 447.0], [66.0, 447.0], [66.1, 450.0], [66.2, 450.0], [66.3, 450.0], [66.4, 450.0], [66.5, 450.0], [66.6, 450.0], [66.7, 450.0], [66.8, 450.0], [66.9, 450.0], [67.0, 450.0], [67.1, 451.0], [67.2, 451.0], [67.3, 451.0], [67.4, 453.0], [67.5, 453.0], [67.6, 453.0], [67.7, 454.0], [67.8, 454.0], [67.9, 454.0], [68.0, 454.0], [68.1, 455.0], [68.2, 455.0], [68.3, 455.0], [68.4, 458.0], [68.5, 458.0], [68.6, 458.0], [68.7, 459.0], [68.8, 459.0], [68.9, 459.0], [69.0, 459.0], [69.1, 460.0], [69.2, 460.0], [69.3, 460.0], [69.4, 461.0], [69.5, 461.0], [69.6, 461.0], [69.7, 461.0], [69.8, 461.0], [69.9, 461.0], [70.0, 461.0], [70.1, 462.0], [70.2, 462.0], [70.3, 462.0], [70.4, 463.0], [70.5, 463.0], [70.6, 463.0], [70.7, 467.0], [70.8, 467.0], [70.9, 467.0], [71.0, 467.0], [71.1, 469.0], [71.2, 469.0], [71.3, 469.0], [71.4, 473.0], [71.5, 473.0], [71.6, 473.0], [71.7, 473.0], [71.8, 473.0], [71.9, 473.0], [72.0, 473.0], [72.1, 473.0], [72.2, 473.0], [72.3, 473.0], [72.4, 474.0], [72.5, 474.0], [72.6, 474.0], [72.7, 475.0], [72.8, 475.0], [72.9, 475.0], [73.0, 475.0], [73.1, 475.0], [73.2, 475.0], [73.3, 475.0], [73.4, 480.0], [73.5, 480.0], [73.6, 480.0], [73.7, 485.0], [73.8, 485.0], [73.9, 485.0], [74.0, 486.0], [74.1, 486.0], [74.2, 486.0], [74.3, 486.0], [74.4, 486.0], [74.5, 486.0], [74.6, 486.0], [74.7, 492.0], [74.8, 492.0], [74.9, 492.0], [75.0, 497.0], [75.1, 497.0], [75.2, 497.0], [75.3, 497.0], [75.4, 497.0], [75.5, 497.0], [75.6, 497.0], [75.7, 498.0], [75.8, 498.0], [75.9, 498.0], [76.0, 499.0], [76.1, 499.0], [76.2, 499.0], [76.3, 499.0], [76.4, 502.0], [76.5, 502.0], [76.6, 502.0], [76.7, 504.0], [76.8, 504.0], [76.9, 504.0], [77.0, 505.0], [77.1, 505.0], [77.2, 505.0], [77.3, 505.0], [77.4, 518.0], [77.5, 518.0], [77.6, 518.0], [77.7, 522.0], [77.8, 522.0], [77.9, 522.0], [78.0, 529.0], [78.1, 529.0], [78.2, 529.0], [78.3, 529.0], [78.4, 532.0], [78.5, 532.0], [78.6, 532.0], [78.7, 533.0], [78.8, 533.0], [78.9, 533.0], [79.0, 545.0], [79.1, 545.0], [79.2, 545.0], [79.3, 545.0], [79.4, 574.0], [79.5, 574.0], [79.6, 574.0], [79.7, 598.0], [79.8, 598.0], [79.9, 598.0], [80.0, 600.0], [80.1, 600.0], [80.2, 600.0], [80.3, 600.0], [80.4, 619.0], [80.5, 619.0], [80.6, 619.0], [80.7, 621.0], [80.8, 621.0], [80.9, 621.0], [81.0, 625.0], [81.1, 625.0], [81.2, 625.0], [81.3, 625.0], [81.4, 629.0], [81.5, 629.0], [81.6, 629.0], [81.7, 631.0], [81.8, 631.0], [81.9, 631.0], [82.0, 639.0], [82.1, 639.0], [82.2, 639.0], [82.3, 639.0], [82.4, 651.0], [82.5, 651.0], [82.6, 651.0], [82.7, 652.0], [82.8, 652.0], [82.9, 652.0], [83.0, 653.0], [83.1, 653.0], [83.2, 653.0], [83.3, 653.0], [83.4, 663.0], [83.5, 663.0], [83.6, 663.0], [83.7, 667.0], [83.8, 667.0], [83.9, 667.0], [84.0, 669.0], [84.1, 669.0], [84.2, 669.0], [84.3, 669.0], [84.4, 669.0], [84.5, 669.0], [84.6, 669.0], [84.7, 676.0], [84.8, 676.0], [84.9, 676.0], [85.0, 677.0], [85.1, 677.0], [85.2, 677.0], [85.3, 677.0], [85.4, 683.0], [85.5, 683.0], [85.6, 683.0], [85.7, 688.0], [85.8, 688.0], [85.9, 688.0], [86.0, 689.0], [86.1, 689.0], [86.2, 689.0], [86.3, 689.0], [86.4, 690.0], [86.5, 690.0], [86.6, 690.0], [86.7, 694.0], [86.8, 694.0], [86.9, 694.0], [87.0, 694.0], [87.1, 694.0], [87.2, 694.0], [87.3, 694.0], [87.4, 695.0], [87.5, 695.0], [87.6, 695.0], [87.7, 705.0], [87.8, 705.0], [87.9, 705.0], [88.0, 706.0], [88.1, 706.0], [88.2, 706.0], [88.3, 706.0], [88.4, 710.0], [88.5, 710.0], [88.6, 710.0], [88.7, 710.0], [88.8, 710.0], [88.9, 710.0], [89.0, 719.0], [89.1, 719.0], [89.2, 719.0], [89.3, 719.0], [89.4, 720.0], [89.5, 720.0], [89.6, 720.0], [89.7, 725.0], [89.8, 725.0], [89.9, 725.0], [90.0, 727.0], [90.1, 727.0], [90.2, 727.0], [90.3, 727.0], [90.4, 727.0], [90.5, 727.0], [90.6, 727.0], [90.7, 736.0], [90.8, 736.0], [90.9, 736.0], [91.0, 738.0], [91.1, 738.0], [91.2, 738.0], [91.3, 738.0], [91.4, 738.0], [91.5, 738.0], [91.6, 738.0], [91.7, 742.0], [91.8, 742.0], [91.9, 742.0], [92.0, 744.0], [92.1, 744.0], [92.2, 744.0], [92.3, 744.0], [92.4, 751.0], [92.5, 751.0], [92.6, 751.0], [92.7, 753.0], [92.8, 753.0], [92.9, 753.0], [93.0, 756.0], [93.1, 756.0], [93.2, 756.0], [93.3, 756.0], [93.4, 759.0], [93.5, 759.0], [93.6, 759.0], [93.7, 760.0], [93.8, 760.0], [93.9, 760.0], [94.0, 760.0], [94.1, 760.0], [94.2, 760.0], [94.3, 760.0], [94.4, 762.0], [94.5, 762.0], [94.6, 762.0], [94.7, 765.0], [94.8, 765.0], [94.9, 765.0], [95.0, 767.0], [95.1, 767.0], [95.2, 767.0], [95.3, 767.0], [95.4, 770.0], [95.5, 770.0], [95.6, 770.0], [95.7, 771.0], [95.8, 771.0], [95.9, 771.0], [96.0, 775.0], [96.1, 775.0], [96.2, 775.0], [96.3, 775.0], [96.4, 780.0], [96.5, 780.0], [96.6, 780.0], [96.7, 783.0], [96.8, 783.0], [96.9, 783.0], [97.0, 806.0], [97.1, 806.0], [97.2, 806.0], [97.3, 806.0], [97.4, 813.0], [97.5, 813.0], [97.6, 813.0], [97.7, 825.0], [97.8, 825.0], [97.9, 825.0], [98.0, 829.0], [98.1, 829.0], [98.2, 829.0], [98.3, 829.0], [98.4, 839.0], [98.5, 839.0], [98.6, 839.0], [98.7, 868.0], [98.8, 868.0], [98.9, 868.0], [99.0, 897.0], [99.1, 897.0], [99.2, 897.0], [99.3, 897.0], [99.4, 981.0], [99.5, 981.0], [99.6, 981.0], [99.7, 1238.0], [99.8, 1238.0], [99.9, 1238.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 180.0], [0.1, 180.0], [0.2, 180.0], [0.3, 180.0], [0.4, 183.0], [0.5, 183.0], [0.6, 183.0], [0.7, 188.0], [0.8, 188.0], [0.9, 188.0], [1.0, 195.0], [1.1, 195.0], [1.2, 195.0], [1.3, 195.0], [1.4, 201.0], [1.5, 201.0], [1.6, 201.0], [1.7, 233.0], [1.8, 233.0], [1.9, 233.0], [2.0, 239.0], [2.1, 239.0], [2.2, 239.0], [2.3, 239.0], [2.4, 253.0], [2.5, 253.0], [2.6, 253.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 277.0], [3.1, 277.0], [3.2, 277.0], [3.3, 277.0], [3.4, 374.0], [3.5, 374.0], [3.6, 374.0], [3.7, 454.0], [3.8, 454.0], [3.9, 454.0], [4.0, 532.0], [4.1, 532.0], [4.2, 532.0], [4.3, 532.0], [4.4, 575.0], [4.5, 575.0], [4.6, 575.0], [4.7, 664.0], [4.8, 664.0], [4.9, 664.0], [5.0, 667.0], [5.1, 667.0], [5.2, 667.0], [5.3, 667.0], [5.4, 675.0], [5.5, 675.0], [5.6, 675.0], [5.7, 684.0], [5.8, 684.0], [5.9, 684.0], [6.0, 686.0], [6.1, 686.0], [6.2, 686.0], [6.3, 686.0], [6.4, 689.0], [6.5, 689.0], [6.6, 689.0], [6.7, 703.0], [6.8, 703.0], [6.9, 703.0], [7.0, 712.0], [7.1, 712.0], [7.2, 712.0], [7.3, 712.0], [7.4, 743.0], [7.5, 743.0], [7.6, 743.0], [7.7, 825.0], [7.8, 825.0], [7.9, 825.0], [8.0, 990.0], [8.1, 990.0], [8.2, 990.0], [8.3, 990.0], [8.4, 1012.0], [8.5, 1012.0], [8.6, 1012.0], [8.7, 1029.0], [8.8, 1029.0], [8.9, 1029.0], [9.0, 1040.0], [9.1, 1040.0], [9.2, 1040.0], [9.3, 1040.0], [9.4, 1055.0], [9.5, 1055.0], [9.6, 1055.0], [9.7, 1073.0], [9.8, 1073.0], [9.9, 1073.0], [10.0, 1095.0], [10.1, 1095.0], [10.2, 1095.0], [10.3, 1095.0], [10.4, 1117.0], [10.5, 1117.0], [10.6, 1117.0], [10.7, 1138.0], [10.8, 1138.0], [10.9, 1138.0], [11.0, 1138.0], [11.1, 1253.0], [11.2, 1253.0], [11.3, 1253.0], [11.4, 1310.0], [11.5, 1310.0], [11.6, 1310.0], [11.7, 1391.0], [11.8, 1391.0], [11.9, 1391.0], [12.0, 1391.0], [12.1, 1433.0], [12.2, 1433.0], [12.3, 1433.0], [12.4, 1437.0], [12.5, 1437.0], [12.6, 1437.0], [12.7, 1462.0], [12.8, 1462.0], [12.9, 1462.0], [13.0, 1462.0], [13.1, 1477.0], [13.2, 1477.0], [13.3, 1477.0], [13.4, 1481.0], [13.5, 1481.0], [13.6, 1481.0], [13.7, 1491.0], [13.8, 1491.0], [13.9, 1491.0], [14.0, 1491.0], [14.1, 1552.0], [14.2, 1552.0], [14.3, 1552.0], [14.4, 1567.0], [14.5, 1567.0], [14.6, 1567.0], [14.7, 1586.0], [14.8, 1586.0], [14.9, 1586.0], [15.0, 1586.0], [15.1, 1638.0], [15.2, 1638.0], [15.3, 1638.0], [15.4, 1768.0], [15.5, 1768.0], [15.6, 1768.0], [15.7, 1780.0], [15.8, 1780.0], [15.9, 1780.0], [16.0, 1780.0], [16.1, 1797.0], [16.2, 1797.0], [16.3, 1797.0], [16.4, 1829.0], [16.5, 1829.0], [16.6, 1829.0], [16.7, 1844.0], [16.8, 1844.0], [16.9, 1844.0], [17.0, 1844.0], [17.1, 1857.0], [17.2, 1857.0], [17.3, 1857.0], [17.4, 1862.0], [17.5, 1862.0], [17.6, 1862.0], [17.7, 1868.0], [17.8, 1868.0], [17.9, 1868.0], [18.0, 1868.0], [18.1, 1886.0], [18.2, 1886.0], [18.3, 1886.0], [18.4, 1909.0], [18.5, 1909.0], [18.6, 1909.0], [18.7, 1921.0], [18.8, 1921.0], [18.9, 1921.0], [19.0, 1962.0], [19.1, 1962.0], [19.2, 1962.0], [19.3, 1962.0], [19.4, 2032.0], [19.5, 2032.0], [19.6, 2032.0], [19.7, 2093.0], [19.8, 2093.0], [19.9, 2093.0], [20.0, 2137.0], [20.1, 2137.0], [20.2, 2137.0], [20.3, 2137.0], [20.4, 2143.0], [20.5, 2143.0], [20.6, 2143.0], [20.7, 2146.0], [20.8, 2146.0], [20.9, 2146.0], [21.0, 2234.0], [21.1, 2234.0], [21.2, 2234.0], [21.3, 2234.0], [21.4, 2250.0], [21.5, 2250.0], [21.6, 2250.0], [21.7, 2277.0], [21.8, 2277.0], [21.9, 2277.0], [22.0, 2280.0], [22.1, 2280.0], [22.2, 2280.0], [22.3, 2280.0], [22.4, 2285.0], [22.5, 2285.0], [22.6, 2285.0], [22.7, 2287.0], [22.8, 2287.0], [22.9, 2287.0], [23.0, 2320.0], [23.1, 2320.0], [23.2, 2320.0], [23.3, 2320.0], [23.4, 2329.0], [23.5, 2329.0], [23.6, 2329.0], [23.7, 2335.0], [23.8, 2335.0], [23.9, 2335.0], [24.0, 2343.0], [24.1, 2343.0], [24.2, 2343.0], [24.3, 2343.0], [24.4, 2363.0], [24.5, 2363.0], [24.6, 2363.0], [24.7, 2374.0], [24.8, 2374.0], [24.9, 2374.0], [25.0, 2392.0], [25.1, 2392.0], [25.2, 2392.0], [25.3, 2392.0], [25.4, 2422.0], [25.5, 2422.0], [25.6, 2422.0], [25.7, 2532.0], [25.8, 2532.0], [25.9, 2532.0], [26.0, 2561.0], [26.1, 2561.0], [26.2, 2561.0], [26.3, 2561.0], [26.4, 2588.0], [26.5, 2588.0], [26.6, 2588.0], [26.7, 2608.0], [26.8, 2608.0], [26.9, 2608.0], [27.0, 2706.0], [27.1, 2706.0], [27.2, 2706.0], [27.3, 2706.0], [27.4, 2772.0], [27.5, 2772.0], [27.6, 2772.0], [27.7, 2784.0], [27.8, 2784.0], [27.9, 2784.0], [28.0, 2788.0], [28.1, 2788.0], [28.2, 2788.0], [28.3, 2788.0], [28.4, 2790.0], [28.5, 2790.0], [28.6, 2790.0], [28.7, 2796.0], [28.8, 2796.0], [28.9, 2796.0], [29.0, 2812.0], [29.1, 2812.0], [29.2, 2812.0], [29.3, 2812.0], [29.4, 2814.0], [29.5, 2814.0], [29.6, 2814.0], [29.7, 2816.0], [29.8, 2816.0], [29.9, 2816.0], [30.0, 2824.0], [30.1, 2824.0], [30.2, 2824.0], [30.3, 2824.0], [30.4, 2855.0], [30.5, 2855.0], [30.6, 2855.0], [30.7, 2857.0], [30.8, 2857.0], [30.9, 2857.0], [31.0, 2861.0], [31.1, 2861.0], [31.2, 2861.0], [31.3, 2861.0], [31.4, 2932.0], [31.5, 2932.0], [31.6, 2932.0], [31.7, 2972.0], [31.8, 2972.0], [31.9, 2972.0], [32.0, 2988.0], [32.1, 2988.0], [32.2, 2988.0], [32.3, 2988.0], [32.4, 3030.0], [32.5, 3030.0], [32.6, 3030.0], [32.7, 3032.0], [32.8, 3032.0], [32.9, 3032.0], [33.0, 3049.0], [33.1, 3049.0], [33.2, 3049.0], [33.3, 3049.0], [33.4, 3056.0], [33.5, 3056.0], [33.6, 3056.0], [33.7, 3061.0], [33.8, 3061.0], [33.9, 3061.0], [34.0, 3110.0], [34.1, 3110.0], [34.2, 3110.0], [34.3, 3110.0], [34.4, 3112.0], [34.5, 3112.0], [34.6, 3112.0], [34.7, 3113.0], [34.8, 3113.0], [34.9, 3113.0], [35.0, 3142.0], [35.1, 3142.0], [35.2, 3142.0], [35.3, 3142.0], [35.4, 3144.0], [35.5, 3144.0], [35.6, 3144.0], [35.7, 3200.0], [35.8, 3200.0], [35.9, 3200.0], [36.0, 3202.0], [36.1, 3202.0], [36.2, 3202.0], [36.3, 3202.0], [36.4, 3210.0], [36.5, 3210.0], [36.6, 3210.0], [36.7, 3219.0], [36.8, 3219.0], [36.9, 3219.0], [37.0, 3219.0], [37.1, 3219.0], [37.2, 3219.0], [37.3, 3219.0], [37.4, 3276.0], [37.5, 3276.0], [37.6, 3276.0], [37.7, 3316.0], [37.8, 3316.0], [37.9, 3316.0], [38.0, 3342.0], [38.1, 3342.0], [38.2, 3342.0], [38.3, 3342.0], [38.4, 3349.0], [38.5, 3349.0], [38.6, 3349.0], [38.7, 3349.0], [38.8, 3349.0], [38.9, 3349.0], [39.0, 3354.0], [39.1, 3354.0], [39.2, 3354.0], [39.3, 3354.0], [39.4, 3358.0], [39.5, 3358.0], [39.6, 3358.0], [39.7, 3359.0], [39.8, 3359.0], [39.9, 3359.0], [40.0, 3366.0], [40.1, 3366.0], [40.2, 3366.0], [40.3, 3366.0], [40.4, 3370.0], [40.5, 3370.0], [40.6, 3370.0], [40.7, 3378.0], [40.8, 3378.0], [40.9, 3378.0], [41.0, 3419.0], [41.1, 3419.0], [41.2, 3419.0], [41.3, 3419.0], [41.4, 3420.0], [41.5, 3420.0], [41.6, 3420.0], [41.7, 3445.0], [41.8, 3445.0], [41.9, 3445.0], [42.0, 3445.0], [42.1, 3480.0], [42.2, 3480.0], [42.3, 3480.0], [42.4, 3486.0], [42.5, 3486.0], [42.6, 3486.0], [42.7, 3491.0], [42.8, 3491.0], [42.9, 3491.0], [43.0, 3491.0], [43.1, 3535.0], [43.2, 3535.0], [43.3, 3535.0], [43.4, 3543.0], [43.5, 3543.0], [43.6, 3543.0], [43.7, 3543.0], [43.8, 3543.0], [43.9, 3543.0], [44.0, 3543.0], [44.1, 3551.0], [44.2, 3551.0], [44.3, 3551.0], [44.4, 3600.0], [44.5, 3600.0], [44.6, 3600.0], [44.7, 3601.0], [44.8, 3601.0], [44.9, 3601.0], [45.0, 3601.0], [45.1, 3602.0], [45.2, 3602.0], [45.3, 3602.0], [45.4, 3602.0], [45.5, 3602.0], [45.6, 3602.0], [45.7, 3617.0], [45.8, 3617.0], [45.9, 3617.0], [46.0, 3617.0], [46.1, 3629.0], [46.2, 3629.0], [46.3, 3629.0], [46.4, 3631.0], [46.5, 3631.0], [46.6, 3631.0], [46.7, 3632.0], [46.8, 3632.0], [46.9, 3632.0], [47.0, 3632.0], [47.1, 3636.0], [47.2, 3636.0], [47.3, 3636.0], [47.4, 3640.0], [47.5, 3640.0], [47.6, 3640.0], [47.7, 3657.0], [47.8, 3657.0], [47.9, 3657.0], [48.0, 3657.0], [48.1, 3670.0], [48.2, 3670.0], [48.3, 3670.0], [48.4, 3672.0], [48.5, 3672.0], [48.6, 3672.0], [48.7, 3675.0], [48.8, 3675.0], [48.9, 3675.0], [49.0, 3675.0], [49.1, 3688.0], [49.2, 3688.0], [49.3, 3688.0], [49.4, 3697.0], [49.5, 3697.0], [49.6, 3697.0], [49.7, 3700.0], [49.8, 3700.0], [49.9, 3700.0], [50.0, 3700.0], [50.1, 3704.0], [50.2, 3704.0], [50.3, 3704.0], [50.4, 3727.0], [50.5, 3727.0], [50.6, 3727.0], [50.7, 3731.0], [50.8, 3731.0], [50.9, 3731.0], [51.0, 3731.0], [51.1, 3732.0], [51.2, 3732.0], [51.3, 3732.0], [51.4, 3736.0], [51.5, 3736.0], [51.6, 3736.0], [51.7, 3737.0], [51.8, 3737.0], [51.9, 3737.0], [52.0, 3737.0], [52.1, 3737.0], [52.2, 3737.0], [52.3, 3737.0], [52.4, 3743.0], [52.5, 3743.0], [52.6, 3743.0], [52.7, 3747.0], [52.8, 3747.0], [52.9, 3747.0], [53.0, 3747.0], [53.1, 4013.0], [53.2, 4013.0], [53.3, 4013.0], [53.4, 4032.0], [53.5, 4032.0], [53.6, 4032.0], [53.7, 4208.0], [53.8, 4208.0], [53.9, 4208.0], [54.0, 4208.0], [54.1, 4219.0], [54.2, 4219.0], [54.3, 4219.0], [54.4, 4232.0], [54.5, 4232.0], [54.6, 4232.0], [54.7, 4248.0], [54.8, 4248.0], [54.9, 4248.0], [55.0, 4248.0], [55.1, 4272.0], [55.2, 4272.0], [55.3, 4272.0], [55.4, 4322.0], [55.5, 4322.0], [55.6, 4322.0], [55.7, 4341.0], [55.8, 4341.0], [55.9, 4341.0], [56.0, 4341.0], [56.1, 4341.0], [56.2, 4341.0], [56.3, 4341.0], [56.4, 4349.0], [56.5, 4349.0], [56.6, 4349.0], [56.7, 4352.0], [56.8, 4352.0], [56.9, 4352.0], [57.0, 4352.0], [57.1, 4357.0], [57.2, 4357.0], [57.3, 4357.0], [57.4, 4357.0], [57.5, 4357.0], [57.6, 4357.0], [57.7, 4359.0], [57.8, 4359.0], [57.9, 4359.0], [58.0, 4359.0], [58.1, 4363.0], [58.2, 4363.0], [58.3, 4363.0], [58.4, 4369.0], [58.5, 4369.0], [58.6, 4369.0], [58.7, 4426.0], [58.8, 4426.0], [58.9, 4426.0], [59.0, 4426.0], [59.1, 4427.0], [59.2, 4427.0], [59.3, 4427.0], [59.4, 4448.0], [59.5, 4448.0], [59.6, 4448.0], [59.7, 4456.0], [59.8, 4456.0], [59.9, 4456.0], [60.0, 4456.0], [60.1, 4562.0], [60.2, 4562.0], [60.3, 4562.0], [60.4, 4568.0], [60.5, 4568.0], [60.6, 4568.0], [60.7, 4569.0], [60.8, 4569.0], [60.9, 4569.0], [61.0, 4569.0], [61.1, 4571.0], [61.2, 4571.0], [61.3, 4571.0], [61.4, 4575.0], [61.5, 4575.0], [61.6, 4575.0], [61.7, 4581.0], [61.8, 4581.0], [61.9, 4581.0], [62.0, 4581.0], [62.1, 4581.0], [62.2, 4581.0], [62.3, 4581.0], [62.4, 4584.0], [62.5, 4584.0], [62.6, 4584.0], [62.7, 4585.0], [62.8, 4585.0], [62.9, 4585.0], [63.0, 4585.0], [63.1, 4586.0], [63.2, 4586.0], [63.3, 4586.0], [63.4, 4589.0], [63.5, 4589.0], [63.6, 4589.0], [63.7, 4589.0], [63.8, 4589.0], [63.9, 4589.0], [64.0, 4589.0], [64.1, 4590.0], [64.2, 4590.0], [64.3, 4590.0], [64.4, 4595.0], [64.5, 4595.0], [64.6, 4595.0], [64.7, 4600.0], [64.8, 4600.0], [64.9, 4600.0], [65.0, 4600.0], [65.1, 4674.0], [65.2, 4674.0], [65.3, 4674.0], [65.4, 4723.0], [65.5, 4723.0], [65.6, 4723.0], [65.7, 4730.0], [65.8, 4730.0], [65.9, 4730.0], [66.0, 4730.0], [66.1, 4757.0], [66.2, 4757.0], [66.3, 4757.0], [66.4, 4768.0], [66.5, 4768.0], [66.6, 4768.0], [66.7, 4774.0], [66.8, 4774.0], [66.9, 4774.0], [67.0, 4774.0], [67.1, 4808.0], [67.2, 4808.0], [67.3, 4808.0], [67.4, 4832.0], [67.5, 4832.0], [67.6, 4832.0], [67.7, 4865.0], [67.8, 4865.0], [67.9, 4865.0], [68.0, 4865.0], [68.1, 4866.0], [68.2, 4866.0], [68.3, 4866.0], [68.4, 4866.0], [68.5, 4866.0], [68.6, 4866.0], [68.7, 4887.0], [68.8, 4887.0], [68.9, 4887.0], [69.0, 4887.0], [69.1, 4895.0], [69.2, 4895.0], [69.3, 4895.0], [69.4, 4903.0], [69.5, 4903.0], [69.6, 4903.0], [69.7, 4988.0], [69.8, 4988.0], [69.9, 4988.0], [70.0, 4988.0], [70.1, 4995.0], [70.2, 4995.0], [70.3, 4995.0], [70.4, 4997.0], [70.5, 4997.0], [70.6, 4997.0], [70.7, 4999.0], [70.8, 4999.0], [70.9, 4999.0], [71.0, 4999.0], [71.1, 4999.0], [71.2, 4999.0], [71.3, 4999.0], [71.4, 5002.0], [71.5, 5002.0], [71.6, 5002.0], [71.7, 5038.0], [71.8, 5038.0], [71.9, 5038.0], [72.0, 5038.0], [72.1, 5095.0], [72.2, 5095.0], [72.3, 5095.0], [72.4, 5100.0], [72.5, 5100.0], [72.6, 5100.0], [72.7, 5103.0], [72.8, 5103.0], [72.9, 5103.0], [73.0, 5103.0], [73.1, 5121.0], [73.2, 5121.0], [73.3, 5121.0], [73.4, 5125.0], [73.5, 5125.0], [73.6, 5125.0], [73.7, 5137.0], [73.8, 5137.0], [73.9, 5137.0], [74.0, 5249.0], [74.1, 5249.0], [74.2, 5249.0], [74.3, 5249.0], [74.4, 5367.0], [74.5, 5367.0], [74.6, 5367.0], [74.7, 5367.0], [74.8, 5367.0], [74.9, 5367.0], [75.0, 5384.0], [75.1, 5384.0], [75.2, 5384.0], [75.3, 5384.0], [75.4, 5385.0], [75.5, 5385.0], [75.6, 5385.0], [75.7, 5389.0], [75.8, 5389.0], [75.9, 5389.0], [76.0, 5423.0], [76.1, 5423.0], [76.2, 5423.0], [76.3, 5423.0], [76.4, 5461.0], [76.5, 5461.0], [76.6, 5461.0], [76.7, 5464.0], [76.8, 5464.0], [76.9, 5464.0], [77.0, 5483.0], [77.1, 5483.0], [77.2, 5483.0], [77.3, 5483.0], [77.4, 5488.0], [77.5, 5488.0], [77.6, 5488.0], [77.7, 5499.0], [77.8, 5499.0], [77.9, 5499.0], [78.0, 5502.0], [78.1, 5502.0], [78.2, 5502.0], [78.3, 5502.0], [78.4, 5503.0], [78.5, 5503.0], [78.6, 5503.0], [78.7, 5504.0], [78.8, 5504.0], [78.9, 5504.0], [79.0, 5505.0], [79.1, 5505.0], [79.2, 5505.0], [79.3, 5505.0], [79.4, 5505.0], [79.5, 5505.0], [79.6, 5505.0], [79.7, 5647.0], [79.8, 5647.0], [79.9, 5647.0], [80.0, 5670.0], [80.1, 5670.0], [80.2, 5670.0], [80.3, 5670.0], [80.4, 5679.0], [80.5, 5679.0], [80.6, 5679.0], [80.7, 5681.0], [80.8, 5681.0], [80.9, 5681.0], [81.0, 5681.0], [81.1, 5681.0], [81.2, 5681.0], [81.3, 5681.0], [81.4, 5681.0], [81.5, 5681.0], [81.6, 5681.0], [81.7, 5691.0], [81.8, 5691.0], [81.9, 5691.0], [82.0, 5692.0], [82.1, 5692.0], [82.2, 5692.0], [82.3, 5692.0], [82.4, 5700.0], [82.5, 5700.0], [82.6, 5700.0], [82.7, 5737.0], [82.8, 5737.0], [82.9, 5737.0], [83.0, 5782.0], [83.1, 5782.0], [83.2, 5782.0], [83.3, 5782.0], [83.4, 5787.0], [83.5, 5787.0], [83.6, 5787.0], [83.7, 5787.0], [83.8, 5787.0], [83.9, 5787.0], [84.0, 5787.0], [84.1, 5787.0], [84.2, 5787.0], [84.3, 5787.0], [84.4, 5787.0], [84.5, 5787.0], [84.6, 5787.0], [84.7, 5801.0], [84.8, 5801.0], [84.9, 5801.0], [85.0, 5808.0], [85.1, 5808.0], [85.2, 5808.0], [85.3, 5808.0], [85.4, 5820.0], [85.5, 5820.0], [85.6, 5820.0], [85.7, 5842.0], [85.8, 5842.0], [85.9, 5842.0], [86.0, 5845.0], [86.1, 5845.0], [86.2, 5845.0], [86.3, 5845.0], [86.4, 5850.0], [86.5, 5850.0], [86.6, 5850.0], [86.7, 5864.0], [86.8, 5864.0], [86.9, 5864.0], [87.0, 5888.0], [87.1, 5888.0], [87.2, 5888.0], [87.3, 5888.0], [87.4, 5944.0], [87.5, 5944.0], [87.6, 5944.0], [87.7, 5987.0], [87.8, 5987.0], [87.9, 5987.0], [88.0, 5987.0], [88.1, 5987.0], [88.2, 5987.0], [88.3, 5987.0], [88.4, 5988.0], [88.5, 5988.0], [88.6, 5988.0], [88.7, 5989.0], [88.8, 5989.0], [88.9, 5989.0], [89.0, 5989.0], [89.1, 5989.0], [89.2, 5989.0], [89.3, 5989.0], [89.4, 5989.0], [89.5, 5989.0], [89.6, 5989.0], [89.7, 5990.0], [89.8, 5990.0], [89.9, 5990.0], [90.0, 5990.0], [90.1, 5990.0], [90.2, 5990.0], [90.3, 5990.0], [90.4, 5990.0], [90.5, 5990.0], [90.6, 5990.0], [90.7, 5990.0], [90.8, 5990.0], [90.9, 5990.0], [91.0, 5993.0], [91.1, 5993.0], [91.2, 5993.0], [91.3, 5993.0], [91.4, 5993.0], [91.5, 5993.0], [91.6, 5993.0], [91.7, 5994.0], [91.8, 5994.0], [91.9, 5994.0], [92.0, 5996.0], [92.1, 5996.0], [92.2, 5996.0], [92.3, 5996.0], [92.4, 5998.0], [92.5, 5998.0], [92.6, 5998.0], [92.7, 5999.0], [92.8, 5999.0], [92.9, 5999.0], [93.0, 6000.0], [93.1, 6000.0], [93.2, 6000.0], [93.3, 6000.0], [93.4, 6002.0], [93.5, 6002.0], [93.6, 6002.0], [93.7, 6003.0], [93.8, 6003.0], [93.9, 6003.0], [94.0, 6010.0], [94.1, 6010.0], [94.2, 6010.0], [94.3, 6010.0], [94.4, 6070.0], [94.5, 6070.0], [94.6, 6070.0], [94.7, 6072.0], [94.8, 6072.0], [94.9, 6072.0], [95.0, 6091.0], [95.1, 6091.0], [95.2, 6091.0], [95.3, 6091.0], [95.4, 6097.0], [95.5, 6097.0], [95.6, 6097.0], [95.7, 6133.0], [95.8, 6133.0], [95.9, 6133.0], [96.0, 6143.0], [96.1, 6143.0], [96.2, 6143.0], [96.3, 6143.0], [96.4, 6172.0], [96.5, 6172.0], [96.6, 6172.0], [96.7, 6173.0], [96.8, 6173.0], [96.9, 6173.0], [97.0, 6175.0], [97.1, 6175.0], [97.2, 6175.0], [97.3, 6175.0], [97.4, 6231.0], [97.5, 6231.0], [97.6, 6231.0], [97.7, 6232.0], [97.8, 6232.0], [97.9, 6232.0], [98.0, 6235.0], [98.1, 6235.0], [98.2, 6235.0], [98.3, 6235.0], [98.4, 6239.0], [98.5, 6239.0], [98.6, 6239.0], [98.7, 6242.0], [98.8, 6242.0], [98.9, 6242.0], [99.0, 6316.0], [99.1, 6316.0], [99.2, 6316.0], [99.3, 6316.0], [99.4, 6322.0], [99.5, 6322.0], [99.6, 6322.0], [99.7, 6399.0], [99.8, 6399.0], [99.9, 6399.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 573.0], [0.1, 573.0], [0.2, 573.0], [0.3, 573.0], [0.4, 574.0], [0.5, 574.0], [0.6, 574.0], [0.7, 588.0], [0.8, 588.0], [0.9, 588.0], [1.0, 599.0], [1.1, 599.0], [1.2, 599.0], [1.3, 599.0], [1.4, 622.0], [1.5, 622.0], [1.6, 622.0], [1.7, 642.0], [1.8, 642.0], [1.9, 642.0], [2.0, 645.0], [2.1, 645.0], [2.2, 645.0], [2.3, 645.0], [2.4, 669.0], [2.5, 669.0], [2.6, 669.0], [2.7, 676.0], [2.8, 676.0], [2.9, 676.0], [3.0, 688.0], [3.1, 688.0], [3.2, 688.0], [3.3, 688.0], [3.4, 756.0], [3.5, 756.0], [3.6, 756.0], [3.7, 776.0], [3.8, 776.0], [3.9, 776.0], [4.0, 880.0], [4.1, 880.0], [4.2, 880.0], [4.3, 880.0], [4.4, 964.0], [4.5, 964.0], [4.6, 964.0], [4.7, 1024.0], [4.8, 1024.0], [4.9, 1024.0], [5.0, 1041.0], [5.1, 1041.0], [5.2, 1041.0], [5.3, 1041.0], [5.4, 1062.0], [5.5, 1062.0], [5.6, 1062.0], [5.7, 1071.0], [5.8, 1071.0], [5.9, 1071.0], [6.0, 1079.0], [6.1, 1079.0], [6.2, 1079.0], [6.3, 1079.0], [6.4, 1080.0], [6.5, 1080.0], [6.6, 1080.0], [6.7, 1095.0], [6.8, 1095.0], [6.9, 1095.0], [7.0, 1113.0], [7.1, 1113.0], [7.2, 1113.0], [7.3, 1113.0], [7.4, 1140.0], [7.5, 1140.0], [7.6, 1140.0], [7.7, 1240.0], [7.8, 1240.0], [7.9, 1240.0], [8.0, 1390.0], [8.1, 1390.0], [8.2, 1390.0], [8.3, 1390.0], [8.4, 1408.0], [8.5, 1408.0], [8.6, 1408.0], [8.7, 1429.0], [8.8, 1429.0], [8.9, 1429.0], [9.0, 1445.0], [9.1, 1445.0], [9.2, 1445.0], [9.3, 1445.0], [9.4, 1469.0], [9.5, 1469.0], [9.6, 1469.0], [9.7, 1490.0], [9.8, 1490.0], [9.9, 1490.0], [10.0, 1494.0], [10.1, 1494.0], [10.2, 1494.0], [10.3, 1494.0], [10.4, 1496.0], [10.5, 1496.0], [10.6, 1496.0], [10.7, 1537.0], [10.8, 1537.0], [10.9, 1537.0], [11.0, 1537.0], [11.1, 1690.0], [11.2, 1690.0], [11.3, 1690.0], [11.4, 1704.0], [11.5, 1704.0], [11.6, 1704.0], [11.7, 1809.0], [11.8, 1809.0], [11.9, 1809.0], [12.0, 1809.0], [12.1, 1836.0], [12.2, 1836.0], [12.3, 1836.0], [12.4, 1863.0], [12.5, 1863.0], [12.6, 1863.0], [12.7, 1877.0], [12.8, 1877.0], [12.9, 1877.0], [13.0, 1877.0], [13.1, 1878.0], [13.2, 1878.0], [13.3, 1878.0], [13.4, 1898.0], [13.5, 1898.0], [13.6, 1898.0], [13.7, 1920.0], [13.8, 1920.0], [13.9, 1920.0], [14.0, 1920.0], [14.1, 1927.0], [14.2, 1927.0], [14.3, 1927.0], [14.4, 1984.0], [14.5, 1984.0], [14.6, 1984.0], [14.7, 2020.0], [14.8, 2020.0], [14.9, 2020.0], [15.0, 2020.0], [15.1, 2064.0], [15.2, 2064.0], [15.3, 2064.0], [15.4, 2163.0], [15.5, 2163.0], [15.6, 2163.0], [15.7, 2191.0], [15.8, 2191.0], [15.9, 2191.0], [16.0, 2191.0], [16.1, 2212.0], [16.2, 2212.0], [16.3, 2212.0], [16.4, 2254.0], [16.5, 2254.0], [16.6, 2254.0], [16.7, 2264.0], [16.8, 2264.0], [16.9, 2264.0], [17.0, 2264.0], [17.1, 2284.0], [17.2, 2284.0], [17.3, 2284.0], [17.4, 2287.0], [17.5, 2287.0], [17.6, 2287.0], [17.7, 2298.0], [17.8, 2298.0], [17.9, 2298.0], [18.0, 2298.0], [18.1, 2310.0], [18.2, 2310.0], [18.3, 2310.0], [18.4, 2342.0], [18.5, 2342.0], [18.6, 2342.0], [18.7, 2367.0], [18.8, 2367.0], [18.9, 2367.0], [19.0, 2371.0], [19.1, 2371.0], [19.2, 2371.0], [19.3, 2371.0], [19.4, 2473.0], [19.5, 2473.0], [19.6, 2473.0], [19.7, 2537.0], [19.8, 2537.0], [19.9, 2537.0], [20.0, 2574.0], [20.1, 2574.0], [20.2, 2574.0], [20.3, 2574.0], [20.4, 2590.0], [20.5, 2590.0], [20.6, 2590.0], [20.7, 2603.0], [20.8, 2603.0], [20.9, 2603.0], [21.0, 2690.0], [21.1, 2690.0], [21.2, 2690.0], [21.3, 2690.0], [21.4, 2707.0], [21.5, 2707.0], [21.6, 2707.0], [21.7, 2724.0], [21.8, 2724.0], [21.9, 2724.0], [22.0, 2738.0], [22.1, 2738.0], [22.2, 2738.0], [22.3, 2738.0], [22.4, 2739.0], [22.5, 2739.0], [22.6, 2739.0], [22.7, 2759.0], [22.8, 2759.0], [22.9, 2759.0], [23.0, 2777.0], [23.1, 2777.0], [23.2, 2777.0], [23.3, 2777.0], [23.4, 2797.0], [23.5, 2797.0], [23.6, 2797.0], [23.7, 2801.0], [23.8, 2801.0], [23.9, 2801.0], [24.0, 2808.0], [24.1, 2808.0], [24.2, 2808.0], [24.3, 2808.0], [24.4, 2825.0], [24.5, 2825.0], [24.6, 2825.0], [24.7, 2831.0], [24.8, 2831.0], [24.9, 2831.0], [25.0, 2849.0], [25.1, 2849.0], [25.2, 2849.0], [25.3, 2849.0], [25.4, 2875.0], [25.5, 2875.0], [25.6, 2875.0], [25.7, 2976.0], [25.8, 2976.0], [25.9, 2976.0], [26.0, 2998.0], [26.1, 2998.0], [26.2, 2998.0], [26.3, 2998.0], [26.4, 3044.0], [26.5, 3044.0], [26.6, 3044.0], [26.7, 3070.0], [26.8, 3070.0], [26.9, 3070.0], [27.0, 3142.0], [27.1, 3142.0], [27.2, 3142.0], [27.3, 3142.0], [27.4, 3228.0], [27.5, 3228.0], [27.6, 3228.0], [27.7, 3240.0], [27.8, 3240.0], [27.9, 3240.0], [28.0, 3240.0], [28.1, 3240.0], [28.2, 3240.0], [28.3, 3240.0], [28.4, 3244.0], [28.5, 3244.0], [28.6, 3244.0], [28.7, 3250.0], [28.8, 3250.0], [28.9, 3250.0], [29.0, 3253.0], [29.1, 3253.0], [29.2, 3253.0], [29.3, 3253.0], [29.4, 3262.0], [29.5, 3262.0], [29.6, 3262.0], [29.7, 3264.0], [29.8, 3264.0], [29.9, 3264.0], [30.0, 3270.0], [30.1, 3270.0], [30.2, 3270.0], [30.3, 3270.0], [30.4, 3274.0], [30.5, 3274.0], [30.6, 3274.0], [30.7, 3304.0], [30.8, 3304.0], [30.9, 3304.0], [31.0, 3308.0], [31.1, 3308.0], [31.2, 3308.0], [31.3, 3308.0], [31.4, 3397.0], [31.5, 3397.0], [31.6, 3397.0], [31.7, 3429.0], [31.8, 3429.0], [31.9, 3429.0], [32.0, 3469.0], [32.1, 3469.0], [32.2, 3469.0], [32.3, 3469.0], [32.4, 3482.0], [32.5, 3482.0], [32.6, 3482.0], [32.7, 3514.0], [32.8, 3514.0], [32.9, 3514.0], [33.0, 3543.0], [33.1, 3543.0], [33.2, 3543.0], [33.3, 3543.0], [33.4, 3549.0], [33.5, 3549.0], [33.6, 3549.0], [33.7, 3549.0], [33.8, 3549.0], [33.9, 3549.0], [34.0, 3603.0], [34.1, 3603.0], [34.2, 3603.0], [34.3, 3603.0], [34.4, 3659.0], [34.5, 3659.0], [34.6, 3659.0], [34.7, 3659.0], [34.8, 3659.0], [34.9, 3659.0], [35.0, 3665.0], [35.1, 3665.0], [35.2, 3665.0], [35.3, 3665.0], [35.4, 3680.0], [35.5, 3680.0], [35.6, 3680.0], [35.7, 3688.0], [35.8, 3688.0], [35.9, 3688.0], [36.0, 3727.0], [36.1, 3727.0], [36.2, 3727.0], [36.3, 3727.0], [36.4, 3750.0], [36.5, 3750.0], [36.6, 3750.0], [36.7, 3792.0], [36.8, 3792.0], [36.9, 3792.0], [37.0, 3792.0], [37.1, 3792.0], [37.2, 3792.0], [37.3, 3792.0], [37.4, 3849.0], [37.5, 3849.0], [37.6, 3849.0], [37.7, 3881.0], [37.8, 3881.0], [37.9, 3881.0], [38.0, 3897.0], [38.1, 3897.0], [38.2, 3897.0], [38.3, 3897.0], [38.4, 3900.0], [38.5, 3900.0], [38.6, 3900.0], [38.7, 3911.0], [38.8, 3911.0], [38.9, 3911.0], [39.0, 3972.0], [39.1, 3972.0], [39.2, 3972.0], [39.3, 3972.0], [39.4, 3979.0], [39.5, 3979.0], [39.6, 3979.0], [39.7, 3985.0], [39.8, 3985.0], [39.9, 3985.0], [40.0, 4015.0], [40.1, 4015.0], [40.2, 4015.0], [40.3, 4015.0], [40.4, 4034.0], [40.5, 4034.0], [40.6, 4034.0], [40.7, 4081.0], [40.8, 4081.0], [40.9, 4081.0], [41.0, 4087.0], [41.1, 4087.0], [41.2, 4087.0], [41.3, 4087.0], [41.4, 4087.0], [41.5, 4087.0], [41.6, 4087.0], [41.7, 4089.0], [41.8, 4089.0], [41.9, 4089.0], [42.0, 4101.0], [42.1, 4101.0], [42.2, 4101.0], [42.3, 4101.0], [42.4, 4107.0], [42.5, 4107.0], [42.6, 4107.0], [42.7, 4109.0], [42.8, 4109.0], [42.9, 4109.0], [43.0, 4109.0], [43.1, 4110.0], [43.2, 4110.0], [43.3, 4110.0], [43.4, 4120.0], [43.5, 4120.0], [43.6, 4120.0], [43.7, 4127.0], [43.8, 4127.0], [43.9, 4127.0], [44.0, 4127.0], [44.1, 4139.0], [44.2, 4139.0], [44.3, 4139.0], [44.4, 4149.0], [44.5, 4149.0], [44.6, 4149.0], [44.7, 4163.0], [44.8, 4163.0], [44.9, 4163.0], [45.0, 4163.0], [45.1, 4188.0], [45.2, 4188.0], [45.3, 4188.0], [45.4, 4196.0], [45.5, 4196.0], [45.6, 4196.0], [45.7, 4197.0], [45.8, 4197.0], [45.9, 4197.0], [46.0, 4197.0], [46.1, 4211.0], [46.2, 4211.0], [46.3, 4211.0], [46.4, 4237.0], [46.5, 4237.0], [46.6, 4237.0], [46.7, 4238.0], [46.8, 4238.0], [46.9, 4238.0], [47.0, 4238.0], [47.1, 4265.0], [47.2, 4265.0], [47.3, 4265.0], [47.4, 4270.0], [47.5, 4270.0], [47.6, 4270.0], [47.7, 4277.0], [47.8, 4277.0], [47.9, 4277.0], [48.0, 4277.0], [48.1, 4281.0], [48.2, 4281.0], [48.3, 4281.0], [48.4, 4301.0], [48.5, 4301.0], [48.6, 4301.0], [48.7, 4336.0], [48.8, 4336.0], [48.9, 4336.0], [49.0, 4336.0], [49.1, 4342.0], [49.2, 4342.0], [49.3, 4342.0], [49.4, 4351.0], [49.5, 4351.0], [49.6, 4351.0], [49.7, 4359.0], [49.8, 4359.0], [49.9, 4359.0], [50.0, 4359.0], [50.1, 4369.0], [50.2, 4369.0], [50.3, 4369.0], [50.4, 4390.0], [50.5, 4390.0], [50.6, 4390.0], [50.7, 4436.0], [50.8, 4436.0], [50.9, 4436.0], [51.0, 4436.0], [51.1, 4443.0], [51.2, 4443.0], [51.3, 4443.0], [51.4, 4459.0], [51.5, 4459.0], [51.6, 4459.0], [51.7, 4484.0], [51.8, 4484.0], [51.9, 4484.0], [52.0, 4484.0], [52.1, 4490.0], [52.2, 4490.0], [52.3, 4490.0], [52.4, 4503.0], [52.5, 4503.0], [52.6, 4503.0], [52.7, 4606.0], [52.8, 4606.0], [52.9, 4606.0], [53.0, 4606.0], [53.1, 4792.0], [53.2, 4792.0], [53.3, 4792.0], [53.4, 4796.0], [53.5, 4796.0], [53.6, 4796.0], [53.7, 4916.0], [53.8, 4916.0], [53.9, 4916.0], [54.0, 4916.0], [54.1, 5103.0], [54.2, 5103.0], [54.3, 5103.0], [54.4, 5119.0], [54.5, 5119.0], [54.6, 5119.0], [54.7, 5129.0], [54.8, 5129.0], [54.9, 5129.0], [55.0, 5129.0], [55.1, 5133.0], [55.2, 5133.0], [55.3, 5133.0], [55.4, 5147.0], [55.5, 5147.0], [55.6, 5147.0], [55.7, 5164.0], [55.8, 5164.0], [55.9, 5164.0], [56.0, 5164.0], [56.1, 5183.0], [56.2, 5183.0], [56.3, 5183.0], [56.4, 5212.0], [56.5, 5212.0], [56.6, 5212.0], [56.7, 5215.0], [56.8, 5215.0], [56.9, 5215.0], [57.0, 5215.0], [57.1, 5222.0], [57.2, 5222.0], [57.3, 5222.0], [57.4, 5231.0], [57.5, 5231.0], [57.6, 5231.0], [57.7, 5248.0], [57.8, 5248.0], [57.9, 5248.0], [58.0, 5248.0], [58.1, 5257.0], [58.2, 5257.0], [58.3, 5257.0], [58.4, 5257.0], [58.5, 5257.0], [58.6, 5257.0], [58.7, 5333.0], [58.8, 5333.0], [58.9, 5333.0], [59.0, 5333.0], [59.1, 5345.0], [59.2, 5345.0], [59.3, 5345.0], [59.4, 5371.0], [59.5, 5371.0], [59.6, 5371.0], [59.7, 5385.0], [59.8, 5385.0], [59.9, 5385.0], [60.0, 5385.0], [60.1, 5429.0], [60.2, 5429.0], [60.3, 5429.0], [60.4, 5434.0], [60.5, 5434.0], [60.6, 5434.0], [60.7, 5484.0], [60.8, 5484.0], [60.9, 5484.0], [61.0, 5484.0], [61.1, 5491.0], [61.2, 5491.0], [61.3, 5491.0], [61.4, 5497.0], [61.5, 5497.0], [61.6, 5497.0], [61.7, 5527.0], [61.8, 5527.0], [61.9, 5527.0], [62.0, 5527.0], [62.1, 5527.0], [62.2, 5527.0], [62.3, 5527.0], [62.4, 5532.0], [62.5, 5532.0], [62.6, 5532.0], [62.7, 5540.0], [62.8, 5540.0], [62.9, 5540.0], [63.0, 5540.0], [63.1, 5549.0], [63.2, 5549.0], [63.3, 5549.0], [63.4, 5560.0], [63.5, 5560.0], [63.6, 5560.0], [63.7, 5560.0], [63.8, 5560.0], [63.9, 5560.0], [64.0, 5560.0], [64.1, 5564.0], [64.2, 5564.0], [64.3, 5564.0], [64.4, 5579.0], [64.5, 5579.0], [64.6, 5579.0], [64.7, 5585.0], [64.8, 5585.0], [64.9, 5585.0], [65.0, 5585.0], [65.1, 5595.0], [65.2, 5595.0], [65.3, 5595.0], [65.4, 5596.0], [65.5, 5596.0], [65.6, 5596.0], [65.7, 5634.0], [65.8, 5634.0], [65.9, 5634.0], [66.0, 5634.0], [66.1, 5701.0], [66.2, 5701.0], [66.3, 5701.0], [66.4, 5729.0], [66.5, 5729.0], [66.6, 5729.0], [66.7, 5731.0], [66.8, 5731.0], [66.9, 5731.0], [67.0, 5731.0], [67.1, 5740.0], [67.2, 5740.0], [67.3, 5740.0], [67.4, 5816.0], [67.5, 5816.0], [67.6, 5816.0], [67.7, 5819.0], [67.8, 5819.0], [67.9, 5819.0], [68.0, 5819.0], [68.1, 5834.0], [68.2, 5834.0], [68.3, 5834.0], [68.4, 5838.0], [68.5, 5838.0], [68.6, 5838.0], [68.7, 5840.0], [68.8, 5840.0], [68.9, 5840.0], [69.0, 5840.0], [69.1, 5904.0], [69.2, 5904.0], [69.3, 5904.0], [69.4, 5911.0], [69.5, 5911.0], [69.6, 5911.0], [69.7, 5953.0], [69.8, 5953.0], [69.9, 5953.0], [70.0, 5953.0], [70.1, 5976.0], [70.2, 5976.0], [70.3, 5976.0], [70.4, 6008.0], [70.5, 6008.0], [70.6, 6008.0], [70.7, 6016.0], [70.8, 6016.0], [70.9, 6016.0], [71.0, 6016.0], [71.1, 6031.0], [71.2, 6031.0], [71.3, 6031.0], [71.4, 6094.0], [71.5, 6094.0], [71.6, 6094.0], [71.7, 6115.0], [71.8, 6115.0], [71.9, 6115.0], [72.0, 6115.0], [72.1, 6130.0], [72.2, 6130.0], [72.3, 6130.0], [72.4, 6160.0], [72.5, 6160.0], [72.6, 6160.0], [72.7, 6218.0], [72.8, 6218.0], [72.9, 6218.0], [73.0, 6218.0], [73.1, 6279.0], [73.2, 6279.0], [73.3, 6279.0], [73.4, 6285.0], [73.5, 6285.0], [73.6, 6285.0], [73.7, 6356.0], [73.8, 6356.0], [73.9, 6356.0], [74.0, 6459.0], [74.1, 6459.0], [74.2, 6459.0], [74.3, 6459.0], [74.4, 6486.0], [74.5, 6486.0], [74.6, 6486.0], [74.7, 6500.0], [74.8, 6500.0], [74.9, 6500.0], [75.0, 6506.0], [75.1, 6506.0], [75.2, 6506.0], [75.3, 6506.0], [75.4, 6531.0], [75.5, 6531.0], [75.6, 6531.0], [75.7, 6537.0], [75.8, 6537.0], [75.9, 6537.0], [76.0, 6547.0], [76.1, 6547.0], [76.2, 6547.0], [76.3, 6547.0], [76.4, 6581.0], [76.5, 6581.0], [76.6, 6581.0], [76.7, 6598.0], [76.8, 6598.0], [76.9, 6598.0], [77.0, 6615.0], [77.1, 6615.0], [77.2, 6615.0], [77.3, 6615.0], [77.4, 6630.0], [77.5, 6630.0], [77.6, 6630.0], [77.7, 6632.0], [77.8, 6632.0], [77.9, 6632.0], [78.0, 6638.0], [78.1, 6638.0], [78.2, 6638.0], [78.3, 6638.0], [78.4, 6697.0], [78.5, 6697.0], [78.6, 6697.0], [78.7, 6712.0], [78.8, 6712.0], [78.9, 6712.0], [79.0, 6751.0], [79.1, 6751.0], [79.2, 6751.0], [79.3, 6751.0], [79.4, 6759.0], [79.5, 6759.0], [79.6, 6759.0], [79.7, 6941.0], [79.8, 6941.0], [79.9, 6941.0], [80.0, 6944.0], [80.1, 6944.0], [80.2, 6944.0], [80.3, 6944.0], [80.4, 6960.0], [80.5, 6960.0], [80.6, 6960.0], [80.7, 7052.0], [80.8, 7052.0], [80.9, 7052.0], [81.0, 7064.0], [81.1, 7064.0], [81.2, 7064.0], [81.3, 7064.0], [81.4, 7071.0], [81.5, 7071.0], [81.6, 7071.0], [81.7, 7117.0], [81.8, 7117.0], [81.9, 7117.0], [82.0, 7126.0], [82.1, 7126.0], [82.2, 7126.0], [82.3, 7126.0], [82.4, 7128.0], [82.5, 7128.0], [82.6, 7128.0], [82.7, 7145.0], [82.8, 7145.0], [82.9, 7145.0], [83.0, 7174.0], [83.1, 7174.0], [83.2, 7174.0], [83.3, 7174.0], [83.4, 7187.0], [83.5, 7187.0], [83.6, 7187.0], [83.7, 7195.0], [83.8, 7195.0], [83.9, 7195.0], [84.0, 7215.0], [84.1, 7215.0], [84.2, 7215.0], [84.3, 7215.0], [84.4, 7218.0], [84.5, 7218.0], [84.6, 7218.0], [84.7, 7219.0], [84.8, 7219.0], [84.9, 7219.0], [85.0, 7224.0], [85.1, 7224.0], [85.2, 7224.0], [85.3, 7224.0], [85.4, 7230.0], [85.5, 7230.0], [85.6, 7230.0], [85.7, 7232.0], [85.8, 7232.0], [85.9, 7232.0], [86.0, 7234.0], [86.1, 7234.0], [86.2, 7234.0], [86.3, 7234.0], [86.4, 7235.0], [86.5, 7235.0], [86.6, 7235.0], [86.7, 7241.0], [86.8, 7241.0], [86.9, 7241.0], [87.0, 7256.0], [87.1, 7256.0], [87.2, 7256.0], [87.3, 7256.0], [87.4, 7258.0], [87.5, 7258.0], [87.6, 7258.0], [87.7, 7259.0], [87.8, 7259.0], [87.9, 7259.0], [88.0, 7260.0], [88.1, 7260.0], [88.2, 7260.0], [88.3, 7260.0], [88.4, 7266.0], [88.5, 7266.0], [88.6, 7266.0], [88.7, 7276.0], [88.8, 7276.0], [88.9, 7276.0], [89.0, 7295.0], [89.1, 7295.0], [89.2, 7295.0], [89.3, 7295.0], [89.4, 7304.0], [89.5, 7304.0], [89.6, 7304.0], [89.7, 7304.0], [89.8, 7304.0], [89.9, 7304.0], [90.0, 7306.0], [90.1, 7306.0], [90.2, 7306.0], [90.3, 7306.0], [90.4, 7309.0], [90.5, 7309.0], [90.6, 7309.0], [90.7, 7310.0], [90.8, 7310.0], [90.9, 7310.0], [91.0, 7316.0], [91.1, 7316.0], [91.2, 7316.0], [91.3, 7316.0], [91.4, 7319.0], [91.5, 7319.0], [91.6, 7319.0], [91.7, 7325.0], [91.8, 7325.0], [91.9, 7325.0], [92.0, 7330.0], [92.1, 7330.0], [92.2, 7330.0], [92.3, 7330.0], [92.4, 7331.0], [92.5, 7331.0], [92.6, 7331.0], [92.7, 7334.0], [92.8, 7334.0], [92.9, 7334.0], [93.0, 7337.0], [93.1, 7337.0], [93.2, 7337.0], [93.3, 7337.0], [93.4, 7346.0], [93.5, 7346.0], [93.6, 7346.0], [93.7, 7351.0], [93.8, 7351.0], [93.9, 7351.0], [94.0, 7372.0], [94.1, 7372.0], [94.2, 7372.0], [94.3, 7372.0], [94.4, 7375.0], [94.5, 7375.0], [94.6, 7375.0], [94.7, 7378.0], [94.8, 7378.0], [94.9, 7378.0], [95.0, 7381.0], [95.1, 7381.0], [95.2, 7381.0], [95.3, 7381.0], [95.4, 7382.0], [95.5, 7382.0], [95.6, 7382.0], [95.7, 7385.0], [95.8, 7385.0], [95.9, 7385.0], [96.0, 7386.0], [96.1, 7386.0], [96.2, 7386.0], [96.3, 7386.0], [96.4, 7403.0], [96.5, 7403.0], [96.6, 7403.0], [96.7, 7405.0], [96.8, 7405.0], [96.9, 7405.0], [97.0, 7407.0], [97.1, 7407.0], [97.2, 7407.0], [97.3, 7407.0], [97.4, 7419.0], [97.5, 7419.0], [97.6, 7419.0], [97.7, 7424.0], [97.8, 7424.0], [97.9, 7424.0], [98.0, 7426.0], [98.1, 7426.0], [98.2, 7426.0], [98.3, 7426.0], [98.4, 7439.0], [98.5, 7439.0], [98.6, 7439.0], [98.7, 7441.0], [98.8, 7441.0], [98.9, 7441.0], [99.0, 7448.0], [99.1, 7448.0], [99.2, 7448.0], [99.3, 7448.0], [99.4, 7451.0], [99.5, 7451.0], [99.6, 7451.0], [99.7, 7455.0], [99.8, 7455.0], [99.9, 7455.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 113.0, "series": [{"data": [[300.0, 45.0], [600.0, 38.0], [700.0, 17.0], [100.0, 26.0], [200.0, 98.0], [400.0, 44.0], [800.0, 2.0], [900.0, 2.0], [500.0, 28.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[300.0, 36.0], [600.0, 23.0], [1200.0, 1.0], [700.0, 28.0], [100.0, 23.0], [200.0, 113.0], [400.0, 57.0], [800.0, 7.0], [900.0, 1.0], [500.0, 11.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 6.0], [700.0, 3.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 6.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 6.0], [1500.0, 3.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 6.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 3.0], [2200.0, 6.0], [2300.0, 7.0], [2400.0, 1.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 7.0], [2700.0, 6.0], [2900.0, 3.0], [3000.0, 5.0], [3100.0, 5.0], [3200.0, 6.0], [3300.0, 10.0], [3400.0, 6.0], [3500.0, 4.0], [3600.0, 16.0], [3700.0, 10.0], [4000.0, 2.0], [4200.0, 5.0], [4300.0, 10.0], [4400.0, 4.0], [4500.0, 14.0], [4600.0, 2.0], [4700.0, 5.0], [4800.0, 7.0], [5000.0, 3.0], [4900.0, 6.0], [5100.0, 5.0], [5200.0, 1.0], [5300.0, 5.0], [5400.0, 6.0], [5500.0, 5.0], [5600.0, 8.0], [5700.0, 7.0], [5800.0, 8.0], [5900.0, 17.0], [6000.0, 8.0], [6100.0, 5.0], [6200.0, 5.0], [6300.0, 3.0], [100.0, 4.0], [200.0, 6.0], [300.0, 1.0], [400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[600.0, 6.0], [700.0, 2.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 7.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 7.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 6.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 6.0], [2300.0, 4.0], [2400.0, 1.0], [2500.0, 3.0], [2600.0, 2.0], [2700.0, 7.0], [2800.0, 6.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 1.0], [3200.0, 10.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 4.0], [3600.0, 6.0], [3700.0, 4.0], [3800.0, 3.0], [3900.0, 5.0], [4000.0, 6.0], [4100.0, 12.0], [4200.0, 7.0], [4300.0, 7.0], [4400.0, 5.0], [4500.0, 1.0], [4600.0, 1.0], [4700.0, 2.0], [5100.0, 7.0], [4900.0, 1.0], [5200.0, 7.0], [5300.0, 4.0], [5400.0, 5.0], [5500.0, 12.0], [5600.0, 1.0], [5700.0, 4.0], [5800.0, 5.0], [5900.0, 4.0], [6000.0, 4.0], [6100.0, 3.0], [6200.0, 3.0], [6300.0, 1.0], [6400.0, 2.0], [6500.0, 7.0], [6600.0, 5.0], [6700.0, 3.0], [6900.0, 3.0], [7000.0, 3.0], [7100.0, 7.0], [7200.0, 16.0], [7300.0, 21.0], [7400.0, 11.0], [500.0, 4.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 219.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 526.0, "series": [{"data": [[0.0, 455.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 219.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 526.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 148.81333333333367, "minX": 1.70191548E12, "maxY": 148.81333333333367, "series": [{"data": [[1.70191548E12, 148.81333333333367]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191548E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 153.0, "minX": 1.0, "maxY": 7451.0, "series": [{"data": [[2.0, 386.0], [3.0, 286.0], [4.0, 354.0], [5.0, 311.0], [6.0, 527.0], [7.0, 380.0], [8.0, 391.0], [10.0, 606.5], [13.0, 555.0], [14.0, 444.0], [16.0, 517.5], [19.0, 637.0], [22.0, 594.6666666666666], [23.0, 703.0], [25.0, 589.5], [27.0, 530.0], [28.0, 506.0], [30.0, 699.5], [31.0, 588.0], [33.0, 615.0], [34.0, 635.0], [37.0, 743.0], [36.0, 620.5], [39.0, 602.0], [38.0, 666.0], [40.0, 677.0], [45.0, 629.75], [47.0, 560.0], [46.0, 670.5], [49.0, 668.0], [50.0, 603.0], [53.0, 704.0], [52.0, 720.5], [55.0, 595.0], [54.0, 576.0], [57.0, 635.0], [56.0, 445.0], [59.0, 628.0], [58.0, 717.0], [61.0, 665.0], [60.0, 494.0], [63.0, 780.0], [62.0, 976.0], [67.0, 702.0], [66.0, 786.0], [65.0, 735.0], [64.0, 802.0], [71.0, 694.0], [70.0, 663.0], [69.0, 678.0], [68.0, 737.0], [74.0, 849.0], [73.0, 784.0], [72.0, 737.0], [79.0, 672.0], [78.0, 658.0], [76.0, 664.5], [83.0, 618.0], [82.0, 673.0], [81.0, 608.0], [80.0, 561.0], [87.0, 677.0], [86.0, 550.0], [85.0, 582.0], [84.0, 568.0], [91.0, 415.0], [90.0, 523.0], [89.0, 462.0], [88.0, 503.0], [95.0, 907.0], [94.0, 500.0], [93.0, 386.0], [92.0, 427.0], [99.0, 481.0], [98.0, 383.0], [97.0, 391.0], [96.0, 437.0], [103.0, 460.0], [102.0, 429.0], [101.0, 600.0], [100.0, 503.0], [105.0, 444.0], [104.0, 515.0], [111.0, 460.0], [110.0, 531.0], [109.0, 427.0], [108.0, 490.6666666666667], [115.0, 529.0], [114.0, 524.0], [113.0, 475.0], [112.0, 463.0], [119.0, 441.0], [118.0, 477.0], [117.0, 473.0], [116.0, 604.0], [123.0, 480.0], [122.0, 449.0], [121.0, 454.0], [120.0, 485.0], [127.0, 473.0], [126.0, 465.0], [125.0, 509.0], [124.0, 428.0], [135.0, 390.0], [134.0, 469.0], [133.0, 418.0], [132.0, 449.0], [131.0, 417.0], [130.0, 545.0], [129.0, 360.0], [128.0, 430.0], [143.0, 379.0], [142.0, 453.0], [141.0, 471.0], [140.0, 457.0], [139.0, 514.0], [138.0, 466.0], [137.0, 426.0], [136.0, 435.0], [151.0, 271.0], [150.0, 350.0], [149.0, 272.0], [148.0, 350.0], [147.0, 327.0], [146.0, 376.0], [145.0, 379.0], [144.0, 432.0], [159.0, 417.0], [158.0, 408.0], [157.0, 298.0], [156.0, 301.0], [154.0, 390.0], [153.0, 285.0], [152.0, 323.0], [167.0, 296.0], [166.0, 346.0], [165.0, 305.0], [164.0, 389.0], [163.0, 243.0], [162.0, 331.0], [161.0, 363.0], [160.0, 346.0], [175.0, 305.0], [174.0, 336.0], [173.0, 385.0], [172.0, 237.0], [171.0, 291.0], [170.0, 321.0], [169.0, 241.0], [168.0, 250.0], [183.0, 276.0], [182.0, 317.0], [181.0, 318.0], [180.0, 290.0], [179.0, 364.0], [178.0, 364.0], [177.0, 356.0], [176.0, 375.0], [191.0, 272.0], [190.0, 348.0], [189.0, 371.0], [188.0, 301.0], [187.0, 333.0], [186.0, 248.5], [184.0, 306.0], [198.0, 270.0], [197.0, 337.0], [196.0, 289.0], [195.0, 291.0], [194.0, 332.0], [193.0, 266.0], [192.0, 270.0], [207.0, 205.0], [206.0, 224.0], [205.0, 216.0], [204.0, 222.0], [203.0, 294.0], [202.0, 262.0], [201.0, 287.0], [200.0, 269.5], [215.0, 213.0], [214.0, 175.0], [213.0, 231.0], [212.0, 238.0], [211.0, 231.0], [210.0, 220.0], [209.0, 222.5], [223.0, 215.0], [222.0, 225.0], [221.0, 222.0], [220.0, 229.0], [219.0, 236.0], [218.0, 231.0], [217.0, 218.0], [216.0, 233.0], [231.0, 247.0], [230.0, 234.0], [229.0, 237.0], [228.0, 219.0], [227.0, 216.0], [226.0, 240.0], [225.0, 254.0], [224.0, 223.0], [239.0, 213.0], [238.0, 248.0], [237.0, 222.5], [235.0, 213.0], [234.0, 242.0], [233.0, 247.0], [241.0, 204.4], [240.0, 213.5], [242.0, 201.0], [247.0, 181.0], [246.0, 184.0], [245.0, 222.0], [244.0, 214.0], [243.0, 217.0], [254.0, 210.0], [255.0, 224.0], [253.0, 195.0], [252.0, 219.0], [251.0, 200.0], [250.0, 217.0], [249.0, 233.0], [248.0, 236.0], [270.0, 186.5], [257.0, 219.0], [256.0, 217.0], [259.0, 212.0], [258.0, 210.5], [263.0, 214.0], [262.0, 208.0], [261.0, 184.0], [260.0, 207.0], [271.0, 233.0], [269.0, 188.0], [268.0, 190.0], [267.0, 219.0], [266.0, 192.0], [265.0, 187.0], [264.0, 221.0], [286.0, 185.0], [277.0, 194.0], [276.0, 221.0], [287.0, 153.0], [285.0, 193.0], [275.0, 197.0], [274.0, 177.0], [273.0, 199.0], [283.0, 205.0], [282.0, 212.0], [281.0, 224.0], [280.0, 192.0], [279.0, 202.0], [278.0, 193.0], [288.0, 159.0], [1.0, 337.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[148.81333333333322, 398.6700000000002]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 710.0], [3.0, 738.0], [4.0, 669.0], [5.0, 688.0], [6.0, 639.0], [7.0, 619.0], [8.0, 600.0], [10.0, 688.5], [13.0, 674.0], [14.0, 598.0], [16.0, 1053.0], [19.0, 835.6666666666666], [22.0, 712.6666666666666], [23.0, 760.0], [25.0, 850.0], [27.0, 725.0], [28.0, 653.0], [30.0, 740.0], [31.0, 759.0], [33.0, 772.0], [34.0, 725.0], [37.0, 765.0], [36.0, 740.0], [39.0, 751.0], [38.0, 770.0], [40.0, 695.0], [45.0, 736.25], [47.0, 756.0], [46.0, 728.0], [49.0, 775.0], [50.0, 652.0], [53.0, 669.0], [52.0, 699.5], [55.0, 775.0], [54.0, 742.0], [57.0, 706.0], [56.0, 825.0], [59.0, 651.0], [58.0, 676.0], [61.0, 629.0], [60.0, 663.0], [63.0, 473.0], [62.0, 504.0], [67.0, 545.0], [66.0, 522.0], [65.0, 473.0], [64.0, 461.0], [71.0, 440.0], [70.0, 450.0], [69.0, 499.0], [68.0, 388.0], [74.0, 474.0], [73.0, 463.0], [72.0, 497.0], [79.0, 450.0], [78.0, 432.0], [76.0, 439.5], [83.0, 498.0], [82.0, 419.0], [81.0, 409.0], [80.0, 502.0], [87.0, 473.0], [86.0, 438.0], [85.0, 453.0], [84.0, 459.0], [91.0, 430.0], [90.0, 430.0], [89.0, 369.0], [88.0, 451.0], [95.0, 450.0], [94.0, 408.0], [93.0, 458.0], [92.0, 369.0], [99.0, 492.0], [98.0, 433.0], [97.0, 518.0], [96.0, 574.0], [103.0, 400.0], [102.0, 532.0], [101.0, 486.0], [100.0, 529.0], [105.0, 428.0], [104.0, 469.0], [111.0, 505.0], [110.0, 447.0], [109.0, 533.0], [108.0, 447.0], [115.0, 430.0], [114.0, 454.0], [113.0, 486.0], [112.0, 475.0], [119.0, 475.0], [118.0, 444.0], [117.0, 497.0], [116.0, 392.0], [123.0, 435.0], [122.0, 446.0], [121.0, 461.0], [120.0, 444.0], [127.0, 462.0], [126.0, 480.0], [125.0, 391.0], [124.0, 421.0], [135.0, 317.0], [134.0, 387.0], [133.0, 444.0], [132.0, 442.0], [131.0, 392.0], [130.0, 297.0], [129.0, 435.0], [128.0, 423.0], [143.0, 387.0], [142.0, 330.0], [141.0, 315.0], [140.0, 406.0], [139.0, 343.0], [138.0, 325.0], [137.0, 320.0], [136.0, 425.0], [151.0, 285.0], [150.0, 310.0], [149.0, 272.0], [148.0, 350.0], [147.0, 309.0], [146.0, 331.0], [145.0, 293.0], [144.0, 328.0], [159.0, 339.0], [158.0, 297.0], [157.0, 298.0], [156.0, 304.0], [154.0, 331.0], [153.0, 254.0], [152.0, 284.0], [167.0, 298.0], [166.0, 293.0], [165.0, 305.0], [164.0, 313.0], [163.0, 315.0], [162.0, 273.0], [161.0, 420.0], [160.0, 259.0], [175.0, 296.0], [174.0, 320.0], [173.0, 244.0], [172.0, 270.0], [171.0, 294.0], [170.0, 327.0], [169.0, 269.0], [168.0, 311.0], [183.0, 343.0], [182.0, 235.0], [181.0, 297.0], [180.0, 371.0], [179.0, 328.0], [178.0, 359.0], [177.0, 306.0], [176.0, 334.0], [191.0, 259.0], [190.0, 225.0], [189.0, 219.0], [188.0, 271.0], [187.0, 232.0], [186.0, 301.5], [184.0, 245.0], [198.0, 223.0], [197.0, 216.0], [196.0, 226.0], [195.0, 226.0], [194.0, 235.0], [193.0, 222.0], [192.0, 246.0], [207.0, 221.0], [206.0, 223.0], [205.0, 225.0], [204.0, 217.0], [203.0, 216.0], [202.0, 220.0], [201.0, 212.0], [200.0, 218.0], [215.0, 222.0], [214.0, 238.0], [213.0, 234.0], [212.0, 213.0], [211.0, 234.0], [210.0, 230.0], [209.0, 234.5], [223.0, 228.0], [222.0, 211.0], [221.0, 240.0], [220.0, 227.0], [219.0, 213.0], [218.0, 228.0], [217.0, 226.0], [216.0, 216.0], [231.0, 200.0], [230.0, 218.0], [229.0, 231.0], [228.0, 229.0], [227.0, 242.0], [226.0, 233.0], [225.0, 275.0], [224.0, 230.0], [239.0, 199.0], [238.0, 217.0], [237.0, 209.0], [235.0, 220.0], [234.0, 216.0], [233.0, 226.5], [241.0, 198.4], [240.0, 197.0], [242.0, 214.33333333333334], [247.0, 211.0], [246.0, 225.0], [245.0, 219.0], [244.0, 221.0], [243.0, 224.0], [254.0, 210.5], [255.0, 202.0], [253.0, 206.0], [252.0, 221.0], [251.0, 195.0], [250.0, 216.0], [249.0, 214.0], [248.0, 196.0], [270.0, 174.0], [257.0, 237.0], [256.0, 218.0], [259.0, 205.0], [258.0, 213.0], [263.0, 200.0], [262.0, 209.0], [261.0, 192.0], [260.0, 194.0], [271.0, 201.0], [269.0, 191.0], [268.0, 206.0], [267.0, 219.0], [266.0, 208.0], [265.0, 207.0], [264.0, 210.0], [286.0, 189.0], [277.0, 205.0], [276.0, 184.0], [287.0, 195.0], [285.0, 198.5], [275.0, 203.0], [274.0, 202.0], [273.0, 209.0], [283.0, 207.0], [282.0, 195.0], [281.0, 178.0], [280.0, 206.0], [279.0, 189.0], [278.0, 166.0], [288.0, 190.0], [1.0, 690.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[148.81333333333322, 394.96333333333337]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 6235.0], [3.0, 6322.0], [4.0, 6399.0], [5.0, 6242.0], [6.0, 6143.0], [7.0, 6316.0], [8.0, 6232.0], [10.0, 6114.5], [13.0, 6100.666666666667], [14.0, 6173.0], [16.0, 5771.0], [19.0, 5897.333333333333], [22.0, 6028.0], [23.0, 5987.0], [25.0, 5990.5], [27.0, 6079.5], [28.0, 6175.0], [30.0, 5835.0], [31.0, 5990.0], [33.0, 5992.5], [34.0, 5944.0], [37.0, 5787.0], [36.0, 5915.0], [39.0, 5998.0], [38.0, 5681.0], [40.0, 6000.0], [45.0, 5885.5], [47.0, 5993.0], [46.0, 5919.5], [49.0, 5812.0], [50.0, 6070.0], [53.0, 5679.0], [52.0, 5762.0], [55.0, 5700.0], [54.0, 5808.0], [57.0, 5787.0], [56.0, 5990.0], [59.0, 5681.0], [58.0, 5670.0], [61.0, 5647.0], [60.0, 5787.0], [63.0, 5505.0], [62.0, 5100.0], [67.0, 5385.0], [66.0, 5389.0], [65.0, 5504.0], [64.0, 5488.0], [71.0, 5464.0], [70.0, 5502.0], [69.0, 5461.0], [68.0, 5505.0], [74.0, 4895.0], [73.0, 5038.0], [72.0, 5121.0], [79.0, 5384.0], [78.0, 5318.0], [76.0, 5435.0], [83.0, 4999.0], [82.0, 5367.0], [81.0, 5483.0], [80.0, 5423.0], [87.0, 4866.0], [86.0, 4988.0], [85.0, 5125.0], [84.0, 5103.0], [91.0, 5249.0], [90.0, 4866.0], [89.0, 5002.0], [88.0, 4999.0], [95.0, 4674.0], [94.0, 4832.0], [93.0, 4887.0], [92.0, 4903.0], [99.0, 4865.0], [98.0, 5095.0], [97.0, 4995.0], [96.0, 4997.0], [103.0, 4774.0], [102.0, 4768.0], [101.0, 4730.0], [100.0, 4808.0], [105.0, 4723.0], [104.0, 4595.0], [111.0, 4584.0], [110.0, 4586.0], [109.0, 4600.0], [108.0, 4642.666666666667], [115.0, 4568.0], [114.0, 4562.0], [113.0, 4571.0], [112.0, 4589.0], [119.0, 4581.0], [118.0, 4569.0], [117.0, 4363.0], [116.0, 4349.0], [123.0, 4232.0], [122.0, 4589.0], [121.0, 4248.0], [120.0, 4456.0], [127.0, 4322.0], [126.0, 4426.0], [125.0, 4219.0], [124.0, 4585.0], [135.0, 4208.0], [134.0, 4359.0], [133.0, 4369.0], [132.0, 4357.0], [131.0, 4448.0], [130.0, 4341.0], [129.0, 4427.0], [128.0, 4575.0], [143.0, 3737.0], [142.0, 4013.0], [141.0, 3704.0], [140.0, 3743.0], [139.0, 4272.0], [138.0, 4341.0], [137.0, 4357.0], [136.0, 4352.0], [151.0, 3632.0], [150.0, 3640.0], [149.0, 3737.0], [148.0, 3657.0], [147.0, 3700.0], [146.0, 3736.0], [145.0, 3697.0], [144.0, 4032.0], [159.0, 3727.0], [158.0, 3731.0], [157.0, 3601.0], [156.0, 3632.5], [154.0, 3543.0], [153.0, 3672.0], [152.0, 3670.0], [167.0, 3602.0], [166.0, 3631.0], [165.0, 3732.0], [164.0, 3688.0], [163.0, 3551.0], [162.0, 3747.0], [161.0, 3675.0], [160.0, 3543.0], [175.0, 3486.0], [174.0, 3445.0], [173.0, 3480.0], [172.0, 3600.0], [171.0, 3535.0], [170.0, 3491.0], [169.0, 3617.0], [168.0, 3602.0], [183.0, 3359.0], [182.0, 3420.0], [181.0, 3370.0], [180.0, 3354.0], [179.0, 3342.0], [178.0, 3366.0], [177.0, 3419.0], [176.0, 3378.0], [191.0, 3219.0], [190.0, 3219.0], [189.0, 3202.0], [188.0, 3276.0], [187.0, 3316.0], [186.0, 3353.5], [184.0, 3349.0], [198.0, 3110.0], [197.0, 3112.0], [196.0, 3144.0], [195.0, 3142.0], [194.0, 3113.0], [193.0, 3200.0], [192.0, 3210.0], [207.0, 2824.0], [206.0, 2861.0], [205.0, 2988.0], [204.0, 3030.0], [203.0, 2972.0], [202.0, 3032.0], [201.0, 3049.0], [200.0, 3058.5], [215.0, 2706.0], [214.0, 2857.0], [213.0, 2788.0], [212.0, 2812.0], [211.0, 2932.0], [210.0, 2790.0], [209.0, 2784.0], [223.0, 2532.0], [222.0, 2561.0], [221.0, 2608.0], [220.0, 2588.0], [219.0, 2814.0], [218.0, 2816.0], [217.0, 2784.0], [216.0, 2855.0], [231.0, 2277.0], [230.0, 2287.0], [229.0, 2363.0], [228.0, 2329.0], [227.0, 2343.0], [226.0, 2335.0], [225.0, 2320.0], [224.0, 2422.0], [239.0, 1169.0], [238.0, 2137.0], [237.0, 2312.0], [235.0, 2392.0], [234.0, 2280.0], [233.0, 2259.5], [241.0, 607.8], [240.0, 1163.0], [242.0, 833.3333333333334], [247.0, 1862.0], [246.0, 1962.0], [245.0, 1857.0], [244.0, 1829.0], [243.0, 1868.0], [254.0, 1018.0], [255.0, 1638.0], [253.0, 1886.0], [252.0, 1844.0], [251.0, 1768.0], [250.0, 1909.0], [249.0, 1921.0], [248.0, 1780.0], [270.0, 796.0], [257.0, 188.0], [256.0, 1586.0], [259.0, 1391.0], [258.0, 1529.0], [263.0, 1462.0], [262.0, 1481.0], [261.0, 1552.0], [260.0, 1477.0], [271.0, 1055.0], [269.0, 1117.0], [268.0, 1073.0], [267.0, 1253.0], [266.0, 1437.0], [265.0, 1310.0], [264.0, 1433.0], [286.0, 667.0], [277.0, 599.5], [276.0, 1040.0], [287.0, 532.0], [285.0, 630.5], [275.0, 990.0], [274.0, 1029.0], [273.0, 1053.5], [283.0, 684.0], [282.0, 664.0], [281.0, 712.0], [280.0, 743.0], [279.0, 689.0], [278.0, 703.0], [288.0, 675.0], [1.0, 6231.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[148.81333333333322, 3744.633333333333]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 7331.0], [3.0, 7346.0], [4.0, 7424.0], [5.0, 7241.0], [6.0, 7310.0], [7.0, 7316.0], [8.0, 7224.0], [10.0, 7410.5], [13.0, 7329.666666666667], [14.0, 7215.0], [16.0, 7341.5], [19.0, 7370.333333333333], [22.0, 7335.666666666667], [23.0, 7451.0], [25.0, 7430.0], [27.0, 7334.5], [28.0, 7334.0], [30.0, 7274.5], [31.0, 7337.0], [33.0, 7379.5], [34.0, 7304.0], [37.0, 7295.0], [36.0, 7275.5], [39.0, 7351.0], [38.0, 7117.0], [40.0, 7372.0], [45.0, 7251.5], [47.0, 7309.0], [46.0, 7318.0], [49.0, 7255.0], [50.0, 7325.0], [53.0, 7052.0], [52.0, 7182.0], [55.0, 7071.0], [54.0, 7126.0], [57.0, 7128.0], [56.0, 7260.0], [59.0, 6960.0], [58.0, 7064.0], [61.0, 6941.0], [60.0, 6944.0], [63.0, 6759.0], [62.0, 6581.0], [67.0, 6632.0], [66.0, 6697.0], [65.0, 6712.0], [64.0, 6751.0], [71.0, 6598.0], [70.0, 6615.0], [69.0, 6638.0], [68.0, 6630.0], [74.0, 6218.0], [73.0, 6285.0], [72.0, 6356.0], [79.0, 6506.0], [78.0, 6408.0], [76.0, 6539.0], [83.0, 6115.0], [82.0, 6459.0], [81.0, 6500.0], [80.0, 6486.0], [87.0, 6016.0], [86.0, 5976.0], [85.0, 6160.0], [84.0, 6130.0], [91.0, 6094.0], [90.0, 5819.0], [89.0, 5834.0], [88.0, 5953.0], [95.0, 6031.0], [94.0, 5740.0], [93.0, 5731.0], [92.0, 5701.0], [99.0, 5838.0], [98.0, 5911.0], [97.0, 5904.0], [96.0, 6008.0], [103.0, 5634.0], [102.0, 5729.0], [101.0, 5816.0], [100.0, 5840.0], [105.0, 5595.0], [104.0, 5579.0], [111.0, 5549.0], [110.0, 5564.0], [109.0, 5560.0], [108.0, 5580.333333333333], [115.0, 5527.0], [114.0, 5540.0], [113.0, 5532.0], [112.0, 5527.0], [119.0, 5497.0], [118.0, 5491.0], [117.0, 5333.0], [116.0, 5345.0], [123.0, 5147.0], [122.0, 5484.0], [121.0, 5164.0], [120.0, 5385.0], [127.0, 5257.0], [126.0, 5371.0], [125.0, 5119.0], [124.0, 5434.0], [135.0, 4916.0], [134.0, 5215.0], [133.0, 5231.0], [132.0, 5248.0], [131.0, 5257.0], [130.0, 5183.0], [129.0, 5222.0], [128.0, 5429.0], [143.0, 4503.0], [142.0, 4796.0], [141.0, 4490.0], [140.0, 4606.0], [139.0, 5129.0], [138.0, 5133.0], [137.0, 5103.0], [136.0, 5212.0], [151.0, 4188.0], [150.0, 4301.0], [149.0, 4281.0], [148.0, 4359.0], [147.0, 4336.0], [146.0, 4443.0], [145.0, 4369.0], [144.0, 4792.0], [159.0, 4484.0], [158.0, 4436.0], [157.0, 4197.0], [156.0, 4237.5], [154.0, 4265.0], [153.0, 4211.0], [152.0, 4277.0], [167.0, 4196.0], [166.0, 4270.0], [165.0, 4342.0], [164.0, 4390.0], [163.0, 4110.0], [162.0, 4351.0], [161.0, 4459.0], [160.0, 4149.0], [175.0, 4087.0], [174.0, 4101.0], [173.0, 4109.0], [172.0, 4107.0], [171.0, 4120.0], [170.0, 4139.0], [169.0, 4127.0], [168.0, 4163.0], [183.0, 3979.0], [182.0, 3972.0], [181.0, 3985.0], [180.0, 4015.0], [179.0, 4034.0], [178.0, 4089.0], [177.0, 4081.0], [176.0, 4087.0], [191.0, 3750.0], [190.0, 3792.0], [189.0, 3792.0], [188.0, 3849.0], [187.0, 3881.0], [186.0, 3904.0], [184.0, 3900.0], [198.0, 3603.0], [197.0, 3665.0], [196.0, 3659.0], [195.0, 3659.0], [194.0, 3680.0], [193.0, 3688.0], [192.0, 3727.0], [207.0, 3250.0], [206.0, 3308.0], [205.0, 3429.0], [204.0, 3469.0], [203.0, 3482.0], [202.0, 3514.0], [201.0, 3549.0], [200.0, 3546.0], [215.0, 3142.0], [214.0, 3270.0], [213.0, 3253.0], [212.0, 3264.0], [211.0, 3397.0], [210.0, 3240.0], [209.0, 3242.0], [223.0, 2976.0], [222.0, 2998.0], [221.0, 3070.0], [220.0, 3044.0], [219.0, 3262.0], [218.0, 3274.0], [217.0, 3228.0], [216.0, 3304.0], [231.0, 2724.0], [230.0, 2739.0], [229.0, 2831.0], [228.0, 2777.0], [227.0, 2801.0], [226.0, 2808.0], [225.0, 2849.0], [224.0, 2875.0], [239.0, 1581.5], [238.0, 2603.0], [237.0, 2743.5], [235.0, 2825.0], [234.0, 2738.0], [233.0, 2733.0], [241.0, 1011.6], [240.0, 1574.0], [242.0, 1249.3333333333335], [247.0, 2254.0], [246.0, 2371.0], [245.0, 2298.0], [244.0, 2264.0], [243.0, 2310.0], [254.0, 1439.5], [255.0, 2064.0], [253.0, 2287.0], [252.0, 2284.0], [251.0, 2163.0], [250.0, 2342.0], [249.0, 2367.0], [248.0, 2212.0], [270.0, 1156.5], [257.0, 645.0], [256.0, 2020.0], [259.0, 1809.0], [258.0, 1952.0], [263.0, 1877.0], [262.0, 1898.0], [261.0, 1927.0], [260.0, 1878.0], [271.0, 1490.0], [269.0, 1496.0], [268.0, 1469.0], [267.0, 1690.0], [266.0, 1836.0], [265.0, 1704.0], [264.0, 1863.0], [286.0, 1041.0], [277.0, 998.0], [276.0, 1445.0], [287.0, 880.0], [285.0, 1021.5], [275.0, 1390.0], [274.0, 1408.0], [273.0, 1461.5], [283.0, 1095.0], [282.0, 1071.0], [281.0, 1113.0], [280.0, 1140.0], [279.0, 1080.0], [278.0, 1062.0], [288.0, 1024.0], [1.0, 7258.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[148.81333333333322, 4538.416666666666]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 288.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4190.0, "minX": 1.70191548E12, "maxY": 66709.4, "series": [{"data": [[1.70191548E12, 66709.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70191548E12, 4190.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191548E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 394.96333333333337, "minX": 1.70191548E12, "maxY": 4538.416666666666, "series": [{"data": [[1.70191548E12, 398.6700000000002]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191548E12, 394.96333333333337]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191548E12, 3744.633333333333]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191548E12, 4538.416666666666]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191548E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 383.14333333333326, "minX": 1.70191548E12, "maxY": 3744.5366666666655, "series": [{"data": [[1.70191548E12, 387.7133333333334]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191548E12, 383.14333333333326]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191548E12, 3744.5366666666655]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191548E12, 3744.5366666666655]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191548E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70191548E12, "maxY": 3734.1200000000013, "series": [{"data": [[1.70191548E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70191548E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70191548E12, 3734.1200000000013]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70191548E12, 3734.1200000000013]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191548E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 153.0, "minX": 1.70191548E12, "maxY": 7455.0, "series": [{"data": [[1.70191548E12, 7455.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70191548E12, 153.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70191548E12, 5989.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70191548E12, 7385.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70191548E12, 743.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70191548E12, 6943.85]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191548E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 220.0, "minX": 54.0, "maxY": 5369.0, "series": [{"data": [[131.0, 762.0], [155.0, 385.0], [160.0, 2698.0], [168.0, 4168.5], [194.0, 5369.0], [102.0, 220.0], [54.0, 235.0], [116.0, 754.0], [120.0, 973.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 194.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 210.5, "minX": 54.0, "maxY": 4585.5, "series": [{"data": [[131.0, 748.0], [155.0, 375.0], [160.0, 2282.5], [168.0, 3547.0], [194.0, 4585.5], [102.0, 212.0], [54.0, 210.5], [116.0, 748.5], [120.0, 773.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 194.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.70191548E12, "maxY": 20.0, "series": [{"data": [[1.70191548E12, 20.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191548E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.70191548E12, "maxY": 10.0, "series": [{"data": [[1.70191548E12, 10.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70191548E12, 5.0]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70191548E12, 5.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70191548E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.70191548E12, "maxY": 5.0, "series": [{"data": [[1.70191548E12, 5.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70191548E12, 5.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70191548E12, 5.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.70191548E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191548E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.70191548E12, "maxY": 20.0, "series": [{"data": [[1.70191548E12, 20.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70191548E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

